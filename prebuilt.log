2023-11-16:22:17:58,137 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-16:22:17:58,137 INFO     [quality_test.py:48] customer request: Summarize the sales of Apparel products per city, but exclude all sales that had an operating margin of less than 30%.
2023-11-16:22:18:45,786 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-16:22:18:45,786 INFO     [quality_test.py:48] customer request: Summarize the sales of Apparel products per city, but exclude all sales that had an operating margin of less than 30%.
2023-11-16:22:18:45,985 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:18:45,985 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Summarize the sales of Apparel products per city, but exclude all sales that had an operating margin of less than 30%. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-16:22:18:45,985 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-16:22:18:45,987 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-16:22:18:47,468 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:18:47,470 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=787 request_id=f4ad37328003d2305a73310f6b514e2e response_code=200
2023-11-16:22:18:47,476 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-16:22:18:48,131 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-16:22:18:48,142 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-16:22:18:48,518 DEBUG    [config.py:244] Starting component System
2023-11-16:22:18:48,518 DEBUG    [config.py:244] Starting component Posthog
2023-11-16:22:18:48,518 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-16:22:18:48,518 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-16:22:18:48,519 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-16:22:18:48,531 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-16:22:18:48,531 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-16:22:18:48,932 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-16:22:18:49,039 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-16:22:18:49,393 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:18:50,055 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:18:50,055 INFO     [vector_search.py:103] Element: (1700092401406344, 'Sales ($)') - Score: 0.8653542399406433
2023-11-16:22:18:50,055 INFO     [vector_search.py:103] Element: (1700092408519074, 'Total Sales') - Score: 0.7782794237136841
2023-11-16:22:18:50,056 INFO     [vector_search.py:103] Element: (1700092408519074, 'Sales Method') - Score: 0.7738610506057739
2023-11-16:22:18:50,056 INFO     [vector_search.py:103] Element: (1700092408519074, 'Retailer') - Score: 0.654481053352356
2023-11-16:22:18:50,056 INFO     [vector_search.py:103] Element: (1700092377314948, 'Revenue') - Score: 0.6518972516059875
2023-11-16:22:18:50,073 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:18:50,074 INFO     [vector_search.py:103] Element: (1700092408519074, 'Product') - Score: 1.000000238418579
2023-11-16:22:18:50,074 INFO     [vector_search.py:103] Element: (1700092353790055, 'Product URL') - Score: 0.6319379210472107
2023-11-16:22:18:50,074 INFO     [vector_search.py:103] Element: (1700092353790055, 'Product ID') - Score: 0.6269428730010986
2023-11-16:22:18:50,074 INFO     [vector_search.py:103] Element: (1700092381859424, 'Device') - Score: 0.6110539436340332
2023-11-16:22:18:50,074 INFO     [vector_search.py:103] Element: (1700092385555876, 'Item Purchased') - Score: 0.5965970754623413
2023-11-16:22:18:50,097 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:18:50,097 INFO     [vector_search.py:103] Element: (1700092390869348, 'City') - Score: 1.0
2023-11-16:22:18:50,097 INFO     [vector_search.py:103] Element: (1700092408519074, 'City') - Score: 1.0
2023-11-16:22:18:50,098 INFO     [vector_search.py:103] Element: (1700092385555876, 'Location') - Score: 0.648856520652771
2023-11-16:22:18:50,098 INFO     [vector_search.py:103] Element: (1700092404695104, 'Location') - Score: 0.648856520652771
2023-11-16:22:18:50,098 INFO     [vector_search.py:103] Element: (1700092390869348, 'State') - Score: 0.5410630106925964
2023-11-16:22:18:50,157 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:18:50,158 INFO     [vector_search.py:103] Element: (1700092408519074, 'Operating Margin') - Score: 1.0
2023-11-16:22:18:50,158 INFO     [vector_search.py:103] Element: (170009239686281, 'Gross Margin') - Score: 0.7676495313644409
2023-11-16:22:18:50,158 INFO     [vector_search.py:103] Element: (1700092408519074, 'Operating Profit') - Score: 0.51230788230896
2023-11-16:22:18:50,158 INFO     [vector_search.py:103] Element: (1700092377314948, 'OperatingSystems') - Score: 0.36201080679893494
2023-11-16:22:18:50,158 INFO     [vector_search.py:103] Element: (170009239686281, 'Gross Profit') - Score: 0.34436967968940735
2023-11-16:22:18:50,158 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-16:22:18:50,773 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:18:53,981 INFO     [prebuilt.py:537] 
      Retailer  Retailer ID Invoice Date     Region     State      City  \
0  Foot Locker      1185732   2020-01-01  Northeast  New York  New York   
1  Foot Locker      1185732   2020-01-02  Northeast  New York  New York   
2  Foot Locker      1185732   2020-01-03  Northeast  New York  New York   

                   Product  Price per Unit  Units Sold  Total Sales  \
0    Men's Street Footwear              50        1200     600000.0   
1  Men's Athletic Footwear              50        1000     500000.0   
2  Women's Street Footwear              40        1000     400000.0   

   Operating Profit  Operating Margin Sales Method  
0          300000.0              0.50     In-store  
1          150000.0              0.30     In-store  
2          140000.0              0.35     In-store  
2023-11-16:22:18:54,114 INFO     [logger.py:73] Question: Summarize the sales of Apparel products per city, but exclude all sales that had an operating margin of less than 30%.
2023-11-16:22:18:54,118 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-16:22:18:54,119 INFO     [logger.py:73] Prompt ID: e150ec5f-bfc7-450b-acbb-b30f6614f1e6
2023-11-16:22:18:54,152 INFO     [logger.py:73] Using cached response
2023-11-16:22:18:54,154 INFO     [logger.py:73] Code generated:
```
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    # Filter the dataframe for Apparel products and operating margin of 30% or more
    df_filtered = dfs[0][(dfs[0]['Product'].str.contains('Apparel')) & (dfs[0]['Operating Margin'] >= 0.3)]
    
    # Group by City and sum the Total Sales
    df_grouped = df_filtered.groupby('City')['Total Sales'].sum().reset_index()
    
    return { "type": "dataframe", "value": df_grouped }
```

2023-11-16:22:18:54,156 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    df_filtered = dfs[0][dfs[0]['Product'].str.contains('Apparel') & (dfs[0]['Operating Margin'] >= 0.3)]
    df_grouped = df_filtered.groupby('City')['Total Sales'].sum().reset_index()
    return {'type': 'dataframe', 'value': df_grouped}
        ```
2023-11-16:22:18:54,174 INFO     [logger.py:73] Answer: {'type': 'dataframe', 'value':               City  Total Sales
0           Albany    8412662.0
1      Albuquerque    2671288.0
2        Anchorage    2921273.0
3          Atlanta    2900474.0
4        Baltimore    2413213.0
5         Billings    2091564.0
6       Birmingham    5987852.0
7            Boise    6107046.0
8           Boston    2402402.0
9       Burlington    4721753.0
10      Charleston   14612661.0
11       Charlotte    8797552.0
12        Cheyenne    3130736.0
13         Chicago    3063686.0
14        Columbus    6750935.0
15          Dallas    6785812.0
16          Denver    3627688.0
17      Des Moines    2576392.0
18         Detroit    6705667.0
19           Fargo    2602995.0
20        Hartford    3871998.0
21        Honolulu    4147468.0
22         Houston    8302223.0
23    Indianapolis    3102446.0
24         Jackson    5759109.0
25       Knoxville    6143882.0
26       Las Vegas    2701010.0
27     Little Rock    4680038.0
28     Los Angeles    3919818.0
29      Louisville    3330060.0
30      Manchester    5312293.0
31           Miami   11674682.0
32       Milwaukee    2666566.0
33     Minneapolis    2218654.0
34     New Orleans    7391576.0
35        New York    7106404.0
36          Newark    3266303.0
37   Oklahoma City    3853718.0
38           Omaha    1732858.0
39         Orlando    5408293.0
40    Philadelphia    2636884.0
41         Phoenix    1989536.0
42        Portland    8556229.0
43      Providence    2619473.0
44        Richmond    6758475.0
45  Salt Lake City    3539213.0
46   San Francisco    5096702.0
47         Seattle     196710.0
48     Sioux Falls    2781806.0
49       St. Louis    3484604.0
50         Wichita    3523871.0
51      Wilmington    4147179.0}
2023-11-16:22:18:54,175 INFO     [logger.py:73] Executed in: 0.060759544372558594s
2023-11-16:22:18:54,189 INFO     [quality_test.py:48] customer request: Show the performance of the different ad spends in relation to the gender and sales.
2023-11-16:22:18:54,251 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:18:54,251 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Show the performance of the different ad spends in relation to the gender and sales. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-16:22:18:55,063 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:18:55,068 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=392 request_id=2e7986f19066603616b69419ee83db30 response_code=200
2023-11-16:22:18:55,074 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-16:22:18:55,584 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-16:22:18:55,673 WARNING  [sqlite.py:234] Insert of existing embedding ID: 0
2023-11-16:22:18:55,674 WARNING  [sqlite.py:234] Insert of existing embedding ID: 1
2023-11-16:22:18:55,674 WARNING  [sqlite.py:234] Insert of existing embedding ID: 2
2023-11-16:22:18:55,674 WARNING  [sqlite.py:234] Insert of existing embedding ID: 3
2023-11-16:22:18:55,674 WARNING  [sqlite.py:234] Insert of existing embedding ID: 4
2023-11-16:22:18:55,675 WARNING  [sqlite.py:234] Insert of existing embedding ID: 5
2023-11-16:22:18:55,675 WARNING  [sqlite.py:234] Insert of existing embedding ID: 6
2023-11-16:22:18:55,675 WARNING  [sqlite.py:234] Insert of existing embedding ID: 7
2023-11-16:22:18:55,675 WARNING  [sqlite.py:234] Insert of existing embedding ID: 8
2023-11-16:22:18:55,675 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 0
2023-11-16:22:18:55,675 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 1
2023-11-16:22:18:55,675 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 2
2023-11-16:22:18:55,675 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 3
2023-11-16:22:18:55,676 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 4
2023-11-16:22:18:55,676 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 5
2023-11-16:22:18:55,676 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 6
2023-11-16:22:18:55,676 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 7
2023-11-16:22:18:55,676 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 8
2023-11-16:22:18:55,692 WARNING  [sqlite.py:234] Insert of existing embedding ID: 9
2023-11-16:22:18:55,693 WARNING  [sqlite.py:234] Insert of existing embedding ID: 10
2023-11-16:22:18:55,693 WARNING  [sqlite.py:234] Insert of existing embedding ID: 11
2023-11-16:22:18:55,693 WARNING  [sqlite.py:234] Insert of existing embedding ID: 12
2023-11-16:22:18:55,693 WARNING  [sqlite.py:234] Insert of existing embedding ID: 13
2023-11-16:22:18:55,694 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 9
2023-11-16:22:18:55,694 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 10
2023-11-16:22:18:55,694 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 11
2023-11-16:22:18:55,694 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 12
2023-11-16:22:18:55,694 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 13
2023-11-16:22:18:55,741 WARNING  [sqlite.py:234] Insert of existing embedding ID: 14
2023-11-16:22:18:55,741 WARNING  [sqlite.py:234] Insert of existing embedding ID: 15
2023-11-16:22:18:55,742 WARNING  [sqlite.py:234] Insert of existing embedding ID: 16
2023-11-16:22:18:55,742 WARNING  [sqlite.py:234] Insert of existing embedding ID: 17
2023-11-16:22:18:55,742 WARNING  [sqlite.py:234] Insert of existing embedding ID: 18
2023-11-16:22:18:55,742 WARNING  [sqlite.py:234] Insert of existing embedding ID: 19
2023-11-16:22:18:55,743 WARNING  [sqlite.py:234] Insert of existing embedding ID: 20
2023-11-16:22:18:55,743 WARNING  [sqlite.py:234] Insert of existing embedding ID: 21
2023-11-16:22:18:55,743 WARNING  [sqlite.py:234] Insert of existing embedding ID: 22
2023-11-16:22:18:55,744 WARNING  [sqlite.py:234] Insert of existing embedding ID: 23
2023-11-16:22:18:55,744 WARNING  [sqlite.py:234] Insert of existing embedding ID: 24
2023-11-16:22:18:55,744 WARNING  [sqlite.py:234] Insert of existing embedding ID: 25
2023-11-16:22:18:55,744 WARNING  [sqlite.py:234] Insert of existing embedding ID: 26
2023-11-16:22:18:55,745 WARNING  [sqlite.py:234] Insert of existing embedding ID: 27
2023-11-16:22:18:55,745 WARNING  [sqlite.py:234] Insert of existing embedding ID: 28
2023-11-16:22:18:55,745 WARNING  [sqlite.py:234] Insert of existing embedding ID: 29
2023-11-16:22:18:55,745 WARNING  [sqlite.py:234] Insert of existing embedding ID: 30
2023-11-16:22:18:55,746 WARNING  [sqlite.py:234] Insert of existing embedding ID: 31
2023-11-16:22:18:55,746 WARNING  [sqlite.py:234] Insert of existing embedding ID: 32
2023-11-16:22:18:55,746 WARNING  [sqlite.py:234] Insert of existing embedding ID: 33
2023-11-16:22:18:55,747 WARNING  [sqlite.py:234] Insert of existing embedding ID: 34
2023-11-16:22:18:55,747 WARNING  [sqlite.py:234] Insert of existing embedding ID: 35
2023-11-16:22:18:55,747 WARNING  [sqlite.py:234] Insert of existing embedding ID: 36
2023-11-16:22:18:55,747 WARNING  [sqlite.py:234] Insert of existing embedding ID: 37
2023-11-16:22:18:55,748 WARNING  [sqlite.py:234] Insert of existing embedding ID: 38
2023-11-16:22:18:55,748 WARNING  [sqlite.py:234] Insert of existing embedding ID: 39
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 14
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 15
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 16
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 17
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 18
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 19
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 20
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 21
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 22
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 23
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 24
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 25
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 26
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 27
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 28
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 29
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 30
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 31
2023-11-16:22:18:55,748 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 32
2023-11-16:22:18:55,749 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 33
2023-11-16:22:18:55,749 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 34
2023-11-16:22:18:55,749 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 35
2023-11-16:22:18:55,749 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 36
2023-11-16:22:18:55,749 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 37
2023-11-16:22:18:55,749 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 38
2023-11-16:22:18:55,749 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 39
2023-11-16:22:18:56,001 WARNING  [sqlite.py:234] Insert of existing embedding ID: 40
2023-11-16:22:18:56,001 WARNING  [sqlite.py:234] Insert of existing embedding ID: 41
2023-11-16:22:18:56,002 WARNING  [sqlite.py:234] Insert of existing embedding ID: 42
2023-11-16:22:18:56,002 WARNING  [sqlite.py:234] Insert of existing embedding ID: 43
2023-11-16:22:18:56,002 WARNING  [sqlite.py:234] Insert of existing embedding ID: 44
2023-11-16:22:18:56,003 WARNING  [sqlite.py:234] Insert of existing embedding ID: 45
2023-11-16:22:18:56,003 WARNING  [sqlite.py:234] Insert of existing embedding ID: 46
2023-11-16:22:18:56,003 WARNING  [sqlite.py:234] Insert of existing embedding ID: 47
2023-11-16:22:18:56,004 WARNING  [sqlite.py:234] Insert of existing embedding ID: 48
2023-11-16:22:18:56,004 WARNING  [sqlite.py:234] Insert of existing embedding ID: 49
2023-11-16:22:18:56,004 WARNING  [sqlite.py:234] Insert of existing embedding ID: 50
2023-11-16:22:18:56,004 WARNING  [sqlite.py:234] Insert of existing embedding ID: 51
2023-11-16:22:18:56,005 WARNING  [sqlite.py:234] Insert of existing embedding ID: 52
2023-11-16:22:18:56,005 WARNING  [sqlite.py:234] Insert of existing embedding ID: 53
2023-11-16:22:18:56,005 WARNING  [sqlite.py:234] Insert of existing embedding ID: 54
2023-11-16:22:18:56,006 WARNING  [sqlite.py:234] Insert of existing embedding ID: 55
2023-11-16:22:18:56,006 WARNING  [sqlite.py:234] Insert of existing embedding ID: 56
2023-11-16:22:18:56,006 WARNING  [sqlite.py:234] Insert of existing embedding ID: 57
2023-11-16:22:18:56,007 WARNING  [sqlite.py:234] Insert of existing embedding ID: 58
2023-11-16:22:18:56,007 WARNING  [sqlite.py:234] Insert of existing embedding ID: 59
2023-11-16:22:18:56,007 WARNING  [sqlite.py:234] Insert of existing embedding ID: 60
2023-11-16:22:18:56,007 WARNING  [sqlite.py:234] Insert of existing embedding ID: 61
2023-11-16:22:18:56,008 WARNING  [sqlite.py:234] Insert of existing embedding ID: 62
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 40
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 41
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 42
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 43
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 44
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 45
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 46
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 47
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 48
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 49
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 50
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 51
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 52
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 53
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 54
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 55
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 56
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 57
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 58
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 59
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 60
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 61
2023-11-16:22:18:56,008 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 62
2023-11-16:22:18:56,021 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:18:56,046 WARNING  [sqlite.py:234] Insert of existing embedding ID: 63
2023-11-16:22:18:56,047 WARNING  [sqlite.py:234] Insert of existing embedding ID: 64
2023-11-16:22:18:56,047 WARNING  [sqlite.py:234] Insert of existing embedding ID: 65
2023-11-16:22:18:56,047 WARNING  [sqlite.py:234] Insert of existing embedding ID: 66
2023-11-16:22:18:56,048 WARNING  [sqlite.py:234] Insert of existing embedding ID: 67
2023-11-16:22:18:56,048 WARNING  [sqlite.py:234] Insert of existing embedding ID: 68
2023-11-16:22:18:56,048 WARNING  [sqlite.py:234] Insert of existing embedding ID: 69
2023-11-16:22:18:56,049 WARNING  [sqlite.py:234] Insert of existing embedding ID: 70
2023-11-16:22:18:56,049 WARNING  [sqlite.py:234] Insert of existing embedding ID: 71
2023-11-16:22:18:56,049 WARNING  [sqlite.py:234] Insert of existing embedding ID: 72
2023-11-16:22:18:56,050 WARNING  [sqlite.py:234] Insert of existing embedding ID: 73
2023-11-16:22:18:56,050 WARNING  [sqlite.py:234] Insert of existing embedding ID: 74
2023-11-16:22:18:56,050 WARNING  [sqlite.py:234] Insert of existing embedding ID: 75
2023-11-16:22:18:56,050 WARNING  [sqlite.py:234] Insert of existing embedding ID: 76
2023-11-16:22:18:56,051 WARNING  [sqlite.py:234] Insert of existing embedding ID: 77
2023-11-16:22:18:56,051 WARNING  [sqlite.py:234] Insert of existing embedding ID: 78
2023-11-16:22:18:56,051 WARNING  [sqlite.py:234] Insert of existing embedding ID: 79
2023-11-16:22:18:56,052 WARNING  [sqlite.py:234] Insert of existing embedding ID: 80
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 63
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 64
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 65
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 66
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 67
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 68
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 69
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 70
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 71
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 72
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 73
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 74
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 75
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 76
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 77
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 78
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 79
2023-11-16:22:18:56,052 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 80
2023-11-16:22:18:56,084 WARNING  [sqlite.py:234] Insert of existing embedding ID: 81
2023-11-16:22:18:56,084 WARNING  [sqlite.py:234] Insert of existing embedding ID: 82
2023-11-16:22:18:56,084 WARNING  [sqlite.py:234] Insert of existing embedding ID: 83
2023-11-16:22:18:56,084 WARNING  [sqlite.py:234] Insert of existing embedding ID: 84
2023-11-16:22:18:56,085 WARNING  [sqlite.py:234] Insert of existing embedding ID: 85
2023-11-16:22:18:56,085 WARNING  [sqlite.py:234] Insert of existing embedding ID: 86
2023-11-16:22:18:56,085 WARNING  [sqlite.py:234] Insert of existing embedding ID: 87
2023-11-16:22:18:56,085 WARNING  [sqlite.py:234] Insert of existing embedding ID: 88
2023-11-16:22:18:56,086 WARNING  [sqlite.py:234] Insert of existing embedding ID: 89
2023-11-16:22:18:56,086 WARNING  [sqlite.py:234] Insert of existing embedding ID: 90
2023-11-16:22:18:56,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 81
2023-11-16:22:18:56,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 82
2023-11-16:22:18:56,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 83
2023-11-16:22:18:56,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 84
2023-11-16:22:18:56,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 85
2023-11-16:22:18:56,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 86
2023-11-16:22:18:56,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 87
2023-11-16:22:18:56,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 88
2023-11-16:22:18:56,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 89
2023-11-16:22:18:56,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 90
2023-11-16:22:18:56,123 WARNING  [sqlite.py:234] Insert of existing embedding ID: 91
2023-11-16:22:18:56,123 WARNING  [sqlite.py:234] Insert of existing embedding ID: 92
2023-11-16:22:18:56,123 WARNING  [sqlite.py:234] Insert of existing embedding ID: 93
2023-11-16:22:18:56,123 WARNING  [sqlite.py:234] Insert of existing embedding ID: 94
2023-11-16:22:18:56,124 WARNING  [sqlite.py:234] Insert of existing embedding ID: 95
2023-11-16:22:18:56,124 WARNING  [sqlite.py:234] Insert of existing embedding ID: 96
2023-11-16:22:18:56,125 WARNING  [sqlite.py:234] Insert of existing embedding ID: 97
2023-11-16:22:18:56,125 WARNING  [sqlite.py:234] Insert of existing embedding ID: 98
2023-11-16:22:18:56,125 WARNING  [sqlite.py:234] Insert of existing embedding ID: 99
2023-11-16:22:18:56,126 WARNING  [sqlite.py:234] Insert of existing embedding ID: 100
2023-11-16:22:18:56,126 WARNING  [sqlite.py:234] Insert of existing embedding ID: 101
2023-11-16:22:18:56,126 WARNING  [sqlite.py:234] Insert of existing embedding ID: 102
2023-11-16:22:18:56,127 WARNING  [sqlite.py:234] Insert of existing embedding ID: 103
2023-11-16:22:18:56,127 WARNING  [sqlite.py:234] Insert of existing embedding ID: 104
2023-11-16:22:18:56,127 WARNING  [sqlite.py:234] Insert of existing embedding ID: 105
2023-11-16:22:18:56,128 WARNING  [sqlite.py:234] Insert of existing embedding ID: 106
2023-11-16:22:18:56,128 WARNING  [sqlite.py:234] Insert of existing embedding ID: 107
2023-11-16:22:18:56,128 WARNING  [sqlite.py:234] Insert of existing embedding ID: 108
2023-11-16:22:18:56,128 WARNING  [sqlite.py:234] Insert of existing embedding ID: 109
2023-11-16:22:18:56,128 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 91
2023-11-16:22:18:56,128 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 92
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 93
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 94
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 95
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 96
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 97
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 98
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 99
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 100
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 101
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 102
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 103
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 104
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 105
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 106
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 107
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 108
2023-11-16:22:18:56,129 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 109
2023-11-16:22:18:56,159 WARNING  [sqlite.py:234] Insert of existing embedding ID: 110
2023-11-16:22:18:56,159 WARNING  [sqlite.py:234] Insert of existing embedding ID: 111
2023-11-16:22:18:56,160 WARNING  [sqlite.py:234] Insert of existing embedding ID: 112
2023-11-16:22:18:56,160 WARNING  [sqlite.py:234] Insert of existing embedding ID: 113
2023-11-16:22:18:56,160 WARNING  [sqlite.py:234] Insert of existing embedding ID: 114
2023-11-16:22:18:56,160 WARNING  [sqlite.py:234] Insert of existing embedding ID: 115
2023-11-16:22:18:56,161 WARNING  [sqlite.py:234] Insert of existing embedding ID: 116
2023-11-16:22:18:56,161 WARNING  [sqlite.py:234] Insert of existing embedding ID: 117
2023-11-16:22:18:56,161 WARNING  [sqlite.py:234] Insert of existing embedding ID: 118
2023-11-16:22:18:56,162 WARNING  [sqlite.py:234] Insert of existing embedding ID: 119
2023-11-16:22:18:56,162 WARNING  [sqlite.py:234] Insert of existing embedding ID: 120
2023-11-16:22:18:56,162 WARNING  [sqlite.py:234] Insert of existing embedding ID: 121
2023-11-16:22:18:56,162 WARNING  [sqlite.py:234] Insert of existing embedding ID: 122
2023-11-16:22:18:56,163 WARNING  [sqlite.py:234] Insert of existing embedding ID: 123
2023-11-16:22:18:56,163 WARNING  [sqlite.py:234] Insert of existing embedding ID: 124
2023-11-16:22:18:56,163 WARNING  [sqlite.py:234] Insert of existing embedding ID: 125
2023-11-16:22:18:56,164 WARNING  [sqlite.py:234] Insert of existing embedding ID: 126
2023-11-16:22:18:56,164 WARNING  [sqlite.py:234] Insert of existing embedding ID: 127
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 110
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 111
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 112
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 113
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 114
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 115
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 116
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 117
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 118
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 119
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 120
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 121
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 122
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 123
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 124
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 125
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 126
2023-11-16:22:18:56,164 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 127
2023-11-16:22:18:56,194 WARNING  [sqlite.py:234] Insert of existing embedding ID: 128
2023-11-16:22:18:56,194 WARNING  [sqlite.py:234] Insert of existing embedding ID: 129
2023-11-16:22:18:56,194 WARNING  [sqlite.py:234] Insert of existing embedding ID: 130
2023-11-16:22:18:56,194 WARNING  [sqlite.py:234] Insert of existing embedding ID: 131
2023-11-16:22:18:56,195 WARNING  [sqlite.py:234] Insert of existing embedding ID: 132
2023-11-16:22:18:56,195 WARNING  [sqlite.py:234] Insert of existing embedding ID: 133
2023-11-16:22:18:56,195 WARNING  [sqlite.py:234] Insert of existing embedding ID: 134
2023-11-16:22:18:56,196 WARNING  [sqlite.py:234] Insert of existing embedding ID: 135
2023-11-16:22:18:56,196 WARNING  [sqlite.py:234] Insert of existing embedding ID: 136
2023-11-16:22:18:56,196 WARNING  [sqlite.py:234] Insert of existing embedding ID: 137
2023-11-16:22:18:56,196 WARNING  [sqlite.py:234] Insert of existing embedding ID: 138
2023-11-16:22:18:56,197 WARNING  [sqlite.py:234] Insert of existing embedding ID: 139
2023-11-16:22:18:56,197 WARNING  [sqlite.py:234] Insert of existing embedding ID: 140
2023-11-16:22:18:56,197 WARNING  [sqlite.py:234] Insert of existing embedding ID: 141
2023-11-16:22:18:56,198 WARNING  [sqlite.py:234] Insert of existing embedding ID: 142
2023-11-16:22:18:56,198 WARNING  [sqlite.py:234] Insert of existing embedding ID: 143
2023-11-16:22:18:56,198 WARNING  [sqlite.py:234] Insert of existing embedding ID: 144
2023-11-16:22:18:56,198 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 128
2023-11-16:22:18:56,198 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 129
2023-11-16:22:18:56,198 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 130
2023-11-16:22:18:56,198 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 131
2023-11-16:22:18:56,198 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 132
2023-11-16:22:18:56,198 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 133
2023-11-16:22:18:56,198 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 134
2023-11-16:22:18:56,198 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 135
2023-11-16:22:18:56,198 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 136
2023-11-16:22:18:56,199 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 137
2023-11-16:22:18:56,199 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 138
2023-11-16:22:18:56,199 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 139
2023-11-16:22:18:56,199 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 140
2023-11-16:22:18:56,199 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 141
2023-11-16:22:18:56,199 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 142
2023-11-16:22:18:56,199 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 143
2023-11-16:22:18:56,199 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 144
2023-11-16:22:18:56,223 WARNING  [sqlite.py:234] Insert of existing embedding ID: 145
2023-11-16:22:18:56,223 WARNING  [sqlite.py:234] Insert of existing embedding ID: 146
2023-11-16:22:18:56,224 WARNING  [sqlite.py:234] Insert of existing embedding ID: 147
2023-11-16:22:18:56,224 WARNING  [sqlite.py:234] Insert of existing embedding ID: 148
2023-11-16:22:18:56,224 WARNING  [sqlite.py:234] Insert of existing embedding ID: 149
2023-11-16:22:18:56,225 WARNING  [sqlite.py:234] Insert of existing embedding ID: 150
2023-11-16:22:18:56,225 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 145
2023-11-16:22:18:56,225 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 146
2023-11-16:22:18:56,225 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 147
2023-11-16:22:18:56,225 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 148
2023-11-16:22:18:56,225 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 149
2023-11-16:22:18:56,225 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 150
2023-11-16:22:18:56,249 WARNING  [sqlite.py:234] Insert of existing embedding ID: 151
2023-11-16:22:18:56,249 WARNING  [sqlite.py:234] Insert of existing embedding ID: 152
2023-11-16:22:18:56,250 WARNING  [sqlite.py:234] Insert of existing embedding ID: 153
2023-11-16:22:18:56,250 WARNING  [sqlite.py:234] Insert of existing embedding ID: 154
2023-11-16:22:18:56,250 WARNING  [sqlite.py:234] Insert of existing embedding ID: 155
2023-11-16:22:18:56,250 WARNING  [sqlite.py:234] Insert of existing embedding ID: 156
2023-11-16:22:18:56,251 WARNING  [sqlite.py:234] Insert of existing embedding ID: 157
2023-11-16:22:18:56,251 WARNING  [sqlite.py:234] Insert of existing embedding ID: 158
2023-11-16:22:18:56,251 WARNING  [sqlite.py:234] Insert of existing embedding ID: 159
2023-11-16:22:18:56,251 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 151
2023-11-16:22:18:56,252 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 152
2023-11-16:22:18:56,252 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 153
2023-11-16:22:18:56,252 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 154
2023-11-16:22:18:56,252 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 155
2023-11-16:22:18:56,252 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 156
2023-11-16:22:18:56,252 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 157
2023-11-16:22:18:56,252 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 158
2023-11-16:22:18:56,252 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 159
2023-11-16:22:18:56,278 WARNING  [sqlite.py:234] Insert of existing embedding ID: 160
2023-11-16:22:18:56,279 WARNING  [sqlite.py:234] Insert of existing embedding ID: 161
2023-11-16:22:18:56,279 WARNING  [sqlite.py:234] Insert of existing embedding ID: 162
2023-11-16:22:18:56,279 WARNING  [sqlite.py:234] Insert of existing embedding ID: 163
2023-11-16:22:18:56,280 WARNING  [sqlite.py:234] Insert of existing embedding ID: 164
2023-11-16:22:18:56,280 WARNING  [sqlite.py:234] Insert of existing embedding ID: 165
2023-11-16:22:18:56,280 WARNING  [sqlite.py:234] Insert of existing embedding ID: 166
2023-11-16:22:18:56,281 WARNING  [sqlite.py:234] Insert of existing embedding ID: 167
2023-11-16:22:18:56,281 WARNING  [sqlite.py:234] Insert of existing embedding ID: 168
2023-11-16:22:18:56,281 WARNING  [sqlite.py:234] Insert of existing embedding ID: 169
2023-11-16:22:18:56,282 WARNING  [sqlite.py:234] Insert of existing embedding ID: 170
2023-11-16:22:18:56,282 WARNING  [sqlite.py:234] Insert of existing embedding ID: 171
2023-11-16:22:18:56,282 WARNING  [sqlite.py:234] Insert of existing embedding ID: 172
2023-11-16:22:18:56,282 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 160
2023-11-16:22:18:56,282 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 161
2023-11-16:22:18:56,282 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 162
2023-11-16:22:18:56,282 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 163
2023-11-16:22:18:56,282 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 164
2023-11-16:22:18:56,282 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 165
2023-11-16:22:18:56,282 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 166
2023-11-16:22:18:56,283 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 167
2023-11-16:22:18:56,283 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 168
2023-11-16:22:18:56,283 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 169
2023-11-16:22:18:56,283 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 170
2023-11-16:22:18:56,283 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 171
2023-11-16:22:18:56,283 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 172
2023-11-16:22:18:56,312 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:18:56,312 INFO     [vector_search.py:103] Element: (1700092401406344, 'TV Ad Budget ($)') - Score: 0.6387732028961182
2023-11-16:22:18:56,313 INFO     [vector_search.py:103] Element: (1700092401406344, 'Newspaper Ad Budget ($)') - Score: 0.5881010293960571
2023-11-16:22:18:56,313 INFO     [vector_search.py:103] Element: (1700092401406344, 'Radio Ad Budget ($)') - Score: 0.5646078586578369
2023-11-16:22:18:56,313 INFO     [vector_search.py:103] Element: (1700092377314948, 'Revenue') - Score: 0.45662227272987366
2023-11-16:22:18:56,313 INFO     [vector_search.py:103] Element: (170009239686281, 'Revenue') - Score: 0.45662227272987366
2023-11-16:22:18:56,325 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:18:56,325 INFO     [vector_search.py:103] Element: (1700092401406344, 'gender') - Score: 1.0000001192092896
2023-11-16:22:18:56,326 INFO     [vector_search.py:103] Element: (1700092385555876, 'Gender') - Score: 1.0000001192092896
2023-11-16:22:18:56,326 INFO     [vector_search.py:103] Element: (1700092381859424, 'Gender') - Score: 1.0000001192092896
2023-11-16:22:18:56,326 INFO     [vector_search.py:103] Element: (1700092390869348, 'Gender') - Score: 1.0000001192092896
2023-11-16:22:18:56,326 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 1.0
2023-11-16:22:18:56,338 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:18:56,338 INFO     [vector_search.py:103] Element: (1700092401406344, 'Sales ($)') - Score: 0.8653542399406433
2023-11-16:22:18:56,338 INFO     [vector_search.py:103] Element: (1700092408519074, 'Total Sales') - Score: 0.7782794237136841
2023-11-16:22:18:56,338 INFO     [vector_search.py:103] Element: (1700092408519074, 'Sales Method') - Score: 0.7738610506057739
2023-11-16:22:18:56,338 INFO     [vector_search.py:103] Element: (1700092408519074, 'Retailer') - Score: 0.654481053352356
2023-11-16:22:18:56,338 INFO     [vector_search.py:103] Element: (1700092377314948, 'Revenue') - Score: 0.6518972516059875
2023-11-16:22:18:56,338 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-16:22:18:56,347 INFO     [prebuilt.py:537] 
   Unnamed: 0  TV Ad Budget ($)  Radio Ad Budget ($)  Newspaper Ad Budget ($)  \
0           1             230.1                 37.8                     69.2   
1           2              44.5                 39.3                     45.1   
2           3              17.2                 45.9                     69.3   

   Sales ($)  gender  
0       22.1  female  
1       10.4    male  
2        9.3    male  
2023-11-16:22:18:56,357 INFO     [logger.py:73] Question: Show the performance of the different ad spends in relation to the gender and sales.
2023-11-16:22:18:56,358 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-16:22:18:56,358 INFO     [logger.py:73] Prompt ID: 42a026cd-aefa-4543-bc8c-09b1ddf77765
2023-11-16:22:18:56,367 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 200 rows and 6 columns.
This is the metadata of the dataframe dfs[0]:
Unnamed: 0,TV Ad Budget ($),Radio Ad Budget ($),Newspaper Ad Budget ($),Sales ($),gender
2,44.5,39.3,45.1,10.4,male
1,230.1,37.8,69.2,22.1,female
4,151.5,41.3,58.5,18.5,male
3,17.2,45.9,69.3,9.3,male
5,180.8,10.8,58.4,12.9,female
</dataframe>

<conversation>
User: Show the performance of the different ad spends in relation to the gender and sales.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-16:22:18:56,368 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:18:56,368 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 200 rows and 6 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nUnnamed: 0,TV Ad Budget ($),Radio Ad Budget ($),Newspaper Ad Budget ($),Sales ($),gender\\n2,44.5,39.3,45.1,10.4,male\\n1,230.1,37.8,69.2,22.1,female\\n4,151.5,41.3,58.5,18.5,male\\n3,17.2,45.9,69.3,9.3,male\\n5,180.8,10.8,58.4,12.9,female\\n</dataframe>\\n\\n<conversation>\\nUser: Show the performance of the different ad spends in relation to the gender and sales.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-16:22:18:56,647 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:19:35,543 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:19:35,552 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=38909 request_id=d67d0f06d10702c66c9a68e6eff05907 response_code=200
2023-11-16:22:19:35,705 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    
    # Assuming dfs[0] is the relevant dataframe
    df = dfs[0]
    
    # Group by gender and calculate the sum of ad spends and sales
    grouped_df = df.groupby('gender').sum()
    
    # Calculate the total ad spend for each gender
    grouped_df['Total Ad Spend ($)'] = grouped_df['TV Ad Budget ($)'] + grouped_df['Radio Ad Budget ($)'] + grouped_df['Newspaper Ad Budget ($)']
    
    # Calculate the sales per dollar spent for each gender
    grouped_df['Sales per Dollar Spent'] = grouped_df['Sales ($)'] / grouped_df['Total Ad Spend ($)']
    
    # Plotting the sales per dollar spent for each gender
    grouped_df['Sales per Dollar Spent'].plot(kind='bar', color=['blue', 'pink'])
    plt.xlabel('Gender')
    plt.ylabel('Sales per Dollar Spent')
    plt.title('Performance of Different Ad Spends in Relation to Gender and Sales')
    plt.savefig('temp_chart.png')
    
    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-16:22:19:35,713 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0]
    grouped_df = df.groupby('gender').sum()
    grouped_df['Total Ad Spend ($)'] = grouped_df['TV Ad Budget ($)'] + grouped_df['Radio Ad Budget ($)'] + grouped_df['Newspaper Ad Budget ($)']
    grouped_df['Sales per Dollar Spent'] = grouped_df['Sales ($)'] / grouped_df['Total Ad Spend ($)']
    grouped_df['Sales per Dollar Spent'].plot(kind='bar', color=['blue', 'pink'])
    plt.xlabel('Gender')
    plt.ylabel('Sales per Dollar Spent')
    plt.title('Performance of Different Ad Spends in Relation to Gender and Sales')
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-16:22:19:36,111 DEBUG    [__init__.py:337] matplotlib data path: /home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data
2023-11-16:22:19:36,119 DEBUG    [__init__.py:337] CONFIGDIR=/home/stella/.config/matplotlib
2023-11-16:22:19:36,123 DEBUG    [__init__.py:1498] interactive is False
2023-11-16:22:19:36,123 DEBUG    [__init__.py:1499] platform is linux
2023-11-16:22:19:36,212 DEBUG    [__init__.py:337] CACHEDIR=/home/stella/.cache/matplotlib
2023-11-16:22:19:36,216 DEBUG    [font_manager.py:1574] Using fontManager instance from /home/stella/.cache/matplotlib/fontlist-v330.json
2023-11-16:22:19:36,594 DEBUG    [pyplot.py:414] Loaded backend tkagg version 8.6.
2023-11-16:22:19:37,030 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:19:37,030 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:19:37,030 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:19:37,030 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:19:37,030 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-16:22:19:37,037 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:19:37,038 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:19:37,038 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:19:37,038 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:19:37,038 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-16:22:19:37,162 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:19:37,162 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:19:37,162 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:19:37,163 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:19:37,163 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-16:22:19:37,174 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:19:37,175 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:19:37,175 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:19:37,175 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:19:37,175 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-16:22:19:37,179 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:19:37,179 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:19:37,179 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:19:37,179 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:19:37,180 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-16:22:19:37,185 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:19:37,185 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:19:37,186 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:19:37,186 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:19:37,186 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-16:22:19:37,190 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:19:37,191 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:19:37,191 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:19:37,191 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:19:37,191 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-16:22:19:37,196 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:19:37,197 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:19:37,197 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:19:37,197 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:19:37,197 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-16:22:19:37,202 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:19:37,203 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:19:37,203 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:19:37,203 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:19:37,203 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-16:22:19:37,226 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-11-16:22:19:37,227 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,228 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,228 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,228 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,228 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,229 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,229 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-16:22:19:37,229 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-16:22:19:37,229 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,229 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,230 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,230 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,230 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,230 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,230 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,231 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,231 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,231 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,231 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,231 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-16:22:19:37,231 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,232 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,232 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,232 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-16:22:19:37,232 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,232 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,233 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,233 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,233 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,233 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,233 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,234 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,234 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,234 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,234 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,235 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,235 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,235 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,235 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,236 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,236 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,236 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,236 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-16:22:19:37,236 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,236 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,237 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,237 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,237 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,237 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,237 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,237 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,238 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,238 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,238 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,238 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,238 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-16:22:19:37,238 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,238 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,239 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,239 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,239 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,239 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,239 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,239 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-16:22:19:37,239 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,239 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,239 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,240 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,240 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,240 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,240 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,240 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,240 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-16:22:19:37,241 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,241 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,241 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,241 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,241 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,241 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,241 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,242 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,242 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,242 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,242 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,242 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,242 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,242 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,242 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,243 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,243 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-16:22:19:37,243 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,243 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,243 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,243 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-16:22:19:37,243 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,244 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,244 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,244 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,244 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,244 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,244 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,244 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,244 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,244 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,245 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,245 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,245 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,245 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,245 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,245 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,245 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,245 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,245 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-16:22:19:37,246 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,247 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,247 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,247 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,247 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,247 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,247 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,247 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,247 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,248 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-16:22:19:37,248 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,248 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,248 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,248 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,248 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,248 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,248 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,249 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,250 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,250 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,250 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,250 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,250 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,250 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-16:22:19:37,250 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,250 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,250 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,251 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,251 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,251 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,251 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,251 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,251 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,251 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,251 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,251 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,251 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,252 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-16:22:19:37,252 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,252 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,252 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,252 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,252 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,252 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-16:22:19:37,252 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,252 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,253 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,253 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,253 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,253 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,253 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-16:22:19:37,253 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,253 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,253 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,253 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,253 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,254 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,254 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,254 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,254 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,254 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,254 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,254 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-16:22:19:37,254 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,255 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-16:22:19:37,256 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,257 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,258 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,259 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,260 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,261 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,261 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,261 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,261 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,261 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,261 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,261 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,261 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-16:22:19:37,262 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,262 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,262 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,262 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,262 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,262 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,262 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,262 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,262 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-16:22:19:37,346 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-11-16:22:19:37,346 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,346 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,346 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,346 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,346 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,346 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,346 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,347 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,348 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,349 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,350 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,351 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,351 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,351 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,351 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,351 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,351 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,351 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,352 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,353 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,354 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,355 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-16:22:19:37,356 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,357 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,358 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,359 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,360 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-16:22:19:37,361 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-16:22:19:37,362 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-16:22:19:37,447 INFO     [logger.py:73] Answer: {'type': 'plot', 'value': 'temp_chart.png'}
2023-11-16:22:19:37,448 INFO     [logger.py:73] Executed in: 41.090230226516724s
2023-11-16:22:19:37,448 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:19:37,448 DEBUG    [PngImagePlugin.py:190] STREAM b'tEXt' 41 57
2023-11-16:22:19:37,448 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 110 9
2023-11-16:22:19:37,448 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 131 23142
2023-11-16:22:19:37,784 INFO     [quality_test.py:48] customer request: Compare the operating margins between the sales methods and list their differences per city.
2023-11-16:22:19:37,966 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:19:37,966 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Compare the operating margins between the sales methods and list their differences per city. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-16:22:19:38,891 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:19:38,893 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=352 request_id=02c643c0c81d4a8b7164c36ebc990649 response_code=200
2023-11-16:22:19:38,898 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-16:22:19:39,395 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-16:22:19:39,467 WARNING  [sqlite.py:234] Insert of existing embedding ID: 0
2023-11-16:22:19:39,468 WARNING  [sqlite.py:234] Insert of existing embedding ID: 1
2023-11-16:22:19:39,468 WARNING  [sqlite.py:234] Insert of existing embedding ID: 2
2023-11-16:22:19:39,468 WARNING  [sqlite.py:234] Insert of existing embedding ID: 3
2023-11-16:22:19:39,469 WARNING  [sqlite.py:234] Insert of existing embedding ID: 4
2023-11-16:22:19:39,469 WARNING  [sqlite.py:234] Insert of existing embedding ID: 5
2023-11-16:22:19:39,469 WARNING  [sqlite.py:234] Insert of existing embedding ID: 6
2023-11-16:22:19:39,470 WARNING  [sqlite.py:234] Insert of existing embedding ID: 7
2023-11-16:22:19:39,470 WARNING  [sqlite.py:234] Insert of existing embedding ID: 8
2023-11-16:22:19:39,470 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 0
2023-11-16:22:19:39,470 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 1
2023-11-16:22:19:39,471 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 2
2023-11-16:22:19:39,471 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 3
2023-11-16:22:19:39,471 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 4
2023-11-16:22:19:39,471 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 5
2023-11-16:22:19:39,471 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 6
2023-11-16:22:19:39,471 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 7
2023-11-16:22:19:39,471 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 8
2023-11-16:22:19:39,493 WARNING  [sqlite.py:234] Insert of existing embedding ID: 9
2023-11-16:22:19:39,493 WARNING  [sqlite.py:234] Insert of existing embedding ID: 10
2023-11-16:22:19:39,493 WARNING  [sqlite.py:234] Insert of existing embedding ID: 11
2023-11-16:22:19:39,494 WARNING  [sqlite.py:234] Insert of existing embedding ID: 12
2023-11-16:22:19:39,494 WARNING  [sqlite.py:234] Insert of existing embedding ID: 13
2023-11-16:22:19:39,494 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 9
2023-11-16:22:19:39,494 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 10
2023-11-16:22:19:39,494 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 11
2023-11-16:22:19:39,494 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 12
2023-11-16:22:19:39,494 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 13
2023-11-16:22:19:39,559 WARNING  [sqlite.py:234] Insert of existing embedding ID: 14
2023-11-16:22:19:39,560 WARNING  [sqlite.py:234] Insert of existing embedding ID: 15
2023-11-16:22:19:39,560 WARNING  [sqlite.py:234] Insert of existing embedding ID: 16
2023-11-16:22:19:39,561 WARNING  [sqlite.py:234] Insert of existing embedding ID: 17
2023-11-16:22:19:39,561 WARNING  [sqlite.py:234] Insert of existing embedding ID: 18
2023-11-16:22:19:39,562 WARNING  [sqlite.py:234] Insert of existing embedding ID: 19
2023-11-16:22:19:39,562 WARNING  [sqlite.py:234] Insert of existing embedding ID: 20
2023-11-16:22:19:39,562 WARNING  [sqlite.py:234] Insert of existing embedding ID: 21
2023-11-16:22:19:39,563 WARNING  [sqlite.py:234] Insert of existing embedding ID: 22
2023-11-16:22:19:39,563 WARNING  [sqlite.py:234] Insert of existing embedding ID: 23
2023-11-16:22:19:39,563 WARNING  [sqlite.py:234] Insert of existing embedding ID: 24
2023-11-16:22:19:39,563 WARNING  [sqlite.py:234] Insert of existing embedding ID: 25
2023-11-16:22:19:39,564 WARNING  [sqlite.py:234] Insert of existing embedding ID: 26
2023-11-16:22:19:39,564 WARNING  [sqlite.py:234] Insert of existing embedding ID: 27
2023-11-16:22:19:39,564 WARNING  [sqlite.py:234] Insert of existing embedding ID: 28
2023-11-16:22:19:39,565 WARNING  [sqlite.py:234] Insert of existing embedding ID: 29
2023-11-16:22:19:39,565 WARNING  [sqlite.py:234] Insert of existing embedding ID: 30
2023-11-16:22:19:39,565 WARNING  [sqlite.py:234] Insert of existing embedding ID: 31
2023-11-16:22:19:39,565 WARNING  [sqlite.py:234] Insert of existing embedding ID: 32
2023-11-16:22:19:39,566 WARNING  [sqlite.py:234] Insert of existing embedding ID: 33
2023-11-16:22:19:39,566 WARNING  [sqlite.py:234] Insert of existing embedding ID: 34
2023-11-16:22:19:39,566 WARNING  [sqlite.py:234] Insert of existing embedding ID: 35
2023-11-16:22:19:39,567 WARNING  [sqlite.py:234] Insert of existing embedding ID: 36
2023-11-16:22:19:39,567 WARNING  [sqlite.py:234] Insert of existing embedding ID: 37
2023-11-16:22:19:39,567 WARNING  [sqlite.py:234] Insert of existing embedding ID: 38
2023-11-16:22:19:39,568 WARNING  [sqlite.py:234] Insert of existing embedding ID: 39
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 14
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 15
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 16
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 17
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 18
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 19
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 20
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 21
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 22
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 23
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 24
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 25
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 26
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 27
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 28
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 29
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 30
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 31
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 32
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 33
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 34
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 35
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 36
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 37
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 38
2023-11-16:22:19:39,568 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 39
2023-11-16:22:19:39,710 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:19:39,870 WARNING  [sqlite.py:234] Insert of existing embedding ID: 40
2023-11-16:22:19:39,871 WARNING  [sqlite.py:234] Insert of existing embedding ID: 41
2023-11-16:22:19:39,871 WARNING  [sqlite.py:234] Insert of existing embedding ID: 42
2023-11-16:22:19:39,872 WARNING  [sqlite.py:234] Insert of existing embedding ID: 43
2023-11-16:22:19:39,872 WARNING  [sqlite.py:234] Insert of existing embedding ID: 44
2023-11-16:22:19:39,873 WARNING  [sqlite.py:234] Insert of existing embedding ID: 45
2023-11-16:22:19:39,873 WARNING  [sqlite.py:234] Insert of existing embedding ID: 46
2023-11-16:22:19:39,874 WARNING  [sqlite.py:234] Insert of existing embedding ID: 47
2023-11-16:22:19:39,874 WARNING  [sqlite.py:234] Insert of existing embedding ID: 48
2023-11-16:22:19:39,875 WARNING  [sqlite.py:234] Insert of existing embedding ID: 49
2023-11-16:22:19:39,875 WARNING  [sqlite.py:234] Insert of existing embedding ID: 50
2023-11-16:22:19:39,876 WARNING  [sqlite.py:234] Insert of existing embedding ID: 51
2023-11-16:22:19:39,876 WARNING  [sqlite.py:234] Insert of existing embedding ID: 52
2023-11-16:22:19:39,877 WARNING  [sqlite.py:234] Insert of existing embedding ID: 53
2023-11-16:22:19:39,877 WARNING  [sqlite.py:234] Insert of existing embedding ID: 54
2023-11-16:22:19:39,878 WARNING  [sqlite.py:234] Insert of existing embedding ID: 55
2023-11-16:22:19:39,878 WARNING  [sqlite.py:234] Insert of existing embedding ID: 56
2023-11-16:22:19:39,878 WARNING  [sqlite.py:234] Insert of existing embedding ID: 57
2023-11-16:22:19:39,879 WARNING  [sqlite.py:234] Insert of existing embedding ID: 58
2023-11-16:22:19:39,879 WARNING  [sqlite.py:234] Insert of existing embedding ID: 59
2023-11-16:22:19:39,880 WARNING  [sqlite.py:234] Insert of existing embedding ID: 60
2023-11-16:22:19:39,880 WARNING  [sqlite.py:234] Insert of existing embedding ID: 61
2023-11-16:22:19:39,881 WARNING  [sqlite.py:234] Insert of existing embedding ID: 62
2023-11-16:22:19:39,881 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 40
2023-11-16:22:19:39,881 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 41
2023-11-16:22:19:39,881 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 42
2023-11-16:22:19:39,881 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 43
2023-11-16:22:19:39,881 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 44
2023-11-16:22:19:39,881 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 45
2023-11-16:22:19:39,881 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 46
2023-11-16:22:19:39,881 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 47
2023-11-16:22:19:39,881 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 48
2023-11-16:22:19:39,881 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 49
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 50
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 51
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 52
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 53
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 54
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 55
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 56
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 57
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 58
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 59
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 60
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 61
2023-11-16:22:19:39,882 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 62
2023-11-16:22:19:39,924 WARNING  [sqlite.py:234] Insert of existing embedding ID: 63
2023-11-16:22:19:39,924 WARNING  [sqlite.py:234] Insert of existing embedding ID: 64
2023-11-16:22:19:39,924 WARNING  [sqlite.py:234] Insert of existing embedding ID: 65
2023-11-16:22:19:39,924 WARNING  [sqlite.py:234] Insert of existing embedding ID: 66
2023-11-16:22:19:39,925 WARNING  [sqlite.py:234] Insert of existing embedding ID: 67
2023-11-16:22:19:39,925 WARNING  [sqlite.py:234] Insert of existing embedding ID: 68
2023-11-16:22:19:39,925 WARNING  [sqlite.py:234] Insert of existing embedding ID: 69
2023-11-16:22:19:39,926 WARNING  [sqlite.py:234] Insert of existing embedding ID: 70
2023-11-16:22:19:39,926 WARNING  [sqlite.py:234] Insert of existing embedding ID: 71
2023-11-16:22:19:39,926 WARNING  [sqlite.py:234] Insert of existing embedding ID: 72
2023-11-16:22:19:39,926 WARNING  [sqlite.py:234] Insert of existing embedding ID: 73
2023-11-16:22:19:39,927 WARNING  [sqlite.py:234] Insert of existing embedding ID: 74
2023-11-16:22:19:39,927 WARNING  [sqlite.py:234] Insert of existing embedding ID: 75
2023-11-16:22:19:39,927 WARNING  [sqlite.py:234] Insert of existing embedding ID: 76
2023-11-16:22:19:39,927 WARNING  [sqlite.py:234] Insert of existing embedding ID: 77
2023-11-16:22:19:39,928 WARNING  [sqlite.py:234] Insert of existing embedding ID: 78
2023-11-16:22:19:39,928 WARNING  [sqlite.py:234] Insert of existing embedding ID: 79
2023-11-16:22:19:39,928 WARNING  [sqlite.py:234] Insert of existing embedding ID: 80
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 63
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 64
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 65
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 66
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 67
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 68
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 69
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 70
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 71
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 72
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 73
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 74
2023-11-16:22:19:39,928 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 75
2023-11-16:22:19:39,929 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 76
2023-11-16:22:19:39,929 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 77
2023-11-16:22:19:39,929 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 78
2023-11-16:22:19:39,929 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 79
2023-11-16:22:19:39,929 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 80
2023-11-16:22:19:39,951 WARNING  [sqlite.py:234] Insert of existing embedding ID: 81
2023-11-16:22:19:39,951 WARNING  [sqlite.py:234] Insert of existing embedding ID: 82
2023-11-16:22:19:39,952 WARNING  [sqlite.py:234] Insert of existing embedding ID: 83
2023-11-16:22:19:39,952 WARNING  [sqlite.py:234] Insert of existing embedding ID: 84
2023-11-16:22:19:39,952 WARNING  [sqlite.py:234] Insert of existing embedding ID: 85
2023-11-16:22:19:39,952 WARNING  [sqlite.py:234] Insert of existing embedding ID: 86
2023-11-16:22:19:39,953 WARNING  [sqlite.py:234] Insert of existing embedding ID: 87
2023-11-16:22:19:39,953 WARNING  [sqlite.py:234] Insert of existing embedding ID: 88
2023-11-16:22:19:39,953 WARNING  [sqlite.py:234] Insert of existing embedding ID: 89
2023-11-16:22:19:39,954 WARNING  [sqlite.py:234] Insert of existing embedding ID: 90
2023-11-16:22:19:39,954 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 81
2023-11-16:22:19:39,954 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 82
2023-11-16:22:19:39,954 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 83
2023-11-16:22:19:39,954 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 84
2023-11-16:22:19:39,954 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 85
2023-11-16:22:19:39,954 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 86
2023-11-16:22:19:39,954 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 87
2023-11-16:22:19:39,954 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 88
2023-11-16:22:19:39,954 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 89
2023-11-16:22:19:39,954 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 90
2023-11-16:22:19:39,989 WARNING  [sqlite.py:234] Insert of existing embedding ID: 91
2023-11-16:22:19:39,990 WARNING  [sqlite.py:234] Insert of existing embedding ID: 92
2023-11-16:22:19:39,990 WARNING  [sqlite.py:234] Insert of existing embedding ID: 93
2023-11-16:22:19:39,990 WARNING  [sqlite.py:234] Insert of existing embedding ID: 94
2023-11-16:22:19:39,990 WARNING  [sqlite.py:234] Insert of existing embedding ID: 95
2023-11-16:22:19:39,991 WARNING  [sqlite.py:234] Insert of existing embedding ID: 96
2023-11-16:22:19:39,991 WARNING  [sqlite.py:234] Insert of existing embedding ID: 97
2023-11-16:22:19:39,991 WARNING  [sqlite.py:234] Insert of existing embedding ID: 98
2023-11-16:22:19:39,992 WARNING  [sqlite.py:234] Insert of existing embedding ID: 99
2023-11-16:22:19:39,992 WARNING  [sqlite.py:234] Insert of existing embedding ID: 100
2023-11-16:22:19:39,992 WARNING  [sqlite.py:234] Insert of existing embedding ID: 101
2023-11-16:22:19:39,992 WARNING  [sqlite.py:234] Insert of existing embedding ID: 102
2023-11-16:22:19:39,993 WARNING  [sqlite.py:234] Insert of existing embedding ID: 103
2023-11-16:22:19:39,993 WARNING  [sqlite.py:234] Insert of existing embedding ID: 104
2023-11-16:22:19:39,993 WARNING  [sqlite.py:234] Insert of existing embedding ID: 105
2023-11-16:22:19:39,994 WARNING  [sqlite.py:234] Insert of existing embedding ID: 106
2023-11-16:22:19:39,994 WARNING  [sqlite.py:234] Insert of existing embedding ID: 107
2023-11-16:22:19:39,994 WARNING  [sqlite.py:234] Insert of existing embedding ID: 108
2023-11-16:22:19:39,994 WARNING  [sqlite.py:234] Insert of existing embedding ID: 109
2023-11-16:22:19:39,994 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 91
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 92
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 93
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 94
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 95
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 96
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 97
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 98
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 99
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 100
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 101
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 102
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 103
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 104
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 105
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 106
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 107
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 108
2023-11-16:22:19:39,995 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 109
2023-11-16:22:19:40,023 WARNING  [sqlite.py:234] Insert of existing embedding ID: 110
2023-11-16:22:19:40,024 WARNING  [sqlite.py:234] Insert of existing embedding ID: 111
2023-11-16:22:19:40,024 WARNING  [sqlite.py:234] Insert of existing embedding ID: 112
2023-11-16:22:19:40,024 WARNING  [sqlite.py:234] Insert of existing embedding ID: 113
2023-11-16:22:19:40,024 WARNING  [sqlite.py:234] Insert of existing embedding ID: 114
2023-11-16:22:19:40,025 WARNING  [sqlite.py:234] Insert of existing embedding ID: 115
2023-11-16:22:19:40,025 WARNING  [sqlite.py:234] Insert of existing embedding ID: 116
2023-11-16:22:19:40,025 WARNING  [sqlite.py:234] Insert of existing embedding ID: 117
2023-11-16:22:19:40,025 WARNING  [sqlite.py:234] Insert of existing embedding ID: 118
2023-11-16:22:19:40,026 WARNING  [sqlite.py:234] Insert of existing embedding ID: 119
2023-11-16:22:19:40,026 WARNING  [sqlite.py:234] Insert of existing embedding ID: 120
2023-11-16:22:19:40,027 WARNING  [sqlite.py:234] Insert of existing embedding ID: 121
2023-11-16:22:19:40,027 WARNING  [sqlite.py:234] Insert of existing embedding ID: 122
2023-11-16:22:19:40,027 WARNING  [sqlite.py:234] Insert of existing embedding ID: 123
2023-11-16:22:19:40,027 WARNING  [sqlite.py:234] Insert of existing embedding ID: 124
2023-11-16:22:19:40,028 WARNING  [sqlite.py:234] Insert of existing embedding ID: 125
2023-11-16:22:19:40,028 WARNING  [sqlite.py:234] Insert of existing embedding ID: 126
2023-11-16:22:19:40,028 WARNING  [sqlite.py:234] Insert of existing embedding ID: 127
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 110
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 111
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 112
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 113
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 114
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 115
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 116
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 117
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 118
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 119
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 120
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 121
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 122
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 123
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 124
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 125
2023-11-16:22:19:40,028 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 126
2023-11-16:22:19:40,029 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 127
2023-11-16:22:19:40,058 WARNING  [sqlite.py:234] Insert of existing embedding ID: 128
2023-11-16:22:19:40,058 WARNING  [sqlite.py:234] Insert of existing embedding ID: 129
2023-11-16:22:19:40,059 WARNING  [sqlite.py:234] Insert of existing embedding ID: 130
2023-11-16:22:19:40,059 WARNING  [sqlite.py:234] Insert of existing embedding ID: 131
2023-11-16:22:19:40,059 WARNING  [sqlite.py:234] Insert of existing embedding ID: 132
2023-11-16:22:19:40,060 WARNING  [sqlite.py:234] Insert of existing embedding ID: 133
2023-11-16:22:19:40,060 WARNING  [sqlite.py:234] Insert of existing embedding ID: 134
2023-11-16:22:19:40,060 WARNING  [sqlite.py:234] Insert of existing embedding ID: 135
2023-11-16:22:19:40,061 WARNING  [sqlite.py:234] Insert of existing embedding ID: 136
2023-11-16:22:19:40,061 WARNING  [sqlite.py:234] Insert of existing embedding ID: 137
2023-11-16:22:19:40,061 WARNING  [sqlite.py:234] Insert of existing embedding ID: 138
2023-11-16:22:19:40,062 WARNING  [sqlite.py:234] Insert of existing embedding ID: 139
2023-11-16:22:19:40,062 WARNING  [sqlite.py:234] Insert of existing embedding ID: 140
2023-11-16:22:19:40,062 WARNING  [sqlite.py:234] Insert of existing embedding ID: 141
2023-11-16:22:19:40,062 WARNING  [sqlite.py:234] Insert of existing embedding ID: 142
2023-11-16:22:19:40,063 WARNING  [sqlite.py:234] Insert of existing embedding ID: 143
2023-11-16:22:19:40,063 WARNING  [sqlite.py:234] Insert of existing embedding ID: 144
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 128
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 129
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 130
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 131
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 132
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 133
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 134
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 135
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 136
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 137
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 138
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 139
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 140
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 141
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 142
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 143
2023-11-16:22:19:40,063 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 144
2023-11-16:22:19:40,087 WARNING  [sqlite.py:234] Insert of existing embedding ID: 145
2023-11-16:22:19:40,087 WARNING  [sqlite.py:234] Insert of existing embedding ID: 146
2023-11-16:22:19:40,088 WARNING  [sqlite.py:234] Insert of existing embedding ID: 147
2023-11-16:22:19:40,088 WARNING  [sqlite.py:234] Insert of existing embedding ID: 148
2023-11-16:22:19:40,089 WARNING  [sqlite.py:234] Insert of existing embedding ID: 149
2023-11-16:22:19:40,089 WARNING  [sqlite.py:234] Insert of existing embedding ID: 150
2023-11-16:22:19:40,089 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 145
2023-11-16:22:19:40,089 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 146
2023-11-16:22:19:40,089 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 147
2023-11-16:22:19:40,089 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 148
2023-11-16:22:19:40,089 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 149
2023-11-16:22:19:40,089 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 150
2023-11-16:22:19:40,114 WARNING  [sqlite.py:234] Insert of existing embedding ID: 151
2023-11-16:22:19:40,114 WARNING  [sqlite.py:234] Insert of existing embedding ID: 152
2023-11-16:22:19:40,114 WARNING  [sqlite.py:234] Insert of existing embedding ID: 153
2023-11-16:22:19:40,115 WARNING  [sqlite.py:234] Insert of existing embedding ID: 154
2023-11-16:22:19:40,115 WARNING  [sqlite.py:234] Insert of existing embedding ID: 155
2023-11-16:22:19:40,115 WARNING  [sqlite.py:234] Insert of existing embedding ID: 156
2023-11-16:22:19:40,116 WARNING  [sqlite.py:234] Insert of existing embedding ID: 157
2023-11-16:22:19:40,116 WARNING  [sqlite.py:234] Insert of existing embedding ID: 158
2023-11-16:22:19:40,117 WARNING  [sqlite.py:234] Insert of existing embedding ID: 159
2023-11-16:22:19:40,117 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 151
2023-11-16:22:19:40,117 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 152
2023-11-16:22:19:40,117 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 153
2023-11-16:22:19:40,117 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 154
2023-11-16:22:19:40,117 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 155
2023-11-16:22:19:40,117 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 156
2023-11-16:22:19:40,117 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 157
2023-11-16:22:19:40,117 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 158
2023-11-16:22:19:40,117 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 159
2023-11-16:22:19:40,143 WARNING  [sqlite.py:234] Insert of existing embedding ID: 160
2023-11-16:22:19:40,144 WARNING  [sqlite.py:234] Insert of existing embedding ID: 161
2023-11-16:22:19:40,144 WARNING  [sqlite.py:234] Insert of existing embedding ID: 162
2023-11-16:22:19:40,145 WARNING  [sqlite.py:234] Insert of existing embedding ID: 163
2023-11-16:22:19:40,145 WARNING  [sqlite.py:234] Insert of existing embedding ID: 164
2023-11-16:22:19:40,145 WARNING  [sqlite.py:234] Insert of existing embedding ID: 165
2023-11-16:22:19:40,146 WARNING  [sqlite.py:234] Insert of existing embedding ID: 166
2023-11-16:22:19:40,146 WARNING  [sqlite.py:234] Insert of existing embedding ID: 167
2023-11-16:22:19:40,147 WARNING  [sqlite.py:234] Insert of existing embedding ID: 168
2023-11-16:22:19:40,147 WARNING  [sqlite.py:234] Insert of existing embedding ID: 169
2023-11-16:22:19:40,147 WARNING  [sqlite.py:234] Insert of existing embedding ID: 170
2023-11-16:22:19:40,148 WARNING  [sqlite.py:234] Insert of existing embedding ID: 171
2023-11-16:22:19:40,148 WARNING  [sqlite.py:234] Insert of existing embedding ID: 172
2023-11-16:22:19:40,148 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 160
2023-11-16:22:19:40,148 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 161
2023-11-16:22:19:40,148 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 162
2023-11-16:22:19:40,148 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 163
2023-11-16:22:19:40,148 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 164
2023-11-16:22:19:40,149 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 165
2023-11-16:22:19:40,149 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 166
2023-11-16:22:19:40,149 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 167
2023-11-16:22:19:40,149 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 168
2023-11-16:22:19:40,149 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 169
2023-11-16:22:19:40,149 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 170
2023-11-16:22:19:40,149 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 171
2023-11-16:22:19:40,149 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 172
2023-11-16:22:19:40,185 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:19:40,185 INFO     [vector_search.py:103] Element: (1700092408519074, 'Operating Margin') - Score: 0.8850445747375488
2023-11-16:22:19:40,185 INFO     [vector_search.py:103] Element: (170009239686281, 'Gross Margin') - Score: 0.6535153388977051
2023-11-16:22:19:40,185 INFO     [vector_search.py:103] Element: (1700092408519074, 'Operating Profit') - Score: 0.4499334692955017
2023-11-16:22:19:40,185 INFO     [vector_search.py:103] Element: (1700092377314948, 'OperatingSystems') - Score: 0.42637789249420166
2023-11-16:22:19:40,185 INFO     [vector_search.py:103] Element: (170009236950698, 'Avg_Utilization_Ratio') - Score: 0.3225278854370117
2023-11-16:22:19:40,199 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:19:40,199 INFO     [vector_search.py:103] Element: (1700092408519074, 'Sales Method') - Score: 0.8430612087249756
2023-11-16:22:19:40,199 INFO     [vector_search.py:103] Element: (1700092401406344, 'Sales ($)') - Score: 0.5971314907073975
2023-11-16:22:19:40,199 INFO     [vector_search.py:103] Element: (1700092408519074, 'Total Sales') - Score: 0.4957529306411743
2023-11-16:22:19:40,199 INFO     [vector_search.py:103] Element: (1700092385555876, 'Payment Method') - Score: 0.3795804977416992
2023-11-16:22:19:40,199 INFO     [vector_search.py:103] Element: (1700092408519074, 'Retailer') - Score: 0.35098445415496826
2023-11-16:22:19:40,212 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:19:40,213 INFO     [vector_search.py:103] Element: (1700092390869348, 'City') - Score: 1.0
2023-11-16:22:19:40,213 INFO     [vector_search.py:103] Element: (1700092408519074, 'City') - Score: 1.0
2023-11-16:22:19:40,213 INFO     [vector_search.py:103] Element: (1700092385555876, 'Location') - Score: 0.648856520652771
2023-11-16:22:19:40,213 INFO     [vector_search.py:103] Element: (1700092404695104, 'Location') - Score: 0.648856520652771
2023-11-16:22:19:40,213 INFO     [vector_search.py:103] Element: (1700092390869348, 'State') - Score: 0.5410630106925964
2023-11-16:22:19:40,213 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-16:22:19:40,533 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:19:42,728 INFO     [prebuilt.py:537] 
      Retailer  Retailer ID Invoice Date     Region     State      City  \
0  Foot Locker      1185732   2020-01-01  Northeast  New York  New York   
1  Foot Locker      1185732   2020-01-02  Northeast  New York  New York   
2  Foot Locker      1185732   2020-01-03  Northeast  New York  New York   

                   Product  Price per Unit  Units Sold  Total Sales  \
0    Men's Street Footwear              50        1200     600000.0   
1  Men's Athletic Footwear              50        1000     500000.0   
2  Women's Street Footwear              40        1000     400000.0   

   Operating Profit  Operating Margin Sales Method  
0          300000.0              0.50     In-store  
1          150000.0              0.30     In-store  
2          140000.0              0.35     In-store  
2023-11-16:22:19:42,789 INFO     [logger.py:73] Question: Compare the operating margins between the sales methods and list their differences per city.
2023-11-16:22:19:42,790 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-16:22:19:42,790 INFO     [logger.py:73] Prompt ID: dbc92c63-9bbe-41a4-9c58-560ed6f9347a
2023-11-16:22:19:42,824 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 9648 rows and 13 columns.
This is the metadata of the dataframe dfs[0]:
Retailer,Retailer ID,Invoice Date,Region,State,City,Product,Price per Unit,Units Sold,Total Sales,Operating Profit,Operating Margin,Sales Method
Foot Locker,1185732,2020-01-02,Northeast,New York,New York,Men's Athletic Footwear,50,1000,500000.0,150000.0,0.3,In-store
Foot Locker,1185732,2020-01-04,Northeast,New York,New York,Women's Athletic Footwear,45,850,382500.0,133875.0,0.35,In-store
Foot Locker,1185732,2020-01-03,Northeast,New York,New York,Women's Street Footwear,40,1000,400000.0,140000.0,0.35,In-store
Foot Locker,1185732,2020-01-01,Northeast,New York,New York,Men's Street Footwear,50,1200,600000.0,300000.0,0.5,In-store
Foot Locker,1185732,2020-01-05,Northeast,New York,New York,Men's Apparel,60,900,540000.0,162000.0,0.3,In-store
</dataframe>

<conversation>
User: Compare the operating margins between the sales methods and list their differences per city.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-16:22:19:42,825 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:19:42,825 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 9648 rows and 13 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nRetailer,Retailer ID,Invoice Date,Region,State,City,Product,Price per Unit,Units Sold,Total Sales,Operating Profit,Operating Margin,Sales Method\\nFoot Locker,1185732,2020-01-02,Northeast,New York,New York,Men\'s Athletic Footwear,50,1000,500000.0,150000.0,0.3,In-store\\nFoot Locker,1185732,2020-01-04,Northeast,New York,New York,Women\'s Athletic Footwear,45,850,382500.0,133875.0,0.35,In-store\\nFoot Locker,1185732,2020-01-03,Northeast,New York,New York,Women\'s Street Footwear,40,1000,400000.0,140000.0,0.35,In-store\\nFoot Locker,1185732,2020-01-01,Northeast,New York,New York,Men\'s Street Footwear,50,1200,600000.0,300000.0,0.5,In-store\\nFoot Locker,1185732,2020-01-05,Northeast,New York,New York,Men\'s Apparel,60,900,540000.0,162000.0,0.3,In-store\\n</dataframe>\\n\\n<conversation>\\nUser: Compare the operating margins between the sales methods and list their differences per city.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-16:22:20:03,920 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:20:03,927 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=20763 request_id=99cfd0b2e3d066243fcef3864d443913 response_code=200
2023-11-16:22:20:04,129 INFO     [logger.py:73] Code generated:
```
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    # Prepare: Preprocessing and cleaning data if necessary
    df = dfs[0]
    
    # Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    # Group by 'City' and 'Sales Method', then calculate the mean of 'Operating Margin'
    grouped_df = df.groupby(['City', 'Sales Method'])['Operating Margin'].mean().unstack()
    
    # Calculate the difference between the operating margins of different sales methods
    grouped_df['Difference'] = grouped_df['In-store'] - grouped_df['Online']
    
    # Analyze: Conducting the actual analysis
    result_df = grouped_df.reset_index()
    
    return { "type": "dataframe", "value": result_df }
```

2023-11-16:22:20:04,132 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    df = dfs[0]
    grouped_df = df.groupby(['City', 'Sales Method'])['Operating Margin'].mean().unstack()
    grouped_df['Difference'] = grouped_df['In-store'] - grouped_df['Online']
    result_df = grouped_df.reset_index()
    return {'type': 'dataframe', 'value': result_df}
        ```
2023-11-16:22:20:04,165 WARNING  [logger.py:75] Error of executing code
2023-11-16:22:20:04,206 INFO     [logger.py:73] Answer: {'type': 'dataframe', 'value': Sales Method            City  In-store    Online    Outlet  Difference
0                     Albany  0.365972  0.486528       NaN   -0.120556
1                Albuquerque       NaN  0.397847  0.383056         NaN
2                  Anchorage       NaN  0.412222  0.287500         NaN
3                    Atlanta       NaN  0.419792  0.401528         NaN
4                  Baltimore  0.343750  0.471111       NaN   -0.127361
5                   Billings       NaN  0.535139  0.406944         NaN
6                 Birmingham       NaN  0.623056  0.518819         NaN
7                      Boise       NaN  0.466250  0.444306         NaN
8                     Boston  0.290278  0.417222  0.333889   -0.126944
9                 Burlington  0.385417  0.515139  0.432222   -0.129722
10                Charleston  0.393750  0.461991       NaN   -0.068241
11                 Charlotte       NaN  0.463542       NaN         NaN
12                  Cheyenne  0.340972  0.464583       NaN   -0.123611
13                   Chicago       NaN  0.510139  0.388889         NaN
14                  Columbus       NaN  0.459028       NaN         NaN
15                    Dallas       NaN  0.531806  0.427708         NaN
16                    Denver  0.365278  0.488889       NaN   -0.123611
17                Des Moines  0.358333  0.483472       NaN   -0.125139
18                   Detroit  0.413194  0.538333       NaN   -0.125139
19                     Fargo  0.336441  0.441765       NaN   -0.105324
20                  Hartford  0.343750  0.472639  0.388472   -0.128889
21                  Honolulu       NaN  0.382917  0.256250         NaN
22                   Houston       NaN  0.502083  0.402778         NaN
23              Indianapolis  0.370139  0.497639       NaN   -0.127500
24                   Jackson       NaN  0.459792  0.443333         NaN
25                 Knoxville       NaN  0.574306  0.472708         NaN
26                 Las Vegas  0.322368  0.473611  0.389906   -0.151243
27               Little Rock       NaN  0.445694  0.430139         NaN
28               Los Angeles       NaN  0.481667  0.383194         NaN
29                Louisville       NaN  0.448611       NaN         NaN
30                Manchester  0.341071  0.461528  0.359310   -0.120456
31                     Miami  0.365972  0.492361       NaN   -0.126389
32                 Milwaukee  0.361806  0.486667       NaN   -0.124861
33               Minneapolis  0.344231  0.470417  0.346739   -0.126186
34               New Orleans  0.402500  0.461210  0.434444   -0.058710
35                  New York  0.364286  0.464167  0.362409   -0.099881
36                    Newark  0.364583  0.489583       NaN   -0.125000
37             Oklahoma City       NaN  0.440903  0.423472         NaN
38                     Omaha       NaN  0.521389  0.394444         NaN
39                   Orlando  0.311000  0.431528  0.341064   -0.120528
40              Philadelphia       NaN  0.491806  0.392917         NaN
41                   Phoenix       NaN  0.395972  0.377500         NaN
42                  Portland  0.356250  0.472083  0.369097   -0.115833
43                Providence  0.355556  0.479861  0.401667   -0.124306
44                  Richmond  0.357639  0.483056  0.402500   -0.125417
45            Salt Lake City  0.387500  0.512917  0.433611   -0.125417
46             San Francisco       NaN  0.423611  0.324722         NaN
47                   Seattle  0.261806  0.388333       NaN   -0.126528
48               Sioux Falls       NaN  0.394653       NaN         NaN
49                 St. Louis  0.391667  0.514722       NaN   -0.123056
50                   Wichita       NaN  0.411667       NaN         NaN
51                Wilmington  0.366667  0.489306       NaN   -0.122639}
2023-11-16:22:20:04,206 INFO     [logger.py:73] Executed in: 21.417195796966553s
2023-11-16:22:20:04,313 INFO     [quality_test.py:48] customer request: What the best distribution of budget between TV, Radio and Newspaper Ads is and list their ROAS?
2023-11-16:22:20:04,615 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:20:04,616 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: What the best distribution of budget between TV, Radio and Newspaper Ads is and list their ROAS? \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-16:22:20:05,623 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:20:05,624 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=683 request_id=586d9394e3fb6b8b534b0b38239da0e1 response_code=200
2023-11-16:22:20:05,628 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-16:22:20:06,945 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-16:22:20:07,083 WARNING  [sqlite.py:234] Insert of existing embedding ID: 0
2023-11-16:22:20:07,084 WARNING  [sqlite.py:234] Insert of existing embedding ID: 1
2023-11-16:22:20:07,084 WARNING  [sqlite.py:234] Insert of existing embedding ID: 2
2023-11-16:22:20:07,085 WARNING  [sqlite.py:234] Insert of existing embedding ID: 3
2023-11-16:22:20:07,085 WARNING  [sqlite.py:234] Insert of existing embedding ID: 4
2023-11-16:22:20:07,085 WARNING  [sqlite.py:234] Insert of existing embedding ID: 5
2023-11-16:22:20:07,086 WARNING  [sqlite.py:234] Insert of existing embedding ID: 6
2023-11-16:22:20:07,086 WARNING  [sqlite.py:234] Insert of existing embedding ID: 7
2023-11-16:22:20:07,086 WARNING  [sqlite.py:234] Insert of existing embedding ID: 8
2023-11-16:22:20:07,086 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 0
2023-11-16:22:20:07,087 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 1
2023-11-16:22:20:07,087 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 2
2023-11-16:22:20:07,087 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 3
2023-11-16:22:20:07,087 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 4
2023-11-16:22:20:07,087 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 5
2023-11-16:22:20:07,087 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 6
2023-11-16:22:20:07,087 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 7
2023-11-16:22:20:07,087 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 8
2023-11-16:22:20:07,118 WARNING  [sqlite.py:234] Insert of existing embedding ID: 9
2023-11-16:22:20:07,119 WARNING  [sqlite.py:234] Insert of existing embedding ID: 10
2023-11-16:22:20:07,120 WARNING  [sqlite.py:234] Insert of existing embedding ID: 11
2023-11-16:22:20:07,120 WARNING  [sqlite.py:234] Insert of existing embedding ID: 12
2023-11-16:22:20:07,121 WARNING  [sqlite.py:234] Insert of existing embedding ID: 13
2023-11-16:22:20:07,121 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 9
2023-11-16:22:20:07,122 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 10
2023-11-16:22:20:07,122 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 11
2023-11-16:22:20:07,122 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 12
2023-11-16:22:20:07,122 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 13
2023-11-16:22:20:07,266 WARNING  [sqlite.py:234] Insert of existing embedding ID: 14
2023-11-16:22:20:07,266 WARNING  [sqlite.py:234] Insert of existing embedding ID: 15
2023-11-16:22:20:07,267 WARNING  [sqlite.py:234] Insert of existing embedding ID: 16
2023-11-16:22:20:07,267 WARNING  [sqlite.py:234] Insert of existing embedding ID: 17
2023-11-16:22:20:07,267 WARNING  [sqlite.py:234] Insert of existing embedding ID: 18
2023-11-16:22:20:07,268 WARNING  [sqlite.py:234] Insert of existing embedding ID: 19
2023-11-16:22:20:07,269 WARNING  [sqlite.py:234] Insert of existing embedding ID: 20
2023-11-16:22:20:07,269 WARNING  [sqlite.py:234] Insert of existing embedding ID: 21
2023-11-16:22:20:07,270 WARNING  [sqlite.py:234] Insert of existing embedding ID: 22
2023-11-16:22:20:07,270 WARNING  [sqlite.py:234] Insert of existing embedding ID: 23
2023-11-16:22:20:07,271 WARNING  [sqlite.py:234] Insert of existing embedding ID: 24
2023-11-16:22:20:07,271 WARNING  [sqlite.py:234] Insert of existing embedding ID: 25
2023-11-16:22:20:07,271 WARNING  [sqlite.py:234] Insert of existing embedding ID: 26
2023-11-16:22:20:07,271 WARNING  [sqlite.py:234] Insert of existing embedding ID: 27
2023-11-16:22:20:07,272 WARNING  [sqlite.py:234] Insert of existing embedding ID: 28
2023-11-16:22:20:07,272 WARNING  [sqlite.py:234] Insert of existing embedding ID: 29
2023-11-16:22:20:07,272 WARNING  [sqlite.py:234] Insert of existing embedding ID: 30
2023-11-16:22:20:07,273 WARNING  [sqlite.py:234] Insert of existing embedding ID: 31
2023-11-16:22:20:07,273 WARNING  [sqlite.py:234] Insert of existing embedding ID: 32
2023-11-16:22:20:07,274 WARNING  [sqlite.py:234] Insert of existing embedding ID: 33
2023-11-16:22:20:07,274 WARNING  [sqlite.py:234] Insert of existing embedding ID: 34
2023-11-16:22:20:07,274 WARNING  [sqlite.py:234] Insert of existing embedding ID: 35
2023-11-16:22:20:07,275 WARNING  [sqlite.py:234] Insert of existing embedding ID: 36
2023-11-16:22:20:07,275 WARNING  [sqlite.py:234] Insert of existing embedding ID: 37
2023-11-16:22:20:07,275 WARNING  [sqlite.py:234] Insert of existing embedding ID: 38
2023-11-16:22:20:07,276 WARNING  [sqlite.py:234] Insert of existing embedding ID: 39
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 14
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 15
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 16
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 17
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 18
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 19
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 20
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 21
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 22
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 23
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 24
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 25
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 26
2023-11-16:22:20:07,276 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 27
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 28
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 29
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 30
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 31
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 32
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 33
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 34
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 35
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 36
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 37
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 38
2023-11-16:22:20:07,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 39
2023-11-16:22:20:07,461 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:20:07,782 WARNING  [sqlite.py:234] Insert of existing embedding ID: 40
2023-11-16:22:20:07,782 WARNING  [sqlite.py:234] Insert of existing embedding ID: 41
2023-11-16:22:20:07,784 WARNING  [sqlite.py:234] Insert of existing embedding ID: 42
2023-11-16:22:20:07,786 WARNING  [sqlite.py:234] Insert of existing embedding ID: 43
2023-11-16:22:20:07,787 WARNING  [sqlite.py:234] Insert of existing embedding ID: 44
2023-11-16:22:20:07,787 WARNING  [sqlite.py:234] Insert of existing embedding ID: 45
2023-11-16:22:20:07,788 WARNING  [sqlite.py:234] Insert of existing embedding ID: 46
2023-11-16:22:20:07,788 WARNING  [sqlite.py:234] Insert of existing embedding ID: 47
2023-11-16:22:20:07,789 WARNING  [sqlite.py:234] Insert of existing embedding ID: 48
2023-11-16:22:20:07,789 WARNING  [sqlite.py:234] Insert of existing embedding ID: 49
2023-11-16:22:20:07,790 WARNING  [sqlite.py:234] Insert of existing embedding ID: 50
2023-11-16:22:20:07,790 WARNING  [sqlite.py:234] Insert of existing embedding ID: 51
2023-11-16:22:20:07,791 WARNING  [sqlite.py:234] Insert of existing embedding ID: 52
2023-11-16:22:20:07,791 WARNING  [sqlite.py:234] Insert of existing embedding ID: 53
2023-11-16:22:20:07,792 WARNING  [sqlite.py:234] Insert of existing embedding ID: 54
2023-11-16:22:20:07,793 WARNING  [sqlite.py:234] Insert of existing embedding ID: 55
2023-11-16:22:20:07,793 WARNING  [sqlite.py:234] Insert of existing embedding ID: 56
2023-11-16:22:20:07,794 WARNING  [sqlite.py:234] Insert of existing embedding ID: 57
2023-11-16:22:20:07,794 WARNING  [sqlite.py:234] Insert of existing embedding ID: 58
2023-11-16:22:20:07,794 WARNING  [sqlite.py:234] Insert of existing embedding ID: 59
2023-11-16:22:20:07,795 WARNING  [sqlite.py:234] Insert of existing embedding ID: 60
2023-11-16:22:20:07,795 WARNING  [sqlite.py:234] Insert of existing embedding ID: 61
2023-11-16:22:20:07,795 WARNING  [sqlite.py:234] Insert of existing embedding ID: 62
2023-11-16:22:20:07,795 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 40
2023-11-16:22:20:07,795 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 41
2023-11-16:22:20:07,795 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 42
2023-11-16:22:20:07,795 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 43
2023-11-16:22:20:07,795 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 44
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 45
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 46
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 47
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 48
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 49
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 50
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 51
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 52
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 53
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 54
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 55
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 56
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 57
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 58
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 59
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 60
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 61
2023-11-16:22:20:07,796 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 62
2023-11-16:22:20:07,862 WARNING  [sqlite.py:234] Insert of existing embedding ID: 63
2023-11-16:22:20:07,863 WARNING  [sqlite.py:234] Insert of existing embedding ID: 64
2023-11-16:22:20:07,864 WARNING  [sqlite.py:234] Insert of existing embedding ID: 65
2023-11-16:22:20:07,864 WARNING  [sqlite.py:234] Insert of existing embedding ID: 66
2023-11-16:22:20:07,865 WARNING  [sqlite.py:234] Insert of existing embedding ID: 67
2023-11-16:22:20:07,865 WARNING  [sqlite.py:234] Insert of existing embedding ID: 68
2023-11-16:22:20:07,866 WARNING  [sqlite.py:234] Insert of existing embedding ID: 69
2023-11-16:22:20:07,867 WARNING  [sqlite.py:234] Insert of existing embedding ID: 70
2023-11-16:22:20:07,867 WARNING  [sqlite.py:234] Insert of existing embedding ID: 71
2023-11-16:22:20:07,868 WARNING  [sqlite.py:234] Insert of existing embedding ID: 72
2023-11-16:22:20:07,868 WARNING  [sqlite.py:234] Insert of existing embedding ID: 73
2023-11-16:22:20:07,869 WARNING  [sqlite.py:234] Insert of existing embedding ID: 74
2023-11-16:22:20:07,869 WARNING  [sqlite.py:234] Insert of existing embedding ID: 75
2023-11-16:22:20:07,870 WARNING  [sqlite.py:234] Insert of existing embedding ID: 76
2023-11-16:22:20:07,871 WARNING  [sqlite.py:234] Insert of existing embedding ID: 77
2023-11-16:22:20:07,871 WARNING  [sqlite.py:234] Insert of existing embedding ID: 78
2023-11-16:22:20:07,872 WARNING  [sqlite.py:234] Insert of existing embedding ID: 79
2023-11-16:22:20:07,872 WARNING  [sqlite.py:234] Insert of existing embedding ID: 80
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 63
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 64
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 65
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 66
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 67
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 68
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 69
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 70
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 71
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 72
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 73
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 74
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 75
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 76
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 77
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 78
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 79
2023-11-16:22:20:07,873 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 80
2023-11-16:22:20:07,919 WARNING  [sqlite.py:234] Insert of existing embedding ID: 81
2023-11-16:22:20:07,920 WARNING  [sqlite.py:234] Insert of existing embedding ID: 82
2023-11-16:22:20:07,921 WARNING  [sqlite.py:234] Insert of existing embedding ID: 83
2023-11-16:22:20:07,921 WARNING  [sqlite.py:234] Insert of existing embedding ID: 84
2023-11-16:22:20:07,922 WARNING  [sqlite.py:234] Insert of existing embedding ID: 85
2023-11-16:22:20:07,923 WARNING  [sqlite.py:234] Insert of existing embedding ID: 86
2023-11-16:22:20:07,923 WARNING  [sqlite.py:234] Insert of existing embedding ID: 87
2023-11-16:22:20:07,924 WARNING  [sqlite.py:234] Insert of existing embedding ID: 88
2023-11-16:22:20:07,924 WARNING  [sqlite.py:234] Insert of existing embedding ID: 89
2023-11-16:22:20:07,925 WARNING  [sqlite.py:234] Insert of existing embedding ID: 90
2023-11-16:22:20:07,925 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 81
2023-11-16:22:20:07,925 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 82
2023-11-16:22:20:07,925 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 83
2023-11-16:22:20:07,925 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 84
2023-11-16:22:20:07,925 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 85
2023-11-16:22:20:07,925 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 86
2023-11-16:22:20:07,925 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 87
2023-11-16:22:20:07,925 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 88
2023-11-16:22:20:07,925 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 89
2023-11-16:22:20:07,925 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 90
2023-11-16:22:20:07,998 WARNING  [sqlite.py:234] Insert of existing embedding ID: 91
2023-11-16:22:20:07,998 WARNING  [sqlite.py:234] Insert of existing embedding ID: 92
2023-11-16:22:20:07,998 WARNING  [sqlite.py:234] Insert of existing embedding ID: 93
2023-11-16:22:20:07,999 WARNING  [sqlite.py:234] Insert of existing embedding ID: 94
2023-11-16:22:20:07,999 WARNING  [sqlite.py:234] Insert of existing embedding ID: 95
2023-11-16:22:20:08,000 WARNING  [sqlite.py:234] Insert of existing embedding ID: 96
2023-11-16:22:20:08,000 WARNING  [sqlite.py:234] Insert of existing embedding ID: 97
2023-11-16:22:20:08,000 WARNING  [sqlite.py:234] Insert of existing embedding ID: 98
2023-11-16:22:20:08,001 WARNING  [sqlite.py:234] Insert of existing embedding ID: 99
2023-11-16:22:20:08,001 WARNING  [sqlite.py:234] Insert of existing embedding ID: 100
2023-11-16:22:20:08,002 WARNING  [sqlite.py:234] Insert of existing embedding ID: 101
2023-11-16:22:20:08,002 WARNING  [sqlite.py:234] Insert of existing embedding ID: 102
2023-11-16:22:20:08,002 WARNING  [sqlite.py:234] Insert of existing embedding ID: 103
2023-11-16:22:20:08,003 WARNING  [sqlite.py:234] Insert of existing embedding ID: 104
2023-11-16:22:20:08,003 WARNING  [sqlite.py:234] Insert of existing embedding ID: 105
2023-11-16:22:20:08,004 WARNING  [sqlite.py:234] Insert of existing embedding ID: 106
2023-11-16:22:20:08,004 WARNING  [sqlite.py:234] Insert of existing embedding ID: 107
2023-11-16:22:20:08,004 WARNING  [sqlite.py:234] Insert of existing embedding ID: 108
2023-11-16:22:20:08,005 WARNING  [sqlite.py:234] Insert of existing embedding ID: 109
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 91
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 92
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 93
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 94
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 95
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 96
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 97
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 98
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 99
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 100
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 101
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 102
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 103
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 104
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 105
2023-11-16:22:20:08,005 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 106
2023-11-16:22:20:08,006 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 107
2023-11-16:22:20:08,006 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 108
2023-11-16:22:20:08,006 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 109
2023-11-16:22:20:08,073 WARNING  [sqlite.py:234] Insert of existing embedding ID: 110
2023-11-16:22:20:08,074 WARNING  [sqlite.py:234] Insert of existing embedding ID: 111
2023-11-16:22:20:08,074 WARNING  [sqlite.py:234] Insert of existing embedding ID: 112
2023-11-16:22:20:08,075 WARNING  [sqlite.py:234] Insert of existing embedding ID: 113
2023-11-16:22:20:08,075 WARNING  [sqlite.py:234] Insert of existing embedding ID: 114
2023-11-16:22:20:08,076 WARNING  [sqlite.py:234] Insert of existing embedding ID: 115
2023-11-16:22:20:08,077 WARNING  [sqlite.py:234] Insert of existing embedding ID: 116
2023-11-16:22:20:08,077 WARNING  [sqlite.py:234] Insert of existing embedding ID: 117
2023-11-16:22:20:08,078 WARNING  [sqlite.py:234] Insert of existing embedding ID: 118
2023-11-16:22:20:08,078 WARNING  [sqlite.py:234] Insert of existing embedding ID: 119
2023-11-16:22:20:08,079 WARNING  [sqlite.py:234] Insert of existing embedding ID: 120
2023-11-16:22:20:08,080 WARNING  [sqlite.py:234] Insert of existing embedding ID: 121
2023-11-16:22:20:08,080 WARNING  [sqlite.py:234] Insert of existing embedding ID: 122
2023-11-16:22:20:08,081 WARNING  [sqlite.py:234] Insert of existing embedding ID: 123
2023-11-16:22:20:08,082 WARNING  [sqlite.py:234] Insert of existing embedding ID: 124
2023-11-16:22:20:08,082 WARNING  [sqlite.py:234] Insert of existing embedding ID: 125
2023-11-16:22:20:08,083 WARNING  [sqlite.py:234] Insert of existing embedding ID: 126
2023-11-16:22:20:08,083 WARNING  [sqlite.py:234] Insert of existing embedding ID: 127
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 110
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 111
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 112
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 113
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 114
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 115
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 116
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 117
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 118
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 119
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 120
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 121
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 122
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 123
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 124
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 125
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 126
2023-11-16:22:20:08,084 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 127
2023-11-16:22:20:08,185 WARNING  [sqlite.py:234] Insert of existing embedding ID: 128
2023-11-16:22:20:08,185 WARNING  [sqlite.py:234] Insert of existing embedding ID: 129
2023-11-16:22:20:08,186 WARNING  [sqlite.py:234] Insert of existing embedding ID: 130
2023-11-16:22:20:08,188 WARNING  [sqlite.py:234] Insert of existing embedding ID: 131
2023-11-16:22:20:08,189 WARNING  [sqlite.py:234] Insert of existing embedding ID: 132
2023-11-16:22:20:08,194 WARNING  [sqlite.py:234] Insert of existing embedding ID: 133
2023-11-16:22:20:08,195 WARNING  [sqlite.py:234] Insert of existing embedding ID: 134
2023-11-16:22:20:08,195 WARNING  [sqlite.py:234] Insert of existing embedding ID: 135
2023-11-16:22:20:08,199 WARNING  [sqlite.py:234] Insert of existing embedding ID: 136
2023-11-16:22:20:08,200 WARNING  [sqlite.py:234] Insert of existing embedding ID: 137
2023-11-16:22:20:08,201 WARNING  [sqlite.py:234] Insert of existing embedding ID: 138
2023-11-16:22:20:08,202 WARNING  [sqlite.py:234] Insert of existing embedding ID: 139
2023-11-16:22:20:08,206 WARNING  [sqlite.py:234] Insert of existing embedding ID: 140
2023-11-16:22:20:08,206 WARNING  [sqlite.py:234] Insert of existing embedding ID: 141
2023-11-16:22:20:08,208 WARNING  [sqlite.py:234] Insert of existing embedding ID: 142
2023-11-16:22:20:08,209 WARNING  [sqlite.py:234] Insert of existing embedding ID: 143
2023-11-16:22:20:08,209 WARNING  [sqlite.py:234] Insert of existing embedding ID: 144
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 128
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 129
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 130
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 131
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 132
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 133
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 134
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 135
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 136
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 137
2023-11-16:22:20:08,210 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 138
2023-11-16:22:20:08,211 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 139
2023-11-16:22:20:08,211 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 140
2023-11-16:22:20:08,211 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 141
2023-11-16:22:20:08,211 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 142
2023-11-16:22:20:08,211 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 143
2023-11-16:22:20:08,211 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 144
2023-11-16:22:20:08,305 WARNING  [sqlite.py:234] Insert of existing embedding ID: 145
2023-11-16:22:20:08,306 WARNING  [sqlite.py:234] Insert of existing embedding ID: 146
2023-11-16:22:20:08,307 WARNING  [sqlite.py:234] Insert of existing embedding ID: 147
2023-11-16:22:20:08,307 WARNING  [sqlite.py:234] Insert of existing embedding ID: 148
2023-11-16:22:20:08,307 WARNING  [sqlite.py:234] Insert of existing embedding ID: 149
2023-11-16:22:20:08,308 WARNING  [sqlite.py:234] Insert of existing embedding ID: 150
2023-11-16:22:20:08,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 145
2023-11-16:22:20:08,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 146
2023-11-16:22:20:08,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 147
2023-11-16:22:20:08,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 148
2023-11-16:22:20:08,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 149
2023-11-16:22:20:08,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 150
2023-11-16:22:20:08,434 WARNING  [sqlite.py:234] Insert of existing embedding ID: 151
2023-11-16:22:20:08,434 WARNING  [sqlite.py:234] Insert of existing embedding ID: 152
2023-11-16:22:20:08,435 WARNING  [sqlite.py:234] Insert of existing embedding ID: 153
2023-11-16:22:20:08,435 WARNING  [sqlite.py:234] Insert of existing embedding ID: 154
2023-11-16:22:20:08,435 WARNING  [sqlite.py:234] Insert of existing embedding ID: 155
2023-11-16:22:20:08,436 WARNING  [sqlite.py:234] Insert of existing embedding ID: 156
2023-11-16:22:20:08,436 WARNING  [sqlite.py:234] Insert of existing embedding ID: 157
2023-11-16:22:20:08,437 WARNING  [sqlite.py:234] Insert of existing embedding ID: 158
2023-11-16:22:20:08,437 WARNING  [sqlite.py:234] Insert of existing embedding ID: 159
2023-11-16:22:20:08,437 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 151
2023-11-16:22:20:08,437 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 152
2023-11-16:22:20:08,437 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 153
2023-11-16:22:20:08,437 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 154
2023-11-16:22:20:08,437 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 155
2023-11-16:22:20:08,437 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 156
2023-11-16:22:20:08,437 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 157
2023-11-16:22:20:08,437 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 158
2023-11-16:22:20:08,437 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 159
2023-11-16:22:20:08,535 WARNING  [sqlite.py:234] Insert of existing embedding ID: 160
2023-11-16:22:20:08,536 WARNING  [sqlite.py:234] Insert of existing embedding ID: 161
2023-11-16:22:20:08,536 WARNING  [sqlite.py:234] Insert of existing embedding ID: 162
2023-11-16:22:20:08,537 WARNING  [sqlite.py:234] Insert of existing embedding ID: 163
2023-11-16:22:20:08,537 WARNING  [sqlite.py:234] Insert of existing embedding ID: 164
2023-11-16:22:20:08,538 WARNING  [sqlite.py:234] Insert of existing embedding ID: 165
2023-11-16:22:20:08,538 WARNING  [sqlite.py:234] Insert of existing embedding ID: 166
2023-11-16:22:20:08,539 WARNING  [sqlite.py:234] Insert of existing embedding ID: 167
2023-11-16:22:20:08,539 WARNING  [sqlite.py:234] Insert of existing embedding ID: 168
2023-11-16:22:20:08,540 WARNING  [sqlite.py:234] Insert of existing embedding ID: 169
2023-11-16:22:20:08,540 WARNING  [sqlite.py:234] Insert of existing embedding ID: 170
2023-11-16:22:20:08,541 WARNING  [sqlite.py:234] Insert of existing embedding ID: 171
2023-11-16:22:20:08,541 WARNING  [sqlite.py:234] Insert of existing embedding ID: 172
2023-11-16:22:20:08,541 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 160
2023-11-16:22:20:08,541 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 161
2023-11-16:22:20:08,541 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 162
2023-11-16:22:20:08,541 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 163
2023-11-16:22:20:08,541 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 164
2023-11-16:22:20:08,542 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 165
2023-11-16:22:20:08,542 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 166
2023-11-16:22:20:08,542 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 167
2023-11-16:22:20:08,542 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 168
2023-11-16:22:20:08,542 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 169
2023-11-16:22:20:08,542 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 170
2023-11-16:22:20:08,542 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 171
2023-11-16:22:20:08,542 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 172
2023-11-16:22:20:08,673 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:20:08,674 INFO     [vector_search.py:103] Element: (1700092401406344, 'TV Ad Budget ($)') - Score: 0.6587990522384644
2023-11-16:22:20:08,674 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.5262637138366699
2023-11-16:22:20:08,674 INFO     [vector_search.py:103] Element: (1700092401406344, 'Radio Ad Budget ($)') - Score: 0.4698755741119385
2023-11-16:22:20:08,674 INFO     [vector_search.py:103] Element: (1700092401406344, 'Newspaper Ad Budget ($)') - Score: 0.4328979253768921
2023-11-16:22:20:08,674 INFO     [vector_search.py:103] Element: (1700092408519074, 'Product') - Score: 0.39108332991600037
2023-11-16:22:20:08,710 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:20:08,710 INFO     [vector_search.py:103] Element: (1700092401406344, 'Radio Ad Budget ($)') - Score: 0.7237301468849182
2023-11-16:22:20:08,710 INFO     [vector_search.py:103] Element: (1700092401406344, 'TV Ad Budget ($)') - Score: 0.4766446053981781
2023-11-16:22:20:08,710 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.47453445196151733
2023-11-16:22:20:08,710 INFO     [vector_search.py:103] Element: (1700092401406344, 'Newspaper Ad Budget ($)') - Score: 0.40849071741104126
2023-11-16:22:20:08,710 INFO     [vector_search.py:103] Element: (1700092381859424, 'Subscription Type') - Score: 0.3200311064720154
2023-11-16:22:20:08,803 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:20:08,804 INFO     [vector_search.py:103] Element: (1700092401406344, 'Newspaper Ad Budget ($)') - Score: 0.6830779314041138
2023-11-16:22:20:08,804 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.5353696346282959
2023-11-16:22:20:08,804 INFO     [vector_search.py:103] Element: (1700092401406344, 'TV Ad Budget ($)') - Score: 0.48185086250305176
2023-11-16:22:20:08,804 INFO     [vector_search.py:103] Element: (1700092401406344, 'Radio Ad Budget ($)') - Score: 0.44487521052360535
2023-11-16:22:20:08,804 INFO     [vector_search.py:103] Element: (1700092362344043, 'ADEmail') - Score: 0.3837988078594208
2023-11-16:22:20:08,918 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:20:08,918 INFO     [vector_search.py:103] Element: (1700092377314948, 'Administrative') - Score: 0.3609219789505005
2023-11-16:22:20:08,919 INFO     [vector_search.py:103] Element: (1700092353790055, 'Name') - Score: 0.35301458835601807
2023-11-16:22:20:08,919 INFO     [vector_search.py:103] Element: (1700092362344043, 'RaceDesc') - Score: 0.33363693952560425
2023-11-16:22:20:08,919 INFO     [vector_search.py:103] Element: (1700092385555876, 'Location') - Score: 0.3080888092517853
2023-11-16:22:20:08,919 INFO     [vector_search.py:103] Element: (1700092404695104, 'Location') - Score: 0.3080888092517853
2023-11-16:22:20:08,919 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-16:22:20:08,995 INFO     [prebuilt.py:537] 
   Unnamed: 0  TV Ad Budget ($)  Radio Ad Budget ($)  Newspaper Ad Budget ($)  \
0           1             230.1                 37.8                     69.2   
1           2              44.5                 39.3                     45.1   
2           3              17.2                 45.9                     69.3   

   Sales ($)  gender  
0       22.1  female  
1       10.4    male  
2        9.3    male  
2023-11-16:22:20:09,180 INFO     [prebuilt.py:537] 
        Date Months    Revenue  Target Revenue     Leads  \
0 2018-01-01    Jan  8304345.0         8492400  8304.345   
1 2018-02-01    Feb  7856000.0         8492400  7856.000   
2 2018-03-01    Mar  7933500.0         8492400  7933.500   

                                 Marketing Campaigns  Marketing Cost  \
0                      Massive discounts and Hampers       2200000.0   
1        Arranging Giveaways,Investing on Google ads       2015840.0   
2  Designing optimized and attractive landing pag...       2008800.0   

   Gross Profit  Gross Margin  Conversion Rate  Churn Rate         CAC  \
0     6104345.0      0.735078             0.07        0.07  264.921556   
1     5840160.0      0.743401             0.04        0.07  256.598778   
2     5924700.0      0.746795             0.08        0.02  253.204765   

   Marketing Influence  Customer Lifetime Value  Organic Reach Rate  \
0                 0.46                    59494               0.357   
1                 0.50                    68664               0.454   
2                 0.26                    78923               0.329   

   Unnamed: 15 Unnamed: 16  
0          NaN         NaN  
1          NaN         NaN  
2          NaN         NaN  
2023-11-16:22:20:09,336 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:20:09,349 INFO     [logger.py:73] Question: What the best distribution of budget between TV, Radio and Newspaper Ads is and list their ROAS?
2023-11-16:22:20:09,355 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-16:22:20:09,356 INFO     [logger.py:73] Prompt ID: 7b2da0c1-69a4-4971-a402-a2f127b2eef1
2023-11-16:22:20:09,417 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 200 rows and 6 columns.
This is the metadata of the dataframe dfs[0]:
Unnamed: 0,TV Ad Budget ($),Radio Ad Budget ($),Newspaper Ad Budget ($),Sales ($),gender
5,180.8,10.8,58.4,12.9,female
2,44.5,39.3,45.1,10.4,male
4,151.5,41.3,58.5,18.5,male
1,230.1,37.8,69.2,22.1,female
3,17.2,45.9,69.3,9.3,male
</dataframe>

<dataframe>
Dataframe dfs[1], with 36 rows and 17 columns.
This is the metadata of the dataframe dfs[1]:
Date,Months,Revenue,Target Revenue,Leads,Marketing Campaigns,Marketing Cost,Gross Profit,Gross Margin,Conversion Rate,Churn Rate,CAC,Marketing Influence,Customer Lifetime Value,Organic Reach Rate,Unnamed: 15,Unnamed: 16
2018-01-01,Jan,8304345.0,8492400,8304.345,Massive discounts and ...,2200000.0,6104345.0,0.735078443874863,0.07,0.07,2362369309,0.46,59494,0.357,,
2018-02-01,Feb,7856000.0,8492400,7856.0,"Arranging Giveaways,In...",2015840.0,5840160.0,0.743401221995927,0.04,0.07,3295308605,0.5,68664,0.454,,
2018-03-01,Mar,7933500.0,8492400,7933.5,Designing optimized an...,2008800.0,5924700.0,0.746795235394214,0.08,0.02,9333423520,0.26,78923,0.329,,
2018-05-01,May,8856000.0,8492400,8856.0,Using influencer marke...,1173600.0,7682400.0,0.867479674796748,0.01,0.05,8660623146,0.72,72000,0.52,,
2018-04-01,Apr,9409500.0,8492400,9409.5,Designing engagement c...,2003520.0,7405980.0,0.787074764865296,0.05,0.03,2200357208,0.35,82310,0.471,,
</dataframe>

<conversation>
User: What the best distribution of budget between TV, Radio and Newspaper Ads is and list their ROAS?
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-16:22:20:09,419 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:20:09,419 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 200 rows and 6 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nUnnamed: 0,TV Ad Budget ($),Radio Ad Budget ($),Newspaper Ad Budget ($),Sales ($),gender\\n5,180.8,10.8,58.4,12.9,female\\n2,44.5,39.3,45.1,10.4,male\\n4,151.5,41.3,58.5,18.5,male\\n1,230.1,37.8,69.2,22.1,female\\n3,17.2,45.9,69.3,9.3,male\\n</dataframe>\\n\\n<dataframe>\\nDataframe dfs[1], with 36 rows and 17 columns.\\nThis is the metadata of the dataframe dfs[1]:\\nDate,Months,Revenue,Target Revenue,Leads,Marketing Campaigns,Marketing Cost,Gross Profit,Gross Margin,Conversion Rate,Churn Rate,CAC,Marketing Influence,Customer Lifetime Value,Organic Reach Rate,Unnamed: 15,Unnamed: 16\\n2018-01-01,Jan,8304345.0,8492400,8304.345,Massive discounts and ...,2200000.0,6104345.0,0.735078443874863,0.07,0.07,2362369309,0.46,59494,0.357,,\\n2018-02-01,Feb,7856000.0,8492400,7856.0,\\"Arranging Giveaways,In...\\",2015840.0,5840160.0,0.743401221995927,0.04,0.07,3295308605,0.5,68664,0.454,,\\n2018-03-01,Mar,7933500.0,8492400,7933.5,Designing optimized an...,2008800.0,5924700.0,0.746795235394214,0.08,0.02,9333423520,0.26,78923,0.329,,\\n2018-05-01,May,8856000.0,8492400,8856.0,Using influencer marke...,1173600.0,7682400.0,0.867479674796748,0.01,0.05,8660623146,0.72,72000,0.52,,\\n2018-04-01,Apr,9409500.0,8492400,9409.5,Designing engagement c...,2003520.0,7405980.0,0.787074764865296,0.05,0.03,2200357208,0.35,82310,0.471,,\\n</dataframe>\\n\\n<conversation>\\nUser: What the best distribution of budget between TV, Radio and Newspaper Ads is and list their ROAS?\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-16:22:20:48,845 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:20:48,850 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=39014 request_id=a6cd998f0067ccd89f7dd0f0db5915f0 response_code=200
2023-11-16:22:20:48,948 INFO     [logger.py:73] Code generated:
```
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    # Extracting the dataframes
    ad_budget_df = dfs[0]
    revenue_df = dfs[1]

    # Calculating total ad budget
    ad_budget_df['Total Ad Budget ($)'] = ad_budget_df['TV Ad Budget ($)'] + ad_budget_df['Radio Ad Budget ($)'] + ad_budget_df['Newspaper Ad Budget ($)']

    # Calculating ROAS for each channel
    ad_budget_df['TV ROAS'] = ad_budget_df['Sales ($)'] / ad_budget_df['TV Ad Budget ($)']
    ad_budget_df['Radio ROAS'] = ad_budget_df['Sales ($)'] / ad_budget_df['Radio Ad Budget ($)']
    ad_budget_df['Newspaper ROAS'] = ad_budget_df['Sales ($)'] / ad_budget_df['Newspaper Ad Budget ($)']

    # Finding the best distribution of budget
    total_budget = ad_budget_df['Total Ad Budget ($)'].sum()
    tv_budget_percent = ad_budget_df['TV Ad Budget ($)'].sum() / total_budget
    radio_budget_percent = ad_budget_df['Radio Ad Budget ($)'].sum() / total_budget
    newspaper_budget_percent = ad_budget_df['Newspaper Ad Budget ($)'].sum() / total_budget

    # Finding the average ROAS for each channel
    avg_tv_roas = ad_budget_df['TV ROAS'].mean()
    avg_radio_roas = ad_budget_df['Radio ROAS'].mean()
    avg_newspaper_roas = ad_budget_df['Newspaper ROAS'].mean()

    # Preparing the result
    result = {
        "Best Distribution of Budget": {
            "TV": tv_budget_percent,
            "Radio": radio_budget_percent,
            "Newspaper": newspaper_budget_percent
        },
        "Average ROAS": {
            "TV": avg_tv_roas,
            "Radio": avg_radio_roas,
            "Newspaper": avg_newspaper_roas
        }
    }

    return { "type": "dataframe", "value": pd.DataFrame(result) }
```

2023-11-16:22:20:48,967 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    ad_budget_df = dfs[0]
    revenue_df = dfs[1]
    ad_budget_df['Total Ad Budget ($)'] = ad_budget_df['TV Ad Budget ($)'] + ad_budget_df['Radio Ad Budget ($)'] + ad_budget_df['Newspaper Ad Budget ($)']
    ad_budget_df['TV ROAS'] = ad_budget_df['Sales ($)'] / ad_budget_df['TV Ad Budget ($)']
    ad_budget_df['Radio ROAS'] = ad_budget_df['Sales ($)'] / ad_budget_df['Radio Ad Budget ($)']
    ad_budget_df['Newspaper ROAS'] = ad_budget_df['Sales ($)'] / ad_budget_df['Newspaper Ad Budget ($)']
    total_budget = ad_budget_df['Total Ad Budget ($)'].sum()
    tv_budget_percent = ad_budget_df['TV Ad Budget ($)'].sum() / total_budget
    radio_budget_percent = ad_budget_df['Radio Ad Budget ($)'].sum() / total_budget
    newspaper_budget_percent = ad_budget_df['Newspaper Ad Budget ($)'].sum() / total_budget
    avg_tv_roas = ad_budget_df['TV ROAS'].mean()
    avg_radio_roas = ad_budget_df['Radio ROAS'].mean()
    avg_newspaper_roas = ad_budget_df['Newspaper ROAS'].mean()
    result = {'Best Distribution of Budget': {'TV': tv_budget_percent, 'Radio': radio_budget_percent, 'Newspaper': newspaper_budget_percent}, 'Average ROAS': {'TV': avg_tv_roas, 'Radio': avg_radio_roas, 'Newspaper': avg_newspaper_roas}}
    return {'type': 'dataframe', 'value': pd.DataFrame(result)}
        ```
2023-11-16:22:20:49,089 INFO     [logger.py:73] Answer: {'type': 'dataframe', 'value':            Best Distribution of Budget  Average ROAS
TV                            0.732063      0.167024
Radio                         0.115822           inf
Newspaper                     0.152116      1.320172}
2023-11-16:22:20:49,090 INFO     [logger.py:73] Executed in: 39.74180793762207s
2023-11-16:22:20:49,157 INFO     [quality_test.py:48] customer request: Check if there is a correlation between pay zones and the reason why people left.
2023-11-16:22:20:49,239 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:20:49,239 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Check if there is a correlation between pay zones and the reason why people left. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-16:22:20:50,062 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:20:50,064 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=471 request_id=f27c57baeae985d720c94f5c351f87cd response_code=200
2023-11-16:22:20:50,071 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-16:22:20:50,910 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-16:22:20:51,019 WARNING  [sqlite.py:234] Insert of existing embedding ID: 0
2023-11-16:22:20:51,020 WARNING  [sqlite.py:234] Insert of existing embedding ID: 1
2023-11-16:22:20:51,020 WARNING  [sqlite.py:234] Insert of existing embedding ID: 2
2023-11-16:22:20:51,020 WARNING  [sqlite.py:234] Insert of existing embedding ID: 3
2023-11-16:22:20:51,021 WARNING  [sqlite.py:234] Insert of existing embedding ID: 4
2023-11-16:22:20:51,021 WARNING  [sqlite.py:234] Insert of existing embedding ID: 5
2023-11-16:22:20:51,021 WARNING  [sqlite.py:234] Insert of existing embedding ID: 6
2023-11-16:22:20:51,021 WARNING  [sqlite.py:234] Insert of existing embedding ID: 7
2023-11-16:22:20:51,022 WARNING  [sqlite.py:234] Insert of existing embedding ID: 8
2023-11-16:22:20:51,022 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 0
2023-11-16:22:20:51,022 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 1
2023-11-16:22:20:51,022 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 2
2023-11-16:22:20:51,022 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 3
2023-11-16:22:20:51,022 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 4
2023-11-16:22:20:51,022 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 5
2023-11-16:22:20:51,022 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 6
2023-11-16:22:20:51,022 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 7
2023-11-16:22:20:51,022 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 8
2023-11-16:22:20:51,040 WARNING  [sqlite.py:234] Insert of existing embedding ID: 9
2023-11-16:22:20:51,040 WARNING  [sqlite.py:234] Insert of existing embedding ID: 10
2023-11-16:22:20:51,040 WARNING  [sqlite.py:234] Insert of existing embedding ID: 11
2023-11-16:22:20:51,040 WARNING  [sqlite.py:234] Insert of existing embedding ID: 12
2023-11-16:22:20:51,041 WARNING  [sqlite.py:234] Insert of existing embedding ID: 13
2023-11-16:22:20:51,041 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 9
2023-11-16:22:20:51,041 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 10
2023-11-16:22:20:51,041 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 11
2023-11-16:22:20:51,041 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 12
2023-11-16:22:20:51,041 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 13
2023-11-16:22:20:51,095 WARNING  [sqlite.py:234] Insert of existing embedding ID: 14
2023-11-16:22:20:51,095 WARNING  [sqlite.py:234] Insert of existing embedding ID: 15
2023-11-16:22:20:51,095 WARNING  [sqlite.py:234] Insert of existing embedding ID: 16
2023-11-16:22:20:51,096 WARNING  [sqlite.py:234] Insert of existing embedding ID: 17
2023-11-16:22:20:51,096 WARNING  [sqlite.py:234] Insert of existing embedding ID: 18
2023-11-16:22:20:51,096 WARNING  [sqlite.py:234] Insert of existing embedding ID: 19
2023-11-16:22:20:51,096 WARNING  [sqlite.py:234] Insert of existing embedding ID: 20
2023-11-16:22:20:51,097 WARNING  [sqlite.py:234] Insert of existing embedding ID: 21
2023-11-16:22:20:51,097 WARNING  [sqlite.py:234] Insert of existing embedding ID: 22
2023-11-16:22:20:51,097 WARNING  [sqlite.py:234] Insert of existing embedding ID: 23
2023-11-16:22:20:51,097 WARNING  [sqlite.py:234] Insert of existing embedding ID: 24
2023-11-16:22:20:51,098 WARNING  [sqlite.py:234] Insert of existing embedding ID: 25
2023-11-16:22:20:51,098 WARNING  [sqlite.py:234] Insert of existing embedding ID: 26
2023-11-16:22:20:51,098 WARNING  [sqlite.py:234] Insert of existing embedding ID: 27
2023-11-16:22:20:51,098 WARNING  [sqlite.py:234] Insert of existing embedding ID: 28
2023-11-16:22:20:51,098 WARNING  [sqlite.py:234] Insert of existing embedding ID: 29
2023-11-16:22:20:51,099 WARNING  [sqlite.py:234] Insert of existing embedding ID: 30
2023-11-16:22:20:51,099 WARNING  [sqlite.py:234] Insert of existing embedding ID: 31
2023-11-16:22:20:51,099 WARNING  [sqlite.py:234] Insert of existing embedding ID: 32
2023-11-16:22:20:51,099 WARNING  [sqlite.py:234] Insert of existing embedding ID: 33
2023-11-16:22:20:51,100 WARNING  [sqlite.py:234] Insert of existing embedding ID: 34
2023-11-16:22:20:51,100 WARNING  [sqlite.py:234] Insert of existing embedding ID: 35
2023-11-16:22:20:51,100 WARNING  [sqlite.py:234] Insert of existing embedding ID: 36
2023-11-16:22:20:51,100 WARNING  [sqlite.py:234] Insert of existing embedding ID: 37
2023-11-16:22:20:51,101 WARNING  [sqlite.py:234] Insert of existing embedding ID: 38
2023-11-16:22:20:51,101 WARNING  [sqlite.py:234] Insert of existing embedding ID: 39
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 14
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 15
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 16
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 17
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 18
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 19
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 20
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 21
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 22
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 23
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 24
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 25
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 26
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 27
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 28
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 29
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 30
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 31
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 32
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 33
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 34
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 35
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 36
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 37
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 38
2023-11-16:22:20:51,101 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 39
2023-11-16:22:20:51,369 WARNING  [sqlite.py:234] Insert of existing embedding ID: 40
2023-11-16:22:20:51,369 WARNING  [sqlite.py:234] Insert of existing embedding ID: 41
2023-11-16:22:20:51,370 WARNING  [sqlite.py:234] Insert of existing embedding ID: 42
2023-11-16:22:20:51,370 WARNING  [sqlite.py:234] Insert of existing embedding ID: 43
2023-11-16:22:20:51,370 WARNING  [sqlite.py:234] Insert of existing embedding ID: 44
2023-11-16:22:20:51,370 WARNING  [sqlite.py:234] Insert of existing embedding ID: 45
2023-11-16:22:20:51,371 WARNING  [sqlite.py:234] Insert of existing embedding ID: 46
2023-11-16:22:20:51,371 WARNING  [sqlite.py:234] Insert of existing embedding ID: 47
2023-11-16:22:20:51,371 WARNING  [sqlite.py:234] Insert of existing embedding ID: 48
2023-11-16:22:20:51,371 WARNING  [sqlite.py:234] Insert of existing embedding ID: 49
2023-11-16:22:20:51,371 WARNING  [sqlite.py:234] Insert of existing embedding ID: 50
2023-11-16:22:20:51,372 WARNING  [sqlite.py:234] Insert of existing embedding ID: 51
2023-11-16:22:20:51,372 WARNING  [sqlite.py:234] Insert of existing embedding ID: 52
2023-11-16:22:20:51,372 WARNING  [sqlite.py:234] Insert of existing embedding ID: 53
2023-11-16:22:20:51,372 WARNING  [sqlite.py:234] Insert of existing embedding ID: 54
2023-11-16:22:20:51,373 WARNING  [sqlite.py:234] Insert of existing embedding ID: 55
2023-11-16:22:20:51,373 WARNING  [sqlite.py:234] Insert of existing embedding ID: 56
2023-11-16:22:20:51,373 WARNING  [sqlite.py:234] Insert of existing embedding ID: 57
2023-11-16:22:20:51,374 WARNING  [sqlite.py:234] Insert of existing embedding ID: 58
2023-11-16:22:20:51,374 WARNING  [sqlite.py:234] Insert of existing embedding ID: 59
2023-11-16:22:20:51,374 WARNING  [sqlite.py:234] Insert of existing embedding ID: 60
2023-11-16:22:20:51,374 WARNING  [sqlite.py:234] Insert of existing embedding ID: 61
2023-11-16:22:20:51,375 WARNING  [sqlite.py:234] Insert of existing embedding ID: 62
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 40
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 41
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 42
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 43
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 44
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 45
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 46
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 47
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 48
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 49
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 50
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 51
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 52
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 53
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 54
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 55
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 56
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 57
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 58
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 59
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 60
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 61
2023-11-16:22:20:51,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 62
2023-11-16:22:20:51,426 WARNING  [sqlite.py:234] Insert of existing embedding ID: 63
2023-11-16:22:20:51,427 WARNING  [sqlite.py:234] Insert of existing embedding ID: 64
2023-11-16:22:20:51,427 WARNING  [sqlite.py:234] Insert of existing embedding ID: 65
2023-11-16:22:20:51,427 WARNING  [sqlite.py:234] Insert of existing embedding ID: 66
2023-11-16:22:20:51,428 WARNING  [sqlite.py:234] Insert of existing embedding ID: 67
2023-11-16:22:20:51,428 WARNING  [sqlite.py:234] Insert of existing embedding ID: 68
2023-11-16:22:20:51,428 WARNING  [sqlite.py:234] Insert of existing embedding ID: 69
2023-11-16:22:20:51,428 WARNING  [sqlite.py:234] Insert of existing embedding ID: 70
2023-11-16:22:20:51,429 WARNING  [sqlite.py:234] Insert of existing embedding ID: 71
2023-11-16:22:20:51,429 WARNING  [sqlite.py:234] Insert of existing embedding ID: 72
2023-11-16:22:20:51,429 WARNING  [sqlite.py:234] Insert of existing embedding ID: 73
2023-11-16:22:20:51,430 WARNING  [sqlite.py:234] Insert of existing embedding ID: 74
2023-11-16:22:20:51,430 WARNING  [sqlite.py:234] Insert of existing embedding ID: 75
2023-11-16:22:20:51,430 WARNING  [sqlite.py:234] Insert of existing embedding ID: 76
2023-11-16:22:20:51,430 WARNING  [sqlite.py:234] Insert of existing embedding ID: 77
2023-11-16:22:20:51,431 WARNING  [sqlite.py:234] Insert of existing embedding ID: 78
2023-11-16:22:20:51,431 WARNING  [sqlite.py:234] Insert of existing embedding ID: 79
2023-11-16:22:20:51,431 WARNING  [sqlite.py:234] Insert of existing embedding ID: 80
2023-11-16:22:20:51,431 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 63
2023-11-16:22:20:51,431 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 64
2023-11-16:22:20:51,431 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 65
2023-11-16:22:20:51,431 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 66
2023-11-16:22:20:51,431 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 67
2023-11-16:22:20:51,431 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 68
2023-11-16:22:20:51,431 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 69
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 70
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 71
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 72
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 73
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 74
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 75
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 76
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 77
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 78
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 79
2023-11-16:22:20:51,432 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 80
2023-11-16:22:20:51,459 WARNING  [sqlite.py:234] Insert of existing embedding ID: 81
2023-11-16:22:20:51,459 WARNING  [sqlite.py:234] Insert of existing embedding ID: 82
2023-11-16:22:20:51,459 WARNING  [sqlite.py:234] Insert of existing embedding ID: 83
2023-11-16:22:20:51,460 WARNING  [sqlite.py:234] Insert of existing embedding ID: 84
2023-11-16:22:20:51,460 WARNING  [sqlite.py:234] Insert of existing embedding ID: 85
2023-11-16:22:20:51,460 WARNING  [sqlite.py:234] Insert of existing embedding ID: 86
2023-11-16:22:20:51,460 WARNING  [sqlite.py:234] Insert of existing embedding ID: 87
2023-11-16:22:20:51,461 WARNING  [sqlite.py:234] Insert of existing embedding ID: 88
2023-11-16:22:20:51,461 WARNING  [sqlite.py:234] Insert of existing embedding ID: 89
2023-11-16:22:20:51,461 WARNING  [sqlite.py:234] Insert of existing embedding ID: 90
2023-11-16:22:20:51,461 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 81
2023-11-16:22:20:51,461 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 82
2023-11-16:22:20:51,461 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 83
2023-11-16:22:20:51,461 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 84
2023-11-16:22:20:51,461 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 85
2023-11-16:22:20:51,461 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 86
2023-11-16:22:20:51,461 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 87
2023-11-16:22:20:51,461 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 88
2023-11-16:22:20:51,461 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 89
2023-11-16:22:20:51,462 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 90
2023-11-16:22:20:51,496 WARNING  [sqlite.py:234] Insert of existing embedding ID: 91
2023-11-16:22:20:51,496 WARNING  [sqlite.py:234] Insert of existing embedding ID: 92
2023-11-16:22:20:51,496 WARNING  [sqlite.py:234] Insert of existing embedding ID: 93
2023-11-16:22:20:51,496 WARNING  [sqlite.py:234] Insert of existing embedding ID: 94
2023-11-16:22:20:51,497 WARNING  [sqlite.py:234] Insert of existing embedding ID: 95
2023-11-16:22:20:51,497 WARNING  [sqlite.py:234] Insert of existing embedding ID: 96
2023-11-16:22:20:51,497 WARNING  [sqlite.py:234] Insert of existing embedding ID: 97
2023-11-16:22:20:51,497 WARNING  [sqlite.py:234] Insert of existing embedding ID: 98
2023-11-16:22:20:51,498 WARNING  [sqlite.py:234] Insert of existing embedding ID: 99
2023-11-16:22:20:51,498 WARNING  [sqlite.py:234] Insert of existing embedding ID: 100
2023-11-16:22:20:51,498 WARNING  [sqlite.py:234] Insert of existing embedding ID: 101
2023-11-16:22:20:51,498 WARNING  [sqlite.py:234] Insert of existing embedding ID: 102
2023-11-16:22:20:51,499 WARNING  [sqlite.py:234] Insert of existing embedding ID: 103
2023-11-16:22:20:51,499 WARNING  [sqlite.py:234] Insert of existing embedding ID: 104
2023-11-16:22:20:51,499 WARNING  [sqlite.py:234] Insert of existing embedding ID: 105
2023-11-16:22:20:51,499 WARNING  [sqlite.py:234] Insert of existing embedding ID: 106
2023-11-16:22:20:51,499 WARNING  [sqlite.py:234] Insert of existing embedding ID: 107
2023-11-16:22:20:51,500 WARNING  [sqlite.py:234] Insert of existing embedding ID: 108
2023-11-16:22:20:51,500 WARNING  [sqlite.py:234] Insert of existing embedding ID: 109
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 91
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 92
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 93
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 94
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 95
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 96
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 97
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 98
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 99
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 100
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 101
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 102
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 103
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 104
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 105
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 106
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 107
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 108
2023-11-16:22:20:51,500 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 109
2023-11-16:22:20:51,527 WARNING  [sqlite.py:234] Insert of existing embedding ID: 110
2023-11-16:22:20:51,527 WARNING  [sqlite.py:234] Insert of existing embedding ID: 111
2023-11-16:22:20:51,528 WARNING  [sqlite.py:234] Insert of existing embedding ID: 112
2023-11-16:22:20:51,528 WARNING  [sqlite.py:234] Insert of existing embedding ID: 113
2023-11-16:22:20:51,528 WARNING  [sqlite.py:234] Insert of existing embedding ID: 114
2023-11-16:22:20:51,528 WARNING  [sqlite.py:234] Insert of existing embedding ID: 115
2023-11-16:22:20:51,529 WARNING  [sqlite.py:234] Insert of existing embedding ID: 116
2023-11-16:22:20:51,529 WARNING  [sqlite.py:234] Insert of existing embedding ID: 117
2023-11-16:22:20:51,529 WARNING  [sqlite.py:234] Insert of existing embedding ID: 118
2023-11-16:22:20:51,529 WARNING  [sqlite.py:234] Insert of existing embedding ID: 119
2023-11-16:22:20:51,529 WARNING  [sqlite.py:234] Insert of existing embedding ID: 120
2023-11-16:22:20:51,530 WARNING  [sqlite.py:234] Insert of existing embedding ID: 121
2023-11-16:22:20:51,530 WARNING  [sqlite.py:234] Insert of existing embedding ID: 122
2023-11-16:22:20:51,530 WARNING  [sqlite.py:234] Insert of existing embedding ID: 123
2023-11-16:22:20:51,530 WARNING  [sqlite.py:234] Insert of existing embedding ID: 124
2023-11-16:22:20:51,531 WARNING  [sqlite.py:234] Insert of existing embedding ID: 125
2023-11-16:22:20:51,531 WARNING  [sqlite.py:234] Insert of existing embedding ID: 126
2023-11-16:22:20:51,531 WARNING  [sqlite.py:234] Insert of existing embedding ID: 127
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 110
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 111
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 112
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 113
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 114
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 115
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 116
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 117
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 118
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 119
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 120
2023-11-16:22:20:51,531 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 121
2023-11-16:22:20:51,532 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 122
2023-11-16:22:20:51,532 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 123
2023-11-16:22:20:51,532 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 124
2023-11-16:22:20:51,532 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 125
2023-11-16:22:20:51,532 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 126
2023-11-16:22:20:51,532 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 127
2023-11-16:22:20:51,558 WARNING  [sqlite.py:234] Insert of existing embedding ID: 128
2023-11-16:22:20:51,558 WARNING  [sqlite.py:234] Insert of existing embedding ID: 129
2023-11-16:22:20:51,559 WARNING  [sqlite.py:234] Insert of existing embedding ID: 130
2023-11-16:22:20:51,559 WARNING  [sqlite.py:234] Insert of existing embedding ID: 131
2023-11-16:22:20:51,559 WARNING  [sqlite.py:234] Insert of existing embedding ID: 132
2023-11-16:22:20:51,559 WARNING  [sqlite.py:234] Insert of existing embedding ID: 133
2023-11-16:22:20:51,560 WARNING  [sqlite.py:234] Insert of existing embedding ID: 134
2023-11-16:22:20:51,560 WARNING  [sqlite.py:234] Insert of existing embedding ID: 135
2023-11-16:22:20:51,560 WARNING  [sqlite.py:234] Insert of existing embedding ID: 136
2023-11-16:22:20:51,560 WARNING  [sqlite.py:234] Insert of existing embedding ID: 137
2023-11-16:22:20:51,560 WARNING  [sqlite.py:234] Insert of existing embedding ID: 138
2023-11-16:22:20:51,561 WARNING  [sqlite.py:234] Insert of existing embedding ID: 139
2023-11-16:22:20:51,561 WARNING  [sqlite.py:234] Insert of existing embedding ID: 140
2023-11-16:22:20:51,561 WARNING  [sqlite.py:234] Insert of existing embedding ID: 141
2023-11-16:22:20:51,561 WARNING  [sqlite.py:234] Insert of existing embedding ID: 142
2023-11-16:22:20:51,562 WARNING  [sqlite.py:234] Insert of existing embedding ID: 143
2023-11-16:22:20:51,562 WARNING  [sqlite.py:234] Insert of existing embedding ID: 144
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 128
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 129
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 130
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 131
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 132
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 133
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 134
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 135
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 136
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 137
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 138
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 139
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 140
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 141
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 142
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 143
2023-11-16:22:20:51,562 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 144
2023-11-16:22:20:51,598 WARNING  [sqlite.py:234] Insert of existing embedding ID: 145
2023-11-16:22:20:51,598 WARNING  [sqlite.py:234] Insert of existing embedding ID: 146
2023-11-16:22:20:51,599 WARNING  [sqlite.py:234] Insert of existing embedding ID: 147
2023-11-16:22:20:51,599 WARNING  [sqlite.py:234] Insert of existing embedding ID: 148
2023-11-16:22:20:51,600 WARNING  [sqlite.py:234] Insert of existing embedding ID: 149
2023-11-16:22:20:51,601 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:20:51,603 WARNING  [sqlite.py:234] Insert of existing embedding ID: 150
2023-11-16:22:20:51,605 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 145
2023-11-16:22:20:51,605 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 146
2023-11-16:22:20:51,605 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 147
2023-11-16:22:20:51,605 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 148
2023-11-16:22:20:51,605 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 149
2023-11-16:22:20:51,605 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 150
2023-11-16:22:20:51,660 WARNING  [sqlite.py:234] Insert of existing embedding ID: 151
2023-11-16:22:20:51,660 WARNING  [sqlite.py:234] Insert of existing embedding ID: 152
2023-11-16:22:20:51,660 WARNING  [sqlite.py:234] Insert of existing embedding ID: 153
2023-11-16:22:20:51,661 WARNING  [sqlite.py:234] Insert of existing embedding ID: 154
2023-11-16:22:20:51,661 WARNING  [sqlite.py:234] Insert of existing embedding ID: 155
2023-11-16:22:20:51,661 WARNING  [sqlite.py:234] Insert of existing embedding ID: 156
2023-11-16:22:20:51,662 WARNING  [sqlite.py:234] Insert of existing embedding ID: 157
2023-11-16:22:20:51,662 WARNING  [sqlite.py:234] Insert of existing embedding ID: 158
2023-11-16:22:20:51,662 WARNING  [sqlite.py:234] Insert of existing embedding ID: 159
2023-11-16:22:20:51,662 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 151
2023-11-16:22:20:51,662 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 152
2023-11-16:22:20:51,662 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 153
2023-11-16:22:20:51,662 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 154
2023-11-16:22:20:51,662 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 155
2023-11-16:22:20:51,662 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 156
2023-11-16:22:20:51,663 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 157
2023-11-16:22:20:51,663 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 158
2023-11-16:22:20:51,663 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 159
2023-11-16:22:20:51,703 WARNING  [sqlite.py:234] Insert of existing embedding ID: 160
2023-11-16:22:20:51,703 WARNING  [sqlite.py:234] Insert of existing embedding ID: 161
2023-11-16:22:20:51,704 WARNING  [sqlite.py:234] Insert of existing embedding ID: 162
2023-11-16:22:20:51,704 WARNING  [sqlite.py:234] Insert of existing embedding ID: 163
2023-11-16:22:20:51,704 WARNING  [sqlite.py:234] Insert of existing embedding ID: 164
2023-11-16:22:20:51,705 WARNING  [sqlite.py:234] Insert of existing embedding ID: 165
2023-11-16:22:20:51,705 WARNING  [sqlite.py:234] Insert of existing embedding ID: 166
2023-11-16:22:20:51,705 WARNING  [sqlite.py:234] Insert of existing embedding ID: 167
2023-11-16:22:20:51,706 WARNING  [sqlite.py:234] Insert of existing embedding ID: 168
2023-11-16:22:20:51,706 WARNING  [sqlite.py:234] Insert of existing embedding ID: 169
2023-11-16:22:20:51,706 WARNING  [sqlite.py:234] Insert of existing embedding ID: 170
2023-11-16:22:20:51,707 WARNING  [sqlite.py:234] Insert of existing embedding ID: 171
2023-11-16:22:20:51,707 WARNING  [sqlite.py:234] Insert of existing embedding ID: 172
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 160
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 161
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 162
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 163
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 164
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 165
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 166
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 167
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 168
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 169
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 170
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 171
2023-11-16:22:20:51,707 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 172
2023-11-16:22:20:51,783 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:20:51,783 INFO     [vector_search.py:103] Element: (1700092362344043, 'PayZone') - Score: 0.7573104500770569
2023-11-16:22:20:51,783 INFO     [vector_search.py:103] Element: (1700092385555876, 'Payment Method') - Score: 0.3829483985900879
2023-11-16:22:20:51,783 INFO     [vector_search.py:103] Element: (1700092377314948, 'Region') - Score: 0.3477385342121124
2023-11-16:22:20:51,784 INFO     [vector_search.py:103] Element: (1700092408519074, 'Region') - Score: 0.3477385342121124
2023-11-16:22:20:51,784 INFO     [vector_search.py:103] Element: (170009236950698, 'Income_Category') - Score: 0.3431512415409088
2023-11-16:22:20:51,849 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:20:51,849 INFO     [vector_search.py:103] Element: (1700092362344043, 'ExitDate') - Score: 0.35853052139282227
2023-11-16:22:20:51,850 INFO     [vector_search.py:103] Element: (1700092385555876, 'Color') - Score: 0.34603676199913025
2023-11-16:22:20:51,850 INFO     [vector_search.py:103] Element: (1700092385555876, 'Location') - Score: 0.3137546181678772
2023-11-16:22:20:51,850 INFO     [vector_search.py:103] Element: (1700092404695104, 'Location') - Score: 0.3137546181678772
2023-11-16:22:20:51,850 INFO     [vector_search.py:103] Element: (1700092362344043, 'Title') - Score: 0.30988895893096924
2023-11-16:22:20:51,851 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-16:22:20:51,912 INFO     [prebuilt.py:537] 
   EmpID FirstName LastName  StartDate ExitDate                    Title  \
0   3427     Uriah  Bridges  20-Sep-19      NaN  Production Technician I   
1   3428     Paula    Small  11-Feb-23      NaN  Production Technician I   
2   3429    Edward     Buck  10-Dec-18      NaN       Area Sales Manager   

        Supervisor                      ADEmail BusinessUnit EmployeeStatus  \
0     Peter Oneill  uriah.bridges@bilearner.com         CCDR         Active   
1  Renee Mccormick    paula.small@bilearner.com           EW         Active   
2   Crystal Walker    edward.buck@bilearner.com           PL         Active   

  EmployeeType PayZone EmployeeClassificationType TerminationType  \
0     Contract  Zone C                  Temporary             Unk   
1     Contract  Zone A                  Part-Time             Unk   
2    Full-Time  Zone B                  Part-Time             Unk   

  TerminationDescription     DepartmentType              Division         DOB  \
0                    NaN  Production         Finance & Accounting  07-10-1969   
1                    NaN  Production                       Aerial  30-08-1965   
2                    NaN              Sales         General - Sga  06-10-1991   

  State JobFunctionDescription GenderCode  LocationCode  RaceDesc MaritalDesc  \
0    MA             Accounting     Female         34904     White     Widowed   
1    MA                  Labor       Male          6593  Hispanic     Widowed   
2    MA              Assistant       Male          2330  Hispanic     Widowed   

  Performance Score  Current Employee Rating  
0       Fully Meets                        4  
1       Fully Meets                        3  
2       Fully Meets                        4  
2023-11-16:22:20:51,944 INFO     [prebuilt.py:537] 
   Customer ID  Age Gender Item Purchased  Category  Purchase Amount (USD)  \
0            1   55   Male         Blouse  Clothing                     53   
1            2   19   Male        Sweater  Clothing                     64   
2            3   50   Male          Jeans  Clothing                     73   

        Location Size   Color  Season  Review Rating Subscription Status  \
0       Kentucky    L    Gray  Winter            3.1                 Yes   
1          Maine    L  Maroon  Winter            3.1                 Yes   
2  Massachusetts    S  Maroon  Spring            3.1                 Yes   

  Payment Method  Shipping Type Discount Applied Promo Code Used  \
0    Credit Card        Express              Yes             Yes   
1  Bank Transfer        Express              Yes             Yes   
2           Cash  Free Shipping              Yes             Yes   

   Previous Purchases Preferred Payment Method Frequency of Purchases  
0                  14                    Venmo            Fortnightly  
1                   2                     Cash            Fortnightly  
2                  23              Credit Card                 Weekly  
2023-11-16:22:20:52,030 INFO     [logger.py:73] Question: Check if there is a correlation between pay zones and the reason why people left.
2023-11-16:22:20:52,032 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-16:22:20:52,033 INFO     [logger.py:73] Prompt ID: 08d0db6c-0a7c-4bd2-ac16-13e744787d32
2023-11-16:22:20:52,098 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 3000 rows and 26 columns.
This is the metadata of the dataframe dfs[0]:
EmpID,FirstName,LastName,StartDate,ExitDate,Title,Supervisor,ADEmail,BusinessUnit,EmployeeStatus,EmployeeType,PayZone,EmployeeClassificationType,TerminationType,TerminationDescription,DepartmentType,Division,DOB,State,JobFunctionDescription,GenderCode,LocationCode,RaceDesc,MaritalDesc,Performance Score,Current Employee Rating
3429,Edward,Buck,10-Dec-18,,Area Sales Manager,Crystal Walker,eba--veoo23@hotmail.com,PL,Active,Full-Time,Zone B,Part-Time,Unk,,Sales,General - Sga,06-10-1991,MA,Assistant,Male,2330,Hispanic,Widowed,Fully Meets,4
3427,Uriah,Bridges,20-Sep-19,,Production Technician I,Peter Oneill,yca-4w2x@gmail.com,CCDR,Active,Contract,Zone C,Temporary,Unk,,Production       ,Finance & Accounting,07-10-1969,MA,Accounting,Female,34904,White,Widowed,Fully Meets,4
3431,Jasmine,Onque,29-Jun-19,,Area Sales Manager,Jason Kim,h9mjj8@protonmail.com,TNS,Active,Contract,Zone A,Temporary,Unk,,Sales,General - Con,29-08-1969,FL,Laborer,Female,33174,Other,Married,Fully Meets,3
3428,Paula,Small,11-Feb-23,,Production Technician I,Renee Mccormick,o56dza15z@outlook.com,EW,Active,Contract,Zone A,Part-Time,Unk,,Production       ,Aerial,30-08-1965,MA,Labor,Male,6593,Hispanic,Widowed,Fully Meets,3
3430,Michael,Riordan,21-Jun-21,,Area Sales Manager,Rebekah Wright,9-d_aloko92@gmail.com,CCDR,Active,Contract,Zone A,Full-Time,Unk,,Sales,Finance & Accounting,04-04-1998,ND,Clerk,Male,58782,Other,Single,Fully Meets,2
</dataframe>

<dataframe>
Dataframe dfs[1], with 3900 rows and 19 columns.
This is the metadata of the dataframe dfs[1]:
Customer ID,Age,Gender,Item Purchased,Category,Purchase Amount (USD),Location,Size,Color,Season,Review Rating,Subscription Status,Payment Method,Shipping Type,Discount Applied,Promo Code Used,Previous Purchases,Preferred Payment Method,Frequency of Purchases
5,45,Male,Blouse,Clothing,49,Oregon,M,Turquoise,Spring,2.7,Yes,Cash,Free Shipping,Yes,Yes,31,PayPal,Annually
4,21,Male,Sandals,Footwear,90,Rhode Island,M,Maroon,Spring,3.5,Yes,PayPal,Next Day Air,Yes,Yes,49,PayPal,Weekly
3,50,Male,Jeans,Clothing,73,Massachusetts,S,Maroon,Spring,3.1,Yes,Cash,Free Shipping,Yes,Yes,23,Credit Card,Weekly
1,55,Male,Blouse,Clothing,53,Kentucky,L,Gray,Winter,3.1,Yes,Credit Card,Express,Yes,Yes,14,Venmo,Fortnightly
2,19,Male,Sweater,Clothing,64,Maine,L,Maroon,Winter,3.1,Yes,Bank Transfer,Express,Yes,Yes,2,Cash,Fortnightly
</dataframe>

<conversation>
User: Check if there is a correlation between pay zones and the reason why people left.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-16:22:20:52,099 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:20:52,100 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 3000 rows and 26 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nEmpID,FirstName,LastName,StartDate,ExitDate,Title,Supervisor,ADEmail,BusinessUnit,EmployeeStatus,EmployeeType,PayZone,EmployeeClassificationType,TerminationType,TerminationDescription,DepartmentType,Division,DOB,State,JobFunctionDescription,GenderCode,LocationCode,RaceDesc,MaritalDesc,Performance Score,Current Employee Rating\\n3429,Edward,Buck,10-Dec-18,,Area Sales Manager,Crystal Walker,eba--veoo23@hotmail.com,PL,Active,Full-Time,Zone B,Part-Time,Unk,,Sales,General - Sga,06-10-1991,MA,Assistant,Male,2330,Hispanic,Widowed,Fully Meets,4\\n3427,Uriah,Bridges,20-Sep-19,,Production Technician I,Peter Oneill,yca-4w2x@gmail.com,CCDR,Active,Contract,Zone C,Temporary,Unk,,Production       ,Finance & Accounting,07-10-1969,MA,Accounting,Female,34904,White,Widowed,Fully Meets,4\\n3431,Jasmine,Onque,29-Jun-19,,Area Sales Manager,Jason Kim,h9mjj8@protonmail.com,TNS,Active,Contract,Zone A,Temporary,Unk,,Sales,General - Con,29-08-1969,FL,Laborer,Female,33174,Other,Married,Fully Meets,3\\n3428,Paula,Small,11-Feb-23,,Production Technician I,Renee Mccormick,o56dza15z@outlook.com,EW,Active,Contract,Zone A,Part-Time,Unk,,Production       ,Aerial,30-08-1965,MA,Labor,Male,6593,Hispanic,Widowed,Fully Meets,3\\n3430,Michael,Riordan,21-Jun-21,,Area Sales Manager,Rebekah Wright,9-d_aloko92@gmail.com,CCDR,Active,Contract,Zone A,Full-Time,Unk,,Sales,Finance & Accounting,04-04-1998,ND,Clerk,Male,58782,Other,Single,Fully Meets,2\\n</dataframe>\\n\\n<dataframe>\\nDataframe dfs[1], with 3900 rows and 19 columns.\\nThis is the metadata of the dataframe dfs[1]:\\nCustomer ID,Age,Gender,Item Purchased,Category,Purchase Amount (USD),Location,Size,Color,Season,Review Rating,Subscription Status,Payment Method,Shipping Type,Discount Applied,Promo Code Used,Previous Purchases,Preferred Payment Method,Frequency of Purchases\\n5,45,Male,Blouse,Clothing,49,Oregon,M,Turquoise,Spring,2.7,Yes,Cash,Free Shipping,Yes,Yes,31,PayPal,Annually\\n4,21,Male,Sandals,Footwear,90,Rhode Island,M,Maroon,Spring,3.5,Yes,PayPal,Next Day Air,Yes,Yes,49,PayPal,Weekly\\n3,50,Male,Jeans,Clothing,73,Massachusetts,S,Maroon,Spring,3.1,Yes,Cash,Free Shipping,Yes,Yes,23,Credit Card,Weekly\\n1,55,Male,Blouse,Clothing,53,Kentucky,L,Gray,Winter,3.1,Yes,Credit Card,Express,Yes,Yes,14,Venmo,Fortnightly\\n2,19,Male,Sweater,Clothing,64,Maine,L,Maroon,Winter,3.1,Yes,Bank Transfer,Express,Yes,Yes,2,Cash,Fortnightly\\n</dataframe>\\n\\n<conversation>\\nUser: Check if there is a correlation between pay zones and the reason why people left.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-16:22:20:52,321 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:21:30,103 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:21:30,108 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=36478 request_id=01468b9cc562fc290b73174956bed619 response_code=200
2023-11-16:22:21:30,139 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import numpy as np
from scipy.stats import chi2_contingency

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """

    # Prepare: Preprocessing and cleaning data if necessary
    df = dfs[0].copy()
    df = df.dropna(subset=['PayZone', 'TerminationType'])

    # Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    contingency_table = pd.crosstab(df['PayZone'], df['TerminationType'])

    # Analyze: Conducting the actual analysis
    chi2, p, dof, expected = chi2_contingency(contingency_table)

    if p < 0.05:
        result = "There is a significant correlation between pay zones and the reason why people left."
    else:
        result = "There is no significant correlation between pay zones and the reason why people left."

    return { "type": "string", "value": result }
```

2023-11-16:22:21:30,147 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0].copy()
    df = df.dropna(subset=['PayZone', 'TerminationType'])
    contingency_table = pd.crosstab(df['PayZone'], df['TerminationType'])
    chi2, p, dof, expected = chi2_contingency(contingency_table)
    if p < 0.05:
        result = 'There is a significant correlation between pay zones and the reason why people left.'
    else:
        result = 'There is no significant correlation between pay zones and the reason why people left.'
    return {'type': 'string', 'value': result}
        ```
2023-11-16:22:21:30,248 INFO     [logger.py:73] Answer: {'type': 'string', 'value': 'There is no significant correlation between pay zones and the reason why people left.'}
2023-11-16:22:21:30,248 INFO     [logger.py:73] Executed in: 38.218178272247314s
2023-11-16:22:21:30,261 INFO     [quality_test.py:48] customer request: Give me some insights about the relation of subscription types, location, genders and devices.
2023-11-16:22:21:30,338 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:21:30,338 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Give me some insights about the relation of subscription types, location, genders and devices. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-16:22:21:31,644 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:21:31,644 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=753 request_id=84169981691cef3c42f804c7ae724a4f response_code=200
2023-11-16:22:21:31,647 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-16:22:21:32,148 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-16:22:21:32,235 WARNING  [sqlite.py:234] Insert of existing embedding ID: 0
2023-11-16:22:21:32,235 WARNING  [sqlite.py:234] Insert of existing embedding ID: 1
2023-11-16:22:21:32,235 WARNING  [sqlite.py:234] Insert of existing embedding ID: 2
2023-11-16:22:21:32,236 WARNING  [sqlite.py:234] Insert of existing embedding ID: 3
2023-11-16:22:21:32,236 WARNING  [sqlite.py:234] Insert of existing embedding ID: 4
2023-11-16:22:21:32,236 WARNING  [sqlite.py:234] Insert of existing embedding ID: 5
2023-11-16:22:21:32,236 WARNING  [sqlite.py:234] Insert of existing embedding ID: 6
2023-11-16:22:21:32,237 WARNING  [sqlite.py:234] Insert of existing embedding ID: 7
2023-11-16:22:21:32,237 WARNING  [sqlite.py:234] Insert of existing embedding ID: 8
2023-11-16:22:21:32,237 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 0
2023-11-16:22:21:32,237 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 1
2023-11-16:22:21:32,237 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 2
2023-11-16:22:21:32,237 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 3
2023-11-16:22:21:32,237 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 4
2023-11-16:22:21:32,237 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 5
2023-11-16:22:21:32,237 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 6
2023-11-16:22:21:32,237 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 7
2023-11-16:22:21:32,237 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 8
2023-11-16:22:21:32,256 WARNING  [sqlite.py:234] Insert of existing embedding ID: 9
2023-11-16:22:21:32,256 WARNING  [sqlite.py:234] Insert of existing embedding ID: 10
2023-11-16:22:21:32,257 WARNING  [sqlite.py:234] Insert of existing embedding ID: 11
2023-11-16:22:21:32,257 WARNING  [sqlite.py:234] Insert of existing embedding ID: 12
2023-11-16:22:21:32,257 WARNING  [sqlite.py:234] Insert of existing embedding ID: 13
2023-11-16:22:21:32,257 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 9
2023-11-16:22:21:32,257 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 10
2023-11-16:22:21:32,257 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 11
2023-11-16:22:21:32,257 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 12
2023-11-16:22:21:32,257 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 13
2023-11-16:22:21:32,303 WARNING  [sqlite.py:234] Insert of existing embedding ID: 14
2023-11-16:22:21:32,303 WARNING  [sqlite.py:234] Insert of existing embedding ID: 15
2023-11-16:22:21:32,303 WARNING  [sqlite.py:234] Insert of existing embedding ID: 16
2023-11-16:22:21:32,303 WARNING  [sqlite.py:234] Insert of existing embedding ID: 17
2023-11-16:22:21:32,304 WARNING  [sqlite.py:234] Insert of existing embedding ID: 18
2023-11-16:22:21:32,304 WARNING  [sqlite.py:234] Insert of existing embedding ID: 19
2023-11-16:22:21:32,304 WARNING  [sqlite.py:234] Insert of existing embedding ID: 20
2023-11-16:22:21:32,304 WARNING  [sqlite.py:234] Insert of existing embedding ID: 21
2023-11-16:22:21:32,305 WARNING  [sqlite.py:234] Insert of existing embedding ID: 22
2023-11-16:22:21:32,305 WARNING  [sqlite.py:234] Insert of existing embedding ID: 23
2023-11-16:22:21:32,305 WARNING  [sqlite.py:234] Insert of existing embedding ID: 24
2023-11-16:22:21:32,305 WARNING  [sqlite.py:234] Insert of existing embedding ID: 25
2023-11-16:22:21:32,306 WARNING  [sqlite.py:234] Insert of existing embedding ID: 26
2023-11-16:22:21:32,306 WARNING  [sqlite.py:234] Insert of existing embedding ID: 27
2023-11-16:22:21:32,306 WARNING  [sqlite.py:234] Insert of existing embedding ID: 28
2023-11-16:22:21:32,306 WARNING  [sqlite.py:234] Insert of existing embedding ID: 29
2023-11-16:22:21:32,307 WARNING  [sqlite.py:234] Insert of existing embedding ID: 30
2023-11-16:22:21:32,307 WARNING  [sqlite.py:234] Insert of existing embedding ID: 31
2023-11-16:22:21:32,307 WARNING  [sqlite.py:234] Insert of existing embedding ID: 32
2023-11-16:22:21:32,307 WARNING  [sqlite.py:234] Insert of existing embedding ID: 33
2023-11-16:22:21:32,307 WARNING  [sqlite.py:234] Insert of existing embedding ID: 34
2023-11-16:22:21:32,308 WARNING  [sqlite.py:234] Insert of existing embedding ID: 35
2023-11-16:22:21:32,308 WARNING  [sqlite.py:234] Insert of existing embedding ID: 36
2023-11-16:22:21:32,308 WARNING  [sqlite.py:234] Insert of existing embedding ID: 37
2023-11-16:22:21:32,308 WARNING  [sqlite.py:234] Insert of existing embedding ID: 38
2023-11-16:22:21:32,309 WARNING  [sqlite.py:234] Insert of existing embedding ID: 39
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 14
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 15
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 16
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 17
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 18
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 19
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 20
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 21
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 22
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 23
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 24
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 25
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 26
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 27
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 28
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 29
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 30
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 31
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 32
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 33
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 34
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 35
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 36
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 37
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 38
2023-11-16:22:21:32,309 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 39
2023-11-16:22:21:32,556 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:21:32,572 WARNING  [sqlite.py:234] Insert of existing embedding ID: 40
2023-11-16:22:21:32,572 WARNING  [sqlite.py:234] Insert of existing embedding ID: 41
2023-11-16:22:21:32,573 WARNING  [sqlite.py:234] Insert of existing embedding ID: 42
2023-11-16:22:21:32,573 WARNING  [sqlite.py:234] Insert of existing embedding ID: 43
2023-11-16:22:21:32,573 WARNING  [sqlite.py:234] Insert of existing embedding ID: 44
2023-11-16:22:21:32,573 WARNING  [sqlite.py:234] Insert of existing embedding ID: 45
2023-11-16:22:21:32,574 WARNING  [sqlite.py:234] Insert of existing embedding ID: 46
2023-11-16:22:21:32,574 WARNING  [sqlite.py:234] Insert of existing embedding ID: 47
2023-11-16:22:21:32,574 WARNING  [sqlite.py:234] Insert of existing embedding ID: 48
2023-11-16:22:21:32,574 WARNING  [sqlite.py:234] Insert of existing embedding ID: 49
2023-11-16:22:21:32,575 WARNING  [sqlite.py:234] Insert of existing embedding ID: 50
2023-11-16:22:21:32,575 WARNING  [sqlite.py:234] Insert of existing embedding ID: 51
2023-11-16:22:21:32,575 WARNING  [sqlite.py:234] Insert of existing embedding ID: 52
2023-11-16:22:21:32,575 WARNING  [sqlite.py:234] Insert of existing embedding ID: 53
2023-11-16:22:21:32,576 WARNING  [sqlite.py:234] Insert of existing embedding ID: 54
2023-11-16:22:21:32,576 WARNING  [sqlite.py:234] Insert of existing embedding ID: 55
2023-11-16:22:21:32,576 WARNING  [sqlite.py:234] Insert of existing embedding ID: 56
2023-11-16:22:21:32,576 WARNING  [sqlite.py:234] Insert of existing embedding ID: 57
2023-11-16:22:21:32,576 WARNING  [sqlite.py:234] Insert of existing embedding ID: 58
2023-11-16:22:21:32,577 WARNING  [sqlite.py:234] Insert of existing embedding ID: 59
2023-11-16:22:21:32,577 WARNING  [sqlite.py:234] Insert of existing embedding ID: 60
2023-11-16:22:21:32,577 WARNING  [sqlite.py:234] Insert of existing embedding ID: 61
2023-11-16:22:21:32,577 WARNING  [sqlite.py:234] Insert of existing embedding ID: 62
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 40
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 41
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 42
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 43
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 44
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 45
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 46
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 47
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 48
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 49
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 50
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 51
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 52
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 53
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 54
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 55
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 56
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 57
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 58
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 59
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 60
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 61
2023-11-16:22:21:32,578 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 62
2023-11-16:22:21:32,610 WARNING  [sqlite.py:234] Insert of existing embedding ID: 63
2023-11-16:22:21:32,611 WARNING  [sqlite.py:234] Insert of existing embedding ID: 64
2023-11-16:22:21:32,611 WARNING  [sqlite.py:234] Insert of existing embedding ID: 65
2023-11-16:22:21:32,611 WARNING  [sqlite.py:234] Insert of existing embedding ID: 66
2023-11-16:22:21:32,611 WARNING  [sqlite.py:234] Insert of existing embedding ID: 67
2023-11-16:22:21:32,612 WARNING  [sqlite.py:234] Insert of existing embedding ID: 68
2023-11-16:22:21:32,612 WARNING  [sqlite.py:234] Insert of existing embedding ID: 69
2023-11-16:22:21:32,612 WARNING  [sqlite.py:234] Insert of existing embedding ID: 70
2023-11-16:22:21:32,612 WARNING  [sqlite.py:234] Insert of existing embedding ID: 71
2023-11-16:22:21:32,613 WARNING  [sqlite.py:234] Insert of existing embedding ID: 72
2023-11-16:22:21:32,613 WARNING  [sqlite.py:234] Insert of existing embedding ID: 73
2023-11-16:22:21:32,613 WARNING  [sqlite.py:234] Insert of existing embedding ID: 74
2023-11-16:22:21:32,613 WARNING  [sqlite.py:234] Insert of existing embedding ID: 75
2023-11-16:22:21:32,614 WARNING  [sqlite.py:234] Insert of existing embedding ID: 76
2023-11-16:22:21:32,614 WARNING  [sqlite.py:234] Insert of existing embedding ID: 77
2023-11-16:22:21:32,614 WARNING  [sqlite.py:234] Insert of existing embedding ID: 78
2023-11-16:22:21:32,614 WARNING  [sqlite.py:234] Insert of existing embedding ID: 79
2023-11-16:22:21:32,615 WARNING  [sqlite.py:234] Insert of existing embedding ID: 80
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 63
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 64
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 65
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 66
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 67
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 68
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 69
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 70
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 71
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 72
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 73
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 74
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 75
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 76
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 77
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 78
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 79
2023-11-16:22:21:32,615 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 80
2023-11-16:22:21:32,637 WARNING  [sqlite.py:234] Insert of existing embedding ID: 81
2023-11-16:22:21:32,637 WARNING  [sqlite.py:234] Insert of existing embedding ID: 82
2023-11-16:22:21:32,637 WARNING  [sqlite.py:234] Insert of existing embedding ID: 83
2023-11-16:22:21:32,638 WARNING  [sqlite.py:234] Insert of existing embedding ID: 84
2023-11-16:22:21:32,638 WARNING  [sqlite.py:234] Insert of existing embedding ID: 85
2023-11-16:22:21:32,638 WARNING  [sqlite.py:234] Insert of existing embedding ID: 86
2023-11-16:22:21:32,638 WARNING  [sqlite.py:234] Insert of existing embedding ID: 87
2023-11-16:22:21:32,639 WARNING  [sqlite.py:234] Insert of existing embedding ID: 88
2023-11-16:22:21:32,639 WARNING  [sqlite.py:234] Insert of existing embedding ID: 89
2023-11-16:22:21:32,639 WARNING  [sqlite.py:234] Insert of existing embedding ID: 90
2023-11-16:22:21:32,639 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 81
2023-11-16:22:21:32,639 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 82
2023-11-16:22:21:32,639 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 83
2023-11-16:22:21:32,639 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 84
2023-11-16:22:21:32,639 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 85
2023-11-16:22:21:32,639 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 86
2023-11-16:22:21:32,639 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 87
2023-11-16:22:21:32,639 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 88
2023-11-16:22:21:32,639 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 89
2023-11-16:22:21:32,639 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 90
2023-11-16:22:21:32,674 WARNING  [sqlite.py:234] Insert of existing embedding ID: 91
2023-11-16:22:21:32,674 WARNING  [sqlite.py:234] Insert of existing embedding ID: 92
2023-11-16:22:21:32,674 WARNING  [sqlite.py:234] Insert of existing embedding ID: 93
2023-11-16:22:21:32,675 WARNING  [sqlite.py:234] Insert of existing embedding ID: 94
2023-11-16:22:21:32,675 WARNING  [sqlite.py:234] Insert of existing embedding ID: 95
2023-11-16:22:21:32,675 WARNING  [sqlite.py:234] Insert of existing embedding ID: 96
2023-11-16:22:21:32,675 WARNING  [sqlite.py:234] Insert of existing embedding ID: 97
2023-11-16:22:21:32,676 WARNING  [sqlite.py:234] Insert of existing embedding ID: 98
2023-11-16:22:21:32,676 WARNING  [sqlite.py:234] Insert of existing embedding ID: 99
2023-11-16:22:21:32,676 WARNING  [sqlite.py:234] Insert of existing embedding ID: 100
2023-11-16:22:21:32,676 WARNING  [sqlite.py:234] Insert of existing embedding ID: 101
2023-11-16:22:21:32,677 WARNING  [sqlite.py:234] Insert of existing embedding ID: 102
2023-11-16:22:21:32,677 WARNING  [sqlite.py:234] Insert of existing embedding ID: 103
2023-11-16:22:21:32,677 WARNING  [sqlite.py:234] Insert of existing embedding ID: 104
2023-11-16:22:21:32,677 WARNING  [sqlite.py:234] Insert of existing embedding ID: 105
2023-11-16:22:21:32,678 WARNING  [sqlite.py:234] Insert of existing embedding ID: 106
2023-11-16:22:21:32,678 WARNING  [sqlite.py:234] Insert of existing embedding ID: 107
2023-11-16:22:21:32,678 WARNING  [sqlite.py:234] Insert of existing embedding ID: 108
2023-11-16:22:21:32,678 WARNING  [sqlite.py:234] Insert of existing embedding ID: 109
2023-11-16:22:21:32,678 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 91
2023-11-16:22:21:32,678 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 92
2023-11-16:22:21:32,678 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 93
2023-11-16:22:21:32,678 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 94
2023-11-16:22:21:32,678 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 95
2023-11-16:22:21:32,678 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 96
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 97
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 98
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 99
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 100
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 101
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 102
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 103
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 104
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 105
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 106
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 107
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 108
2023-11-16:22:21:32,679 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 109
2023-11-16:22:21:32,706 WARNING  [sqlite.py:234] Insert of existing embedding ID: 110
2023-11-16:22:21:32,707 WARNING  [sqlite.py:234] Insert of existing embedding ID: 111
2023-11-16:22:21:32,707 WARNING  [sqlite.py:234] Insert of existing embedding ID: 112
2023-11-16:22:21:32,707 WARNING  [sqlite.py:234] Insert of existing embedding ID: 113
2023-11-16:22:21:32,707 WARNING  [sqlite.py:234] Insert of existing embedding ID: 114
2023-11-16:22:21:32,708 WARNING  [sqlite.py:234] Insert of existing embedding ID: 115
2023-11-16:22:21:32,708 WARNING  [sqlite.py:234] Insert of existing embedding ID: 116
2023-11-16:22:21:32,708 WARNING  [sqlite.py:234] Insert of existing embedding ID: 117
2023-11-16:22:21:32,708 WARNING  [sqlite.py:234] Insert of existing embedding ID: 118
2023-11-16:22:21:32,709 WARNING  [sqlite.py:234] Insert of existing embedding ID: 119
2023-11-16:22:21:32,709 WARNING  [sqlite.py:234] Insert of existing embedding ID: 120
2023-11-16:22:21:32,709 WARNING  [sqlite.py:234] Insert of existing embedding ID: 121
2023-11-16:22:21:32,709 WARNING  [sqlite.py:234] Insert of existing embedding ID: 122
2023-11-16:22:21:32,710 WARNING  [sqlite.py:234] Insert of existing embedding ID: 123
2023-11-16:22:21:32,710 WARNING  [sqlite.py:234] Insert of existing embedding ID: 124
2023-11-16:22:21:32,710 WARNING  [sqlite.py:234] Insert of existing embedding ID: 125
2023-11-16:22:21:32,710 WARNING  [sqlite.py:234] Insert of existing embedding ID: 126
2023-11-16:22:21:32,711 WARNING  [sqlite.py:234] Insert of existing embedding ID: 127
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 110
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 111
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 112
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 113
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 114
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 115
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 116
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 117
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 118
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 119
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 120
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 121
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 122
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 123
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 124
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 125
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 126
2023-11-16:22:21:32,711 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 127
2023-11-16:22:21:32,738 WARNING  [sqlite.py:234] Insert of existing embedding ID: 128
2023-11-16:22:21:32,738 WARNING  [sqlite.py:234] Insert of existing embedding ID: 129
2023-11-16:22:21:32,739 WARNING  [sqlite.py:234] Insert of existing embedding ID: 130
2023-11-16:22:21:32,739 WARNING  [sqlite.py:234] Insert of existing embedding ID: 131
2023-11-16:22:21:32,739 WARNING  [sqlite.py:234] Insert of existing embedding ID: 132
2023-11-16:22:21:32,739 WARNING  [sqlite.py:234] Insert of existing embedding ID: 133
2023-11-16:22:21:32,740 WARNING  [sqlite.py:234] Insert of existing embedding ID: 134
2023-11-16:22:21:32,740 WARNING  [sqlite.py:234] Insert of existing embedding ID: 135
2023-11-16:22:21:32,740 WARNING  [sqlite.py:234] Insert of existing embedding ID: 136
2023-11-16:22:21:32,740 WARNING  [sqlite.py:234] Insert of existing embedding ID: 137
2023-11-16:22:21:32,741 WARNING  [sqlite.py:234] Insert of existing embedding ID: 138
2023-11-16:22:21:32,741 WARNING  [sqlite.py:234] Insert of existing embedding ID: 139
2023-11-16:22:21:32,741 WARNING  [sqlite.py:234] Insert of existing embedding ID: 140
2023-11-16:22:21:32,741 WARNING  [sqlite.py:234] Insert of existing embedding ID: 141
2023-11-16:22:21:32,742 WARNING  [sqlite.py:234] Insert of existing embedding ID: 142
2023-11-16:22:21:32,742 WARNING  [sqlite.py:234] Insert of existing embedding ID: 143
2023-11-16:22:21:32,742 WARNING  [sqlite.py:234] Insert of existing embedding ID: 144
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 128
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 129
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 130
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 131
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 132
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 133
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 134
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 135
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 136
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 137
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 138
2023-11-16:22:21:32,742 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 139
2023-11-16:22:21:32,743 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 140
2023-11-16:22:21:32,743 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 141
2023-11-16:22:21:32,743 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 142
2023-11-16:22:21:32,743 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 143
2023-11-16:22:21:32,743 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 144
2023-11-16:22:21:32,761 WARNING  [sqlite.py:234] Insert of existing embedding ID: 145
2023-11-16:22:21:32,761 WARNING  [sqlite.py:234] Insert of existing embedding ID: 146
2023-11-16:22:21:32,761 WARNING  [sqlite.py:234] Insert of existing embedding ID: 147
2023-11-16:22:21:32,762 WARNING  [sqlite.py:234] Insert of existing embedding ID: 148
2023-11-16:22:21:32,762 WARNING  [sqlite.py:234] Insert of existing embedding ID: 149
2023-11-16:22:21:32,762 WARNING  [sqlite.py:234] Insert of existing embedding ID: 150
2023-11-16:22:21:32,762 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 145
2023-11-16:22:21:32,762 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 146
2023-11-16:22:21:32,762 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 147
2023-11-16:22:21:32,762 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 148
2023-11-16:22:21:32,762 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 149
2023-11-16:22:21:32,762 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 150
2023-11-16:22:21:32,806 WARNING  [sqlite.py:234] Insert of existing embedding ID: 151
2023-11-16:22:21:32,807 WARNING  [sqlite.py:234] Insert of existing embedding ID: 152
2023-11-16:22:21:32,808 WARNING  [sqlite.py:234] Insert of existing embedding ID: 153
2023-11-16:22:21:32,809 WARNING  [sqlite.py:234] Insert of existing embedding ID: 154
2023-11-16:22:21:32,809 WARNING  [sqlite.py:234] Insert of existing embedding ID: 155
2023-11-16:22:21:32,810 WARNING  [sqlite.py:234] Insert of existing embedding ID: 156
2023-11-16:22:21:32,810 WARNING  [sqlite.py:234] Insert of existing embedding ID: 157
2023-11-16:22:21:32,811 WARNING  [sqlite.py:234] Insert of existing embedding ID: 158
2023-11-16:22:21:32,811 WARNING  [sqlite.py:234] Insert of existing embedding ID: 159
2023-11-16:22:21:32,811 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 151
2023-11-16:22:21:32,811 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 152
2023-11-16:22:21:32,811 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 153
2023-11-16:22:21:32,812 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 154
2023-11-16:22:21:32,812 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 155
2023-11-16:22:21:32,812 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 156
2023-11-16:22:21:32,812 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 157
2023-11-16:22:21:32,812 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 158
2023-11-16:22:21:32,812 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 159
2023-11-16:22:21:32,871 WARNING  [sqlite.py:234] Insert of existing embedding ID: 160
2023-11-16:22:21:32,871 WARNING  [sqlite.py:234] Insert of existing embedding ID: 161
2023-11-16:22:21:32,872 WARNING  [sqlite.py:234] Insert of existing embedding ID: 162
2023-11-16:22:21:32,872 WARNING  [sqlite.py:234] Insert of existing embedding ID: 163
2023-11-16:22:21:32,872 WARNING  [sqlite.py:234] Insert of existing embedding ID: 164
2023-11-16:22:21:32,873 WARNING  [sqlite.py:234] Insert of existing embedding ID: 165
2023-11-16:22:21:32,873 WARNING  [sqlite.py:234] Insert of existing embedding ID: 166
2023-11-16:22:21:32,873 WARNING  [sqlite.py:234] Insert of existing embedding ID: 167
2023-11-16:22:21:32,873 WARNING  [sqlite.py:234] Insert of existing embedding ID: 168
2023-11-16:22:21:32,874 WARNING  [sqlite.py:234] Insert of existing embedding ID: 169
2023-11-16:22:21:32,874 WARNING  [sqlite.py:234] Insert of existing embedding ID: 170
2023-11-16:22:21:32,874 WARNING  [sqlite.py:234] Insert of existing embedding ID: 171
2023-11-16:22:21:32,874 WARNING  [sqlite.py:234] Insert of existing embedding ID: 172
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 160
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 161
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 162
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 163
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 164
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 165
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 166
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 167
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 168
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 169
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 170
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 171
2023-11-16:22:21:32,875 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 172
2023-11-16:22:21:32,999 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:21:32,999 INFO     [vector_search.py:103] Element: (1700092381859424, 'Subscription Type') - Score: 0.8676518797874451
2023-11-16:22:21:32,999 INFO     [vector_search.py:103] Element: (1700092385555876, 'Subscription Status') - Score: 0.6121975183486938
2023-11-16:22:21:33,000 INFO     [vector_search.py:103] Element: (1700092377314948, 'VisitorType') - Score: 0.34632083773612976
2023-11-16:22:21:33,027 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:21:33,027 INFO     [vector_search.py:103] Element: (1700092404695104, 'Location') - Score: 1.0
2023-11-16:22:21:33,027 INFO     [vector_search.py:103] Element: (1700092385555876, 'Location') - Score: 1.0
2023-11-16:22:21:33,027 INFO     [vector_search.py:103] Element: (1700092390869348, 'City') - Score: 0.6488566398620605
2023-11-16:22:21:33,027 INFO     [vector_search.py:103] Element: (1700092408519074, 'City') - Score: 0.6488566398620605
2023-11-16:22:21:33,027 INFO     [vector_search.py:103] Element: (1700092381859424, 'Country') - Score: 0.6393227577209473
2023-11-16:22:21:33,042 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:21:33,042 INFO     [vector_search.py:103] Element: (1700092401406344, 'gender') - Score: 1.0000001192092896
2023-11-16:22:21:33,042 INFO     [vector_search.py:103] Element: (1700092385555876, 'Gender') - Score: 1.0000001192092896
2023-11-16:22:21:33,042 INFO     [vector_search.py:103] Element: (1700092381859424, 'Gender') - Score: 1.0000001192092896
2023-11-16:22:21:33,042 INFO     [vector_search.py:103] Element: (1700092390869348, 'Gender') - Score: 1.0000001192092896
2023-11-16:22:21:33,042 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 1.0
2023-11-16:22:21:33,055 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:21:33,055 INFO     [vector_search.py:103] Element: (1700092381859424, 'Device') - Score: 1.0
2023-11-16:22:21:33,055 INFO     [vector_search.py:103] Element: (1700092408519074, 'Product') - Score: 0.611054003238678
2023-11-16:22:21:33,055 INFO     [vector_search.py:103] Element: (1700092353790055, 'Product ID') - Score: 0.48276394605636597
2023-11-16:22:21:33,055 INFO     [vector_search.py:103] Element: (1700092353790055, 'Product URL') - Score: 0.45337656140327454
2023-11-16:22:21:33,055 INFO     [vector_search.py:103] Element: (1700092385555876, 'Item Purchased') - Score: 0.44601237773895264
2023-11-16:22:21:33,055 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-16:22:21:33,070 INFO     [prebuilt.py:537] 
   User ID Subscription Type  Monthly Revenue Join Date Last Payment Date  \
0        1             Basic               10  15-01-22          10-06-23   
1        2           Premium               15  05-09-21          22-06-23   
2        3          Standard               12  28-02-23          27-06-23   

          Country  Age  Gender      Device Plan Duration  
0   United States   28    Male  Smartphone       1 Month  
1          Canada   35  Female      Tablet       1 Month  
2  United Kingdom   42    Male    Smart TV       1 Month  
2023-11-16:22:21:33,084 INFO     [prebuilt.py:537] 
   Customer ID  Age Gender Item Purchased  Category  Purchase Amount (USD)  \
0            1   55   Male         Blouse  Clothing                     53   
1            2   19   Male        Sweater  Clothing                     64   
2            3   50   Male          Jeans  Clothing                     73   

        Location Size   Color  Season  Review Rating Subscription Status  \
0       Kentucky    L    Gray  Winter            3.1                 Yes   
1          Maine    L  Maroon  Winter            3.1                 Yes   
2  Massachusetts    S  Maroon  Spring            3.1                 Yes   

  Payment Method  Shipping Type Discount Applied Promo Code Used  \
0    Credit Card        Express              Yes             Yes   
1  Bank Transfer        Express              Yes             Yes   
2           Cash  Free Shipping              Yes             Yes   

   Previous Purchases Preferred Payment Method Frequency of Purchases  
0                  14                    Venmo            Fortnightly  
1                   2                     Cash            Fortnightly  
2                  23              Credit Card                 Weekly  
2023-11-16:22:21:33,129 INFO     [logger.py:73] Question: Give me some insights about the relation of subscription types, location, genders and devices.
2023-11-16:22:21:33,130 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-16:22:21:33,130 INFO     [logger.py:73] Prompt ID: 6d3de82d-87d1-4a31-8250-a73bf1595b15
2023-11-16:22:21:33,151 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 2500 rows and 10 columns.
This is the metadata of the dataframe dfs[0]:
User ID,Subscription Type,Monthly Revenue,Join Date,Last Payment Date,Country,Age,Gender,Device,Plan Duration
3,Standard,12,28-02-23,27-06-23,United Kingdom,42,Male,Smart TV,1 Month
1,Basic,10,15-01-22,10-06-23,United States,28,Male,Smartphone,1 Month
4,Standard,12,10-07-22,26-06-23,Australia,51,Female,Laptop,1 Month
2,Premium,15,05-09-21,22-06-23,Canada,35,Female,Tablet,1 Month
5,Basic,10,01-05-23,28-06-23,Germany,33,Male,Smartphone,1 Month
</dataframe>

<dataframe>
Dataframe dfs[1], with 3900 rows and 19 columns.
This is the metadata of the dataframe dfs[1]:
Customer ID,Age,Gender,Item Purchased,Category,Purchase Amount (USD),Location,Size,Color,Season,Review Rating,Subscription Status,Payment Method,Shipping Type,Discount Applied,Promo Code Used,Previous Purchases,Preferred Payment Method,Frequency of Purchases
5,45,Male,Blouse,Clothing,49,Oregon,M,Turquoise,Spring,2.7,Yes,Cash,Free Shipping,Yes,Yes,31,PayPal,Annually
3,50,Male,Jeans,Clothing,73,Massachusetts,S,Maroon,Spring,3.1,Yes,Cash,Free Shipping,Yes,Yes,23,Credit Card,Weekly
4,21,Male,Sandals,Footwear,90,Rhode Island,M,Maroon,Spring,3.5,Yes,PayPal,Next Day Air,Yes,Yes,49,PayPal,Weekly
2,19,Male,Sweater,Clothing,64,Maine,L,Maroon,Winter,3.1,Yes,Bank Transfer,Express,Yes,Yes,2,Cash,Fortnightly
1,55,Male,Blouse,Clothing,53,Kentucky,L,Gray,Winter,3.1,Yes,Credit Card,Express,Yes,Yes,14,Venmo,Fortnightly
</dataframe>

<conversation>
User: Give me some insights about the relation of subscription types, location, genders and devices.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-16:22:21:33,152 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:21:33,152 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 2500 rows and 10 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nUser ID,Subscription Type,Monthly Revenue,Join Date,Last Payment Date,Country,Age,Gender,Device,Plan Duration\\n3,Standard,12,28-02-23,27-06-23,United Kingdom,42,Male,Smart TV,1 Month\\n1,Basic,10,15-01-22,10-06-23,United States,28,Male,Smartphone,1 Month\\n4,Standard,12,10-07-22,26-06-23,Australia,51,Female,Laptop,1 Month\\n2,Premium,15,05-09-21,22-06-23,Canada,35,Female,Tablet,1 Month\\n5,Basic,10,01-05-23,28-06-23,Germany,33,Male,Smartphone,1 Month\\n</dataframe>\\n\\n<dataframe>\\nDataframe dfs[1], with 3900 rows and 19 columns.\\nThis is the metadata of the dataframe dfs[1]:\\nCustomer ID,Age,Gender,Item Purchased,Category,Purchase Amount (USD),Location,Size,Color,Season,Review Rating,Subscription Status,Payment Method,Shipping Type,Discount Applied,Promo Code Used,Previous Purchases,Preferred Payment Method,Frequency of Purchases\\n5,45,Male,Blouse,Clothing,49,Oregon,M,Turquoise,Spring,2.7,Yes,Cash,Free Shipping,Yes,Yes,31,PayPal,Annually\\n3,50,Male,Jeans,Clothing,73,Massachusetts,S,Maroon,Spring,3.1,Yes,Cash,Free Shipping,Yes,Yes,23,Credit Card,Weekly\\n4,21,Male,Sandals,Footwear,90,Rhode Island,M,Maroon,Spring,3.5,Yes,PayPal,Next Day Air,Yes,Yes,49,PayPal,Weekly\\n2,19,Male,Sweater,Clothing,64,Maine,L,Maroon,Winter,3.1,Yes,Bank Transfer,Express,Yes,Yes,2,Cash,Fortnightly\\n1,55,Male,Blouse,Clothing,53,Kentucky,L,Gray,Winter,3.1,Yes,Credit Card,Express,Yes,Yes,14,Venmo,Fortnightly\\n</dataframe>\\n\\n<conversation>\\nUser: Give me some insights about the relation of subscription types, location, genders and devices.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-16:22:21:33,181 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:21:57,549 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:21:57,553 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=23964 request_id=a408b7dc7ddb3b5f25ed107f7db23d68 response_code=200
2023-11-16:22:21:57,565 INFO     [logger.py:73] Code generated:
```
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """

    # Preprocessing and cleaning data if necessary
    df1 = dfs[0].copy()
    df2 = dfs[1].copy()

    # Renaming columns for consistency
    df1.rename(columns={'User ID': 'Customer ID'}, inplace=True)

    # Merging the two dataframes on 'Customer ID'
    merged_df = pd.merge(df1, df2, on='Customer ID')

    # Grouping by 'Subscription Type', 'Location', 'Gender' and 'Device'
    grouped_df = merged_df.groupby(['Subscription Type', 'Location', 'Gender', 'Device']).size().reset_index(name='Count')

    # Returning the result as a dataframe
    return { "type": "dataframe", "value": grouped_df }
```

2023-11-16:22:21:57,570 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df1 = dfs[0].copy()
    df2 = dfs[1].copy()
    df1.rename(columns={'User ID': 'Customer ID'}, inplace=True)
    merged_df = pd.merge(df1, df2, on='Customer ID')
    grouped_df = merged_df.groupby(['Subscription Type', 'Location', 'Gender', 'Device']).size().reset_index(name='Count')
    return {'type': 'dataframe', 'value': grouped_df}
        ```
2023-11-16:22:21:57,590 WARNING  [logger.py:75] Error of executing code
2023-11-16:22:21:57,603 WARNING  [logger.py:75] Failed to execute code with a correction framework [retry number: 1]
2023-11-16:22:21:57,604 ERROR    [logger.py:77] Failed with error: Traceback (most recent call last):
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/smart_datalake/__init__.py", line 394, in chat
    result = self._code_manager.execute_code(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py", line 276, in execute_code
    return analyze_data(self._get_originals(dfs))
  File "<string>", line 23, in analyze_data
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/frame.py", line 8402, in groupby
    return DataFrameGroupBy(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 965, in __init__
    grouper, exclusions, obj = get_grouper(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/grouper.py", line 888, in get_grouper
    raise KeyError(gpr)
KeyError: 'Gender'
. Retrying
2023-11-16:22:21:57,606 INFO     [logger.py:73] Using prompt: 
You are provided with the following pandas DataFrames with the following metadata:

<dataframe>
Dataframe dfs[0], with 2500 rows and 10 columns.
This is the metadata of the dataframe dfs[0]:
User ID,Subscription Type,Monthly Revenue,Join Date,Last Payment Date,Country,Age,Gender,Device,Plan Duration
3,Standard,12,28-02-23,27-06-23,United Kingdom,42,Male,Smart TV,1 Month
1,Basic,10,15-01-22,10-06-23,United States,28,Male,Smartphone,1 Month
4,Standard,12,10-07-22,26-06-23,Australia,51,Female,Laptop,1 Month
2,Premium,15,05-09-21,22-06-23,Canada,35,Female,Tablet,1 Month
5,Basic,10,01-05-23,28-06-23,Germany,33,Male,Smartphone,1 Month
</dataframe>

<dataframe>
Dataframe dfs[1], with 3900 rows and 19 columns.
This is the metadata of the dataframe dfs[1]:
Customer ID,Age,Gender,Item Purchased,Category,Purchase Amount (USD),Location,Size,Color,Season,Review Rating,Subscription Status,Payment Method,Shipping Type,Discount Applied,Promo Code Used,Previous Purchases,Preferred Payment Method,Frequency of Purchases
5,45,Male,Blouse,Clothing,49,Oregon,M,Turquoise,Spring,2.7,Yes,Cash,Free Shipping,Yes,Yes,31,PayPal,Annually
3,50,Male,Jeans,Clothing,73,Massachusetts,S,Maroon,Spring,3.1,Yes,Cash,Free Shipping,Yes,Yes,23,Credit Card,Weekly
4,21,Male,Sandals,Footwear,90,Rhode Island,M,Maroon,Spring,3.5,Yes,PayPal,Next Day Air,Yes,Yes,49,PayPal,Weekly
2,19,Male,Sweater,Clothing,64,Maine,L,Maroon,Winter,3.1,Yes,Bank Transfer,Express,Yes,Yes,2,Cash,Fortnightly
1,55,Male,Blouse,Clothing,53,Kentucky,L,Gray,Winter,3.1,Yes,Credit Card,Express,Yes,Yes,14,Venmo,Fortnightly
</dataframe>

The user asked the following question:
User: Give me some insights about the relation of subscription types, location, genders and devices.

You generated this python code:
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """

    # Preprocessing and cleaning data if necessary
    df1 = dfs[0].copy()
    df2 = dfs[1].copy()

    # Renaming columns for consistency
    df1.rename(columns={'User ID': 'Customer ID'}, inplace=True)

    # Merging the two dataframes on 'Customer ID'
    merged_df = pd.merge(df1, df2, on='Customer ID')

    # Grouping by 'Subscription Type', 'Location', 'Gender' and 'Device'
    grouped_df = merged_df.groupby(['Subscription Type', 'Location', 'Gender', 'Device']).size().reset_index(name='Count')

    # Returning the result as a dataframe
    return { "type": "dataframe", "value": grouped_df }

It fails with the following error:
Traceback (most recent call last):
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/smart_datalake/__init__.py", line 394, in chat
    result = self._code_manager.execute_code(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py", line 276, in execute_code
    return analyze_data(self._get_originals(dfs))
  File "<string>", line 23, in analyze_data
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/frame.py", line 8402, in groupby
    return DataFrameGroupBy(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 965, in __init__
    grouper, exclusions, obj = get_grouper(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/grouper.py", line 888, in get_grouper
    raise KeyError(gpr)
KeyError: 'Gender'


Correct the python code and return a new python code that fixes the above mentioned error. Do not generate the same code again.

2023-11-16:22:21:57,607 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:21:57,607 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "\\nYou are provided with the following pandas DataFrames with the following metadata:\\n\\n<dataframe>\\nDataframe dfs[0], with 2500 rows and 10 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nUser ID,Subscription Type,Monthly Revenue,Join Date,Last Payment Date,Country,Age,Gender,Device,Plan Duration\\n3,Standard,12,28-02-23,27-06-23,United Kingdom,42,Male,Smart TV,1 Month\\n1,Basic,10,15-01-22,10-06-23,United States,28,Male,Smartphone,1 Month\\n4,Standard,12,10-07-22,26-06-23,Australia,51,Female,Laptop,1 Month\\n2,Premium,15,05-09-21,22-06-23,Canada,35,Female,Tablet,1 Month\\n5,Basic,10,01-05-23,28-06-23,Germany,33,Male,Smartphone,1 Month\\n</dataframe>\\n\\n<dataframe>\\nDataframe dfs[1], with 3900 rows and 19 columns.\\nThis is the metadata of the dataframe dfs[1]:\\nCustomer ID,Age,Gender,Item Purchased,Category,Purchase Amount (USD),Location,Size,Color,Season,Review Rating,Subscription Status,Payment Method,Shipping Type,Discount Applied,Promo Code Used,Previous Purchases,Preferred Payment Method,Frequency of Purchases\\n5,45,Male,Blouse,Clothing,49,Oregon,M,Turquoise,Spring,2.7,Yes,Cash,Free Shipping,Yes,Yes,31,PayPal,Annually\\n3,50,Male,Jeans,Clothing,73,Massachusetts,S,Maroon,Spring,3.1,Yes,Cash,Free Shipping,Yes,Yes,23,Credit Card,Weekly\\n4,21,Male,Sandals,Footwear,90,Rhode Island,M,Maroon,Spring,3.5,Yes,PayPal,Next Day Air,Yes,Yes,49,PayPal,Weekly\\n2,19,Male,Sweater,Clothing,64,Maine,L,Maroon,Winter,3.1,Yes,Bank Transfer,Express,Yes,Yes,2,Cash,Fortnightly\\n1,55,Male,Blouse,Clothing,53,Kentucky,L,Gray,Winter,3.1,Yes,Credit Card,Express,Yes,Yes,14,Venmo,Fortnightly\\n</dataframe>\\n\\nThe user asked the following question:\\nUser: Give me some insights about the relation of subscription types, location, genders and devices.\\n\\nYou generated this python code:\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n\\n    # Preprocessing and cleaning data if necessary\\n    df1 = dfs[0].copy()\\n    df2 = dfs[1].copy()\\n\\n    # Renaming columns for consistency\\n    df1.rename(columns={\'User ID\': \'Customer ID\'}, inplace=True)\\n\\n    # Merging the two dataframes on \'Customer ID\'\\n    merged_df = pd.merge(df1, df2, on=\'Customer ID\')\\n\\n    # Grouping by \'Subscription Type\', \'Location\', \'Gender\' and \'Device\'\\n    grouped_df = merged_df.groupby([\'Subscription Type\', \'Location\', \'Gender\', \'Device\']).size().reset_index(name=\'Count\')\\n\\n    # Returning the result as a dataframe\\n    return { \\"type\\": \\"dataframe\\", \\"value\\": grouped_df }\\n\\nIt fails with the following error:\\nTraceback (most recent call last):\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/smart_datalake/__init__.py\\", line 394, in chat\\n    result = self._code_manager.execute_code(\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py\\", line 276, in execute_code\\n    return analyze_data(self._get_originals(dfs))\\n  File \\"<string>\\", line 23, in analyze_data\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/frame.py\\", line 8402, in groupby\\n    return DataFrameGroupBy(\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/groupby.py\\", line 965, in __init__\\n    grouper, exclusions, obj = get_grouper(\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/grouper.py\\", line 888, in get_grouper\\n    raise KeyError(gpr)\\nKeyError: \'Gender\'\\n\\n\\nCorrect the python code and return a new python code that fixes the above mentioned error. Do not generate the same code again.\\n"}]}' message='Post details'
2023-11-16:22:21:57,641 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-16:22:21:57,644 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-16:22:22:40,422 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:22:40,427 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=42310 request_id=d79c488d392cfe320c7592add99998d3 response_code=200
2023-11-16:22:22:40,433 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df1 = dfs[0].copy()
    df2 = dfs[1].copy()
    df1.rename(columns={'User ID': 'Customer ID'}, inplace=True)
    merged_df = pd.merge(df1, df2, on='Customer ID')
    grouped_df = merged_df.groupby(['Subscription Type', 'Country', 'Gender', 'Device']).size().reset_index(name='Count')
    return {'type': 'dataframe', 'value': grouped_df}
        ```
2023-11-16:22:22:40,447 WARNING  [logger.py:75] Error of executing code
2023-11-16:22:22:40,462 WARNING  [logger.py:75] Failed to execute code with a correction framework [retry number: 2]
2023-11-16:22:22:40,464 ERROR    [logger.py:77] Failed with error: Traceback (most recent call last):
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/smart_datalake/__init__.py", line 394, in chat
    result = self._code_manager.execute_code(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py", line 276, in execute_code
    return analyze_data(self._get_originals(dfs))
  File "<string>", line 23, in analyze_data
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/frame.py", line 8402, in groupby
    return DataFrameGroupBy(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 965, in __init__
    grouper, exclusions, obj = get_grouper(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/grouper.py", line 888, in get_grouper
    raise KeyError(gpr)
KeyError: 'Gender'
. Retrying
2023-11-16:22:22:40,466 INFO     [logger.py:73] Using prompt: 
You are provided with the following pandas DataFrames with the following metadata:

<dataframe>
Dataframe dfs[0], with 2500 rows and 10 columns.
This is the metadata of the dataframe dfs[0]:
User ID,Subscription Type,Monthly Revenue,Join Date,Last Payment Date,Country,Age,Gender,Device,Plan Duration
3,Standard,12,28-02-23,27-06-23,United Kingdom,42,Male,Smart TV,1 Month
1,Basic,10,15-01-22,10-06-23,United States,28,Male,Smartphone,1 Month
4,Standard,12,10-07-22,26-06-23,Australia,51,Female,Laptop,1 Month
2,Premium,15,05-09-21,22-06-23,Canada,35,Female,Tablet,1 Month
5,Basic,10,01-05-23,28-06-23,Germany,33,Male,Smartphone,1 Month
</dataframe>

<dataframe>
Dataframe dfs[1], with 3900 rows and 19 columns.
This is the metadata of the dataframe dfs[1]:
Customer ID,Age,Gender,Item Purchased,Category,Purchase Amount (USD),Location,Size,Color,Season,Review Rating,Subscription Status,Payment Method,Shipping Type,Discount Applied,Promo Code Used,Previous Purchases,Preferred Payment Method,Frequency of Purchases
5,45,Male,Blouse,Clothing,49,Oregon,M,Turquoise,Spring,2.7,Yes,Cash,Free Shipping,Yes,Yes,31,PayPal,Annually
3,50,Male,Jeans,Clothing,73,Massachusetts,S,Maroon,Spring,3.1,Yes,Cash,Free Shipping,Yes,Yes,23,Credit Card,Weekly
4,21,Male,Sandals,Footwear,90,Rhode Island,M,Maroon,Spring,3.5,Yes,PayPal,Next Day Air,Yes,Yes,49,PayPal,Weekly
2,19,Male,Sweater,Clothing,64,Maine,L,Maroon,Winter,3.1,Yes,Bank Transfer,Express,Yes,Yes,2,Cash,Fortnightly
1,55,Male,Blouse,Clothing,53,Kentucky,L,Gray,Winter,3.1,Yes,Credit Card,Express,Yes,Yes,14,Venmo,Fortnightly
</dataframe>

The user asked the following question:
User: Give me some insights about the relation of subscription types, location, genders and devices.

You generated this python code:
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """

    # Preprocessing and cleaning data if necessary
    df1 = dfs[0].copy()
    df2 = dfs[1].copy()

    # Renaming columns for consistency
    df1.rename(columns={'User ID': 'Customer ID'}, inplace=True)

    # Merging the two dataframes on 'Customer ID'
    merged_df = pd.merge(df1, df2, on='Customer ID')

    # Grouping by 'Subscription Type', 'Location', 'Gender' and 'Device'
    grouped_df = merged_df.groupby(['Subscription Type', 'Location', 'Gender', 'Device']).size().reset_index(name='Count')

    # Returning the result as a dataframe
    return { "type": "dataframe", "value": grouped_df }

It fails with the following error:
Traceback (most recent call last):
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/smart_datalake/__init__.py", line 394, in chat
    result = self._code_manager.execute_code(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py", line 276, in execute_code
    return analyze_data(self._get_originals(dfs))
  File "<string>", line 23, in analyze_data
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/frame.py", line 8402, in groupby
    return DataFrameGroupBy(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 965, in __init__
    grouper, exclusions, obj = get_grouper(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/grouper.py", line 888, in get_grouper
    raise KeyError(gpr)
KeyError: 'Gender'


Correct the python code and return a new python code that fixes the above mentioned error. Do not generate the same code again.

2023-11-16:22:22:40,467 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:22:40,467 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "\\nYou are provided with the following pandas DataFrames with the following metadata:\\n\\n<dataframe>\\nDataframe dfs[0], with 2500 rows and 10 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nUser ID,Subscription Type,Monthly Revenue,Join Date,Last Payment Date,Country,Age,Gender,Device,Plan Duration\\n3,Standard,12,28-02-23,27-06-23,United Kingdom,42,Male,Smart TV,1 Month\\n1,Basic,10,15-01-22,10-06-23,United States,28,Male,Smartphone,1 Month\\n4,Standard,12,10-07-22,26-06-23,Australia,51,Female,Laptop,1 Month\\n2,Premium,15,05-09-21,22-06-23,Canada,35,Female,Tablet,1 Month\\n5,Basic,10,01-05-23,28-06-23,Germany,33,Male,Smartphone,1 Month\\n</dataframe>\\n\\n<dataframe>\\nDataframe dfs[1], with 3900 rows and 19 columns.\\nThis is the metadata of the dataframe dfs[1]:\\nCustomer ID,Age,Gender,Item Purchased,Category,Purchase Amount (USD),Location,Size,Color,Season,Review Rating,Subscription Status,Payment Method,Shipping Type,Discount Applied,Promo Code Used,Previous Purchases,Preferred Payment Method,Frequency of Purchases\\n5,45,Male,Blouse,Clothing,49,Oregon,M,Turquoise,Spring,2.7,Yes,Cash,Free Shipping,Yes,Yes,31,PayPal,Annually\\n3,50,Male,Jeans,Clothing,73,Massachusetts,S,Maroon,Spring,3.1,Yes,Cash,Free Shipping,Yes,Yes,23,Credit Card,Weekly\\n4,21,Male,Sandals,Footwear,90,Rhode Island,M,Maroon,Spring,3.5,Yes,PayPal,Next Day Air,Yes,Yes,49,PayPal,Weekly\\n2,19,Male,Sweater,Clothing,64,Maine,L,Maroon,Winter,3.1,Yes,Bank Transfer,Express,Yes,Yes,2,Cash,Fortnightly\\n1,55,Male,Blouse,Clothing,53,Kentucky,L,Gray,Winter,3.1,Yes,Credit Card,Express,Yes,Yes,14,Venmo,Fortnightly\\n</dataframe>\\n\\nThe user asked the following question:\\nUser: Give me some insights about the relation of subscription types, location, genders and devices.\\n\\nYou generated this python code:\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n\\n    # Preprocessing and cleaning data if necessary\\n    df1 = dfs[0].copy()\\n    df2 = dfs[1].copy()\\n\\n    # Renaming columns for consistency\\n    df1.rename(columns={\'User ID\': \'Customer ID\'}, inplace=True)\\n\\n    # Merging the two dataframes on \'Customer ID\'\\n    merged_df = pd.merge(df1, df2, on=\'Customer ID\')\\n\\n    # Grouping by \'Subscription Type\', \'Location\', \'Gender\' and \'Device\'\\n    grouped_df = merged_df.groupby([\'Subscription Type\', \'Location\', \'Gender\', \'Device\']).size().reset_index(name=\'Count\')\\n\\n    # Returning the result as a dataframe\\n    return { \\"type\\": \\"dataframe\\", \\"value\\": grouped_df }\\n\\nIt fails with the following error:\\nTraceback (most recent call last):\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/smart_datalake/__init__.py\\", line 394, in chat\\n    result = self._code_manager.execute_code(\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py\\", line 276, in execute_code\\n    return analyze_data(self._get_originals(dfs))\\n  File \\"<string>\\", line 23, in analyze_data\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/frame.py\\", line 8402, in groupby\\n    return DataFrameGroupBy(\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/groupby.py\\", line 965, in __init__\\n    grouper, exclusions, obj = get_grouper(\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandas/core/groupby/grouper.py\\", line 888, in get_grouper\\n    raise KeyError(gpr)\\nKeyError: \'Gender\'\\n\\n\\nCorrect the python code and return a new python code that fixes the above mentioned error. Do not generate the same code again.\\n"}]}' message='Post details'
2023-11-16:22:23:27,456 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:23:27,458 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=46692 request_id=165afa431278cfd823d42fdab31a8878 response_code=200
2023-11-16:22:23:27,462 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df1 = dfs[0].copy()
    df2 = dfs[1].copy()
    df1.rename(columns={'User ID': 'Customer ID'}, inplace=True)
    df2.rename(columns={'gender': 'Gender'}, inplace=True)
    merged_df = pd.merge(df1, df2, on='Customer ID')
    grouped_df = merged_df.groupby(['Subscription Type', 'Location', 'Gender', 'Device']).size().reset_index(name='Count')
    return {'type': 'dataframe', 'value': grouped_df}
        ```
2023-11-16:22:23:27,470 WARNING  [logger.py:75] Error of executing code
2023-11-16:22:23:27,482 INFO     [quality_test.py:48] customer request: Are there any patterns in the job roles and the duration of employment?
2023-11-16:22:23:27,546 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:23:27,546 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Are there any patterns in the job roles and the duration of employment? \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-16:22:23:28,789 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:23:28,791 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=644 request_id=749593295fc205e48f3d98e9ee57391b response_code=200
2023-11-16:22:23:28,794 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-16:22:23:29,305 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-16:22:23:29,395 WARNING  [sqlite.py:234] Insert of existing embedding ID: 0
2023-11-16:22:23:29,396 WARNING  [sqlite.py:234] Insert of existing embedding ID: 1
2023-11-16:22:23:29,396 WARNING  [sqlite.py:234] Insert of existing embedding ID: 2
2023-11-16:22:23:29,396 WARNING  [sqlite.py:234] Insert of existing embedding ID: 3
2023-11-16:22:23:29,397 WARNING  [sqlite.py:234] Insert of existing embedding ID: 4
2023-11-16:22:23:29,397 WARNING  [sqlite.py:234] Insert of existing embedding ID: 5
2023-11-16:22:23:29,397 WARNING  [sqlite.py:234] Insert of existing embedding ID: 6
2023-11-16:22:23:29,398 WARNING  [sqlite.py:234] Insert of existing embedding ID: 7
2023-11-16:22:23:29,398 WARNING  [sqlite.py:234] Insert of existing embedding ID: 8
2023-11-16:22:23:29,398 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 0
2023-11-16:22:23:29,398 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 1
2023-11-16:22:23:29,398 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 2
2023-11-16:22:23:29,398 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 3
2023-11-16:22:23:29,398 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 4
2023-11-16:22:23:29,398 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 5
2023-11-16:22:23:29,398 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 6
2023-11-16:22:23:29,398 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 7
2023-11-16:22:23:29,398 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 8
2023-11-16:22:23:29,414 WARNING  [sqlite.py:234] Insert of existing embedding ID: 9
2023-11-16:22:23:29,414 WARNING  [sqlite.py:234] Insert of existing embedding ID: 10
2023-11-16:22:23:29,415 WARNING  [sqlite.py:234] Insert of existing embedding ID: 11
2023-11-16:22:23:29,415 WARNING  [sqlite.py:234] Insert of existing embedding ID: 12
2023-11-16:22:23:29,415 WARNING  [sqlite.py:234] Insert of existing embedding ID: 13
2023-11-16:22:23:29,415 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 9
2023-11-16:22:23:29,415 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 10
2023-11-16:22:23:29,415 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 11
2023-11-16:22:23:29,415 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 12
2023-11-16:22:23:29,415 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 13
2023-11-16:22:23:29,460 WARNING  [sqlite.py:234] Insert of existing embedding ID: 14
2023-11-16:22:23:29,460 WARNING  [sqlite.py:234] Insert of existing embedding ID: 15
2023-11-16:22:23:29,460 WARNING  [sqlite.py:234] Insert of existing embedding ID: 16
2023-11-16:22:23:29,460 WARNING  [sqlite.py:234] Insert of existing embedding ID: 17
2023-11-16:22:23:29,461 WARNING  [sqlite.py:234] Insert of existing embedding ID: 18
2023-11-16:22:23:29,461 WARNING  [sqlite.py:234] Insert of existing embedding ID: 19
2023-11-16:22:23:29,461 WARNING  [sqlite.py:234] Insert of existing embedding ID: 20
2023-11-16:22:23:29,461 WARNING  [sqlite.py:234] Insert of existing embedding ID: 21
2023-11-16:22:23:29,461 WARNING  [sqlite.py:234] Insert of existing embedding ID: 22
2023-11-16:22:23:29,462 WARNING  [sqlite.py:234] Insert of existing embedding ID: 23
2023-11-16:22:23:29,462 WARNING  [sqlite.py:234] Insert of existing embedding ID: 24
2023-11-16:22:23:29,462 WARNING  [sqlite.py:234] Insert of existing embedding ID: 25
2023-11-16:22:23:29,462 WARNING  [sqlite.py:234] Insert of existing embedding ID: 26
2023-11-16:22:23:29,463 WARNING  [sqlite.py:234] Insert of existing embedding ID: 27
2023-11-16:22:23:29,463 WARNING  [sqlite.py:234] Insert of existing embedding ID: 28
2023-11-16:22:23:29,463 WARNING  [sqlite.py:234] Insert of existing embedding ID: 29
2023-11-16:22:23:29,463 WARNING  [sqlite.py:234] Insert of existing embedding ID: 30
2023-11-16:22:23:29,464 WARNING  [sqlite.py:234] Insert of existing embedding ID: 31
2023-11-16:22:23:29,464 WARNING  [sqlite.py:234] Insert of existing embedding ID: 32
2023-11-16:22:23:29,464 WARNING  [sqlite.py:234] Insert of existing embedding ID: 33
2023-11-16:22:23:29,464 WARNING  [sqlite.py:234] Insert of existing embedding ID: 34
2023-11-16:22:23:29,464 WARNING  [sqlite.py:234] Insert of existing embedding ID: 35
2023-11-16:22:23:29,465 WARNING  [sqlite.py:234] Insert of existing embedding ID: 36
2023-11-16:22:23:29,465 WARNING  [sqlite.py:234] Insert of existing embedding ID: 37
2023-11-16:22:23:29,465 WARNING  [sqlite.py:234] Insert of existing embedding ID: 38
2023-11-16:22:23:29,465 WARNING  [sqlite.py:234] Insert of existing embedding ID: 39
2023-11-16:22:23:29,465 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 14
2023-11-16:22:23:29,465 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 15
2023-11-16:22:23:29,465 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 16
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 17
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 18
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 19
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 20
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 21
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 22
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 23
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 24
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 25
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 26
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 27
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 28
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 29
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 30
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 31
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 32
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 33
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 34
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 35
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 36
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 37
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 38
2023-11-16:22:23:29,466 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 39
2023-11-16:22:23:29,730 WARNING  [sqlite.py:234] Insert of existing embedding ID: 40
2023-11-16:22:23:29,730 WARNING  [sqlite.py:234] Insert of existing embedding ID: 41
2023-11-16:22:23:29,730 WARNING  [sqlite.py:234] Insert of existing embedding ID: 42
2023-11-16:22:23:29,731 WARNING  [sqlite.py:234] Insert of existing embedding ID: 43
2023-11-16:22:23:29,731 WARNING  [sqlite.py:234] Insert of existing embedding ID: 44
2023-11-16:22:23:29,731 WARNING  [sqlite.py:234] Insert of existing embedding ID: 45
2023-11-16:22:23:29,731 WARNING  [sqlite.py:234] Insert of existing embedding ID: 46
2023-11-16:22:23:29,732 WARNING  [sqlite.py:234] Insert of existing embedding ID: 47
2023-11-16:22:23:29,732 WARNING  [sqlite.py:234] Insert of existing embedding ID: 48
2023-11-16:22:23:29,732 WARNING  [sqlite.py:234] Insert of existing embedding ID: 49
2023-11-16:22:23:29,732 WARNING  [sqlite.py:234] Insert of existing embedding ID: 50
2023-11-16:22:23:29,733 WARNING  [sqlite.py:234] Insert of existing embedding ID: 51
2023-11-16:22:23:29,733 WARNING  [sqlite.py:234] Insert of existing embedding ID: 52
2023-11-16:22:23:29,733 WARNING  [sqlite.py:234] Insert of existing embedding ID: 53
2023-11-16:22:23:29,733 WARNING  [sqlite.py:234] Insert of existing embedding ID: 54
2023-11-16:22:23:29,734 WARNING  [sqlite.py:234] Insert of existing embedding ID: 55
2023-11-16:22:23:29,734 WARNING  [sqlite.py:234] Insert of existing embedding ID: 56
2023-11-16:22:23:29,734 WARNING  [sqlite.py:234] Insert of existing embedding ID: 57
2023-11-16:22:23:29,734 WARNING  [sqlite.py:234] Insert of existing embedding ID: 58
2023-11-16:22:23:29,735 WARNING  [sqlite.py:234] Insert of existing embedding ID: 59
2023-11-16:22:23:29,735 WARNING  [sqlite.py:234] Insert of existing embedding ID: 60
2023-11-16:22:23:29,735 WARNING  [sqlite.py:234] Insert of existing embedding ID: 61
2023-11-16:22:23:29,735 WARNING  [sqlite.py:234] Insert of existing embedding ID: 62
2023-11-16:22:23:29,735 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 40
2023-11-16:22:23:29,735 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 41
2023-11-16:22:23:29,735 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 42
2023-11-16:22:23:29,735 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 43
2023-11-16:22:23:29,735 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 44
2023-11-16:22:23:29,735 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 45
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 46
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 47
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 48
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 49
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 50
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 51
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 52
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 53
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 54
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 55
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 56
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 57
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 58
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 59
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 60
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 61
2023-11-16:22:23:29,736 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 62
2023-11-16:22:23:29,768 WARNING  [sqlite.py:234] Insert of existing embedding ID: 63
2023-11-16:22:23:29,768 WARNING  [sqlite.py:234] Insert of existing embedding ID: 64
2023-11-16:22:23:29,769 WARNING  [sqlite.py:234] Insert of existing embedding ID: 65
2023-11-16:22:23:29,769 WARNING  [sqlite.py:234] Insert of existing embedding ID: 66
2023-11-16:22:23:29,772 WARNING  [sqlite.py:234] Insert of existing embedding ID: 67
2023-11-16:22:23:29,772 WARNING  [sqlite.py:234] Insert of existing embedding ID: 68
2023-11-16:22:23:29,772 WARNING  [sqlite.py:234] Insert of existing embedding ID: 69
2023-11-16:22:23:29,772 WARNING  [sqlite.py:234] Insert of existing embedding ID: 70
2023-11-16:22:23:29,773 WARNING  [sqlite.py:234] Insert of existing embedding ID: 71
2023-11-16:22:23:29,774 WARNING  [sqlite.py:234] Insert of existing embedding ID: 72
2023-11-16:22:23:29,774 WARNING  [sqlite.py:234] Insert of existing embedding ID: 73
2023-11-16:22:23:29,774 WARNING  [sqlite.py:234] Insert of existing embedding ID: 74
2023-11-16:22:23:29,774 WARNING  [sqlite.py:234] Insert of existing embedding ID: 75
2023-11-16:22:23:29,774 WARNING  [sqlite.py:234] Insert of existing embedding ID: 76
2023-11-16:22:23:29,775 WARNING  [sqlite.py:234] Insert of existing embedding ID: 77
2023-11-16:22:23:29,775 WARNING  [sqlite.py:234] Insert of existing embedding ID: 78
2023-11-16:22:23:29,775 WARNING  [sqlite.py:234] Insert of existing embedding ID: 79
2023-11-16:22:23:29,775 WARNING  [sqlite.py:234] Insert of existing embedding ID: 80
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 63
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 64
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 65
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 66
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 67
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 68
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 69
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 70
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 71
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 72
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 73
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 74
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 75
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 76
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 77
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 78
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 79
2023-11-16:22:23:29,776 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 80
2023-11-16:22:23:29,798 WARNING  [sqlite.py:234] Insert of existing embedding ID: 81
2023-11-16:22:23:29,798 WARNING  [sqlite.py:234] Insert of existing embedding ID: 82
2023-11-16:22:23:29,798 WARNING  [sqlite.py:234] Insert of existing embedding ID: 83
2023-11-16:22:23:29,798 WARNING  [sqlite.py:234] Insert of existing embedding ID: 84
2023-11-16:22:23:29,799 WARNING  [sqlite.py:234] Insert of existing embedding ID: 85
2023-11-16:22:23:29,799 WARNING  [sqlite.py:234] Insert of existing embedding ID: 86
2023-11-16:22:23:29,799 WARNING  [sqlite.py:234] Insert of existing embedding ID: 87
2023-11-16:22:23:29,799 WARNING  [sqlite.py:234] Insert of existing embedding ID: 88
2023-11-16:22:23:29,800 WARNING  [sqlite.py:234] Insert of existing embedding ID: 89
2023-11-16:22:23:29,800 WARNING  [sqlite.py:234] Insert of existing embedding ID: 90
2023-11-16:22:23:29,800 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 81
2023-11-16:22:23:29,800 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 82
2023-11-16:22:23:29,800 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 83
2023-11-16:22:23:29,800 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 84
2023-11-16:22:23:29,800 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 85
2023-11-16:22:23:29,800 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 86
2023-11-16:22:23:29,800 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 87
2023-11-16:22:23:29,800 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 88
2023-11-16:22:23:29,800 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 89
2023-11-16:22:23:29,800 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 90
2023-11-16:22:23:29,833 WARNING  [sqlite.py:234] Insert of existing embedding ID: 91
2023-11-16:22:23:29,833 WARNING  [sqlite.py:234] Insert of existing embedding ID: 92
2023-11-16:22:23:29,834 WARNING  [sqlite.py:234] Insert of existing embedding ID: 93
2023-11-16:22:23:29,834 WARNING  [sqlite.py:234] Insert of existing embedding ID: 94
2023-11-16:22:23:29,834 WARNING  [sqlite.py:234] Insert of existing embedding ID: 95
2023-11-16:22:23:29,835 WARNING  [sqlite.py:234] Insert of existing embedding ID: 96
2023-11-16:22:23:29,835 WARNING  [sqlite.py:234] Insert of existing embedding ID: 97
2023-11-16:22:23:29,835 WARNING  [sqlite.py:234] Insert of existing embedding ID: 98
2023-11-16:22:23:29,835 WARNING  [sqlite.py:234] Insert of existing embedding ID: 99
2023-11-16:22:23:29,835 WARNING  [sqlite.py:234] Insert of existing embedding ID: 100
2023-11-16:22:23:29,836 WARNING  [sqlite.py:234] Insert of existing embedding ID: 101
2023-11-16:22:23:29,836 WARNING  [sqlite.py:234] Insert of existing embedding ID: 102
2023-11-16:22:23:29,836 WARNING  [sqlite.py:234] Insert of existing embedding ID: 103
2023-11-16:22:23:29,836 WARNING  [sqlite.py:234] Insert of existing embedding ID: 104
2023-11-16:22:23:29,837 WARNING  [sqlite.py:234] Insert of existing embedding ID: 105
2023-11-16:22:23:29,837 WARNING  [sqlite.py:234] Insert of existing embedding ID: 106
2023-11-16:22:23:29,837 WARNING  [sqlite.py:234] Insert of existing embedding ID: 107
2023-11-16:22:23:29,837 WARNING  [sqlite.py:234] Insert of existing embedding ID: 108
2023-11-16:22:23:29,838 WARNING  [sqlite.py:234] Insert of existing embedding ID: 109
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 91
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 92
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 93
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 94
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 95
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 96
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 97
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 98
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 99
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 100
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 101
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 102
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 103
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 104
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 105
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 106
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 107
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 108
2023-11-16:22:23:29,838 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 109
2023-11-16:22:23:29,865 WARNING  [sqlite.py:234] Insert of existing embedding ID: 110
2023-11-16:22:23:29,865 WARNING  [sqlite.py:234] Insert of existing embedding ID: 111
2023-11-16:22:23:29,865 WARNING  [sqlite.py:234] Insert of existing embedding ID: 112
2023-11-16:22:23:29,865 WARNING  [sqlite.py:234] Insert of existing embedding ID: 113
2023-11-16:22:23:29,866 WARNING  [sqlite.py:234] Insert of existing embedding ID: 114
2023-11-16:22:23:29,866 WARNING  [sqlite.py:234] Insert of existing embedding ID: 115
2023-11-16:22:23:29,866 WARNING  [sqlite.py:234] Insert of existing embedding ID: 116
2023-11-16:22:23:29,866 WARNING  [sqlite.py:234] Insert of existing embedding ID: 117
2023-11-16:22:23:29,866 WARNING  [sqlite.py:234] Insert of existing embedding ID: 118
2023-11-16:22:23:29,867 WARNING  [sqlite.py:234] Insert of existing embedding ID: 119
2023-11-16:22:23:29,867 WARNING  [sqlite.py:234] Insert of existing embedding ID: 120
2023-11-16:22:23:29,867 WARNING  [sqlite.py:234] Insert of existing embedding ID: 121
2023-11-16:22:23:29,867 WARNING  [sqlite.py:234] Insert of existing embedding ID: 122
2023-11-16:22:23:29,868 WARNING  [sqlite.py:234] Insert of existing embedding ID: 123
2023-11-16:22:23:29,868 WARNING  [sqlite.py:234] Insert of existing embedding ID: 124
2023-11-16:22:23:29,868 WARNING  [sqlite.py:234] Insert of existing embedding ID: 125
2023-11-16:22:23:29,868 WARNING  [sqlite.py:234] Insert of existing embedding ID: 126
2023-11-16:22:23:29,869 WARNING  [sqlite.py:234] Insert of existing embedding ID: 127
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 110
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 111
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 112
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 113
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 114
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 115
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 116
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 117
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 118
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 119
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 120
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 121
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 122
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 123
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 124
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 125
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 126
2023-11-16:22:23:29,869 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 127
2023-11-16:22:23:29,894 WARNING  [sqlite.py:234] Insert of existing embedding ID: 128
2023-11-16:22:23:29,894 WARNING  [sqlite.py:234] Insert of existing embedding ID: 129
2023-11-16:22:23:29,895 WARNING  [sqlite.py:234] Insert of existing embedding ID: 130
2023-11-16:22:23:29,895 WARNING  [sqlite.py:234] Insert of existing embedding ID: 131
2023-11-16:22:23:29,895 WARNING  [sqlite.py:234] Insert of existing embedding ID: 132
2023-11-16:22:23:29,895 WARNING  [sqlite.py:234] Insert of existing embedding ID: 133
2023-11-16:22:23:29,896 WARNING  [sqlite.py:234] Insert of existing embedding ID: 134
2023-11-16:22:23:29,896 WARNING  [sqlite.py:234] Insert of existing embedding ID: 135
2023-11-16:22:23:29,896 WARNING  [sqlite.py:234] Insert of existing embedding ID: 136
2023-11-16:22:23:29,896 WARNING  [sqlite.py:234] Insert of existing embedding ID: 137
2023-11-16:22:23:29,897 WARNING  [sqlite.py:234] Insert of existing embedding ID: 138
2023-11-16:22:23:29,897 WARNING  [sqlite.py:234] Insert of existing embedding ID: 139
2023-11-16:22:23:29,897 WARNING  [sqlite.py:234] Insert of existing embedding ID: 140
2023-11-16:22:23:29,897 WARNING  [sqlite.py:234] Insert of existing embedding ID: 141
2023-11-16:22:23:29,898 WARNING  [sqlite.py:234] Insert of existing embedding ID: 142
2023-11-16:22:23:29,898 WARNING  [sqlite.py:234] Insert of existing embedding ID: 143
2023-11-16:22:23:29,898 WARNING  [sqlite.py:234] Insert of existing embedding ID: 144
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 128
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 129
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 130
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 131
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 132
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 133
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 134
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 135
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 136
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 137
2023-11-16:22:23:29,898 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 138
2023-11-16:22:23:29,899 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 139
2023-11-16:22:23:29,899 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 140
2023-11-16:22:23:29,899 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 141
2023-11-16:22:23:29,899 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 142
2023-11-16:22:23:29,899 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 143
2023-11-16:22:23:29,899 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 144
2023-11-16:22:23:29,917 WARNING  [sqlite.py:234] Insert of existing embedding ID: 145
2023-11-16:22:23:29,917 WARNING  [sqlite.py:234] Insert of existing embedding ID: 146
2023-11-16:22:23:29,917 WARNING  [sqlite.py:234] Insert of existing embedding ID: 147
2023-11-16:22:23:29,918 WARNING  [sqlite.py:234] Insert of existing embedding ID: 148
2023-11-16:22:23:29,918 WARNING  [sqlite.py:234] Insert of existing embedding ID: 149
2023-11-16:22:23:29,918 WARNING  [sqlite.py:234] Insert of existing embedding ID: 150
2023-11-16:22:23:29,918 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 145
2023-11-16:22:23:29,918 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 146
2023-11-16:22:23:29,918 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 147
2023-11-16:22:23:29,918 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 148
2023-11-16:22:23:29,918 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 149
2023-11-16:22:23:29,918 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 150
2023-11-16:22:23:29,946 WARNING  [sqlite.py:234] Insert of existing embedding ID: 151
2023-11-16:22:23:29,946 WARNING  [sqlite.py:234] Insert of existing embedding ID: 152
2023-11-16:22:23:29,947 WARNING  [sqlite.py:234] Insert of existing embedding ID: 153
2023-11-16:22:23:29,948 WARNING  [sqlite.py:234] Insert of existing embedding ID: 154
2023-11-16:22:23:29,949 WARNING  [sqlite.py:234] Insert of existing embedding ID: 155
2023-11-16:22:23:29,949 WARNING  [sqlite.py:234] Insert of existing embedding ID: 156
2023-11-16:22:23:29,950 WARNING  [sqlite.py:234] Insert of existing embedding ID: 157
2023-11-16:22:23:29,950 WARNING  [sqlite.py:234] Insert of existing embedding ID: 158
2023-11-16:22:23:29,950 WARNING  [sqlite.py:234] Insert of existing embedding ID: 159
2023-11-16:22:23:29,951 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 151
2023-11-16:22:23:29,951 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 152
2023-11-16:22:23:29,951 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 153
2023-11-16:22:23:29,951 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 154
2023-11-16:22:23:29,951 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 155
2023-11-16:22:23:29,951 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 156
2023-11-16:22:23:29,951 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 157
2023-11-16:22:23:29,951 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 158
2023-11-16:22:23:29,951 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 159
2023-11-16:22:23:30,014 WARNING  [sqlite.py:234] Insert of existing embedding ID: 160
2023-11-16:22:23:30,015 WARNING  [sqlite.py:234] Insert of existing embedding ID: 161
2023-11-16:22:23:30,015 WARNING  [sqlite.py:234] Insert of existing embedding ID: 162
2023-11-16:22:23:30,015 WARNING  [sqlite.py:234] Insert of existing embedding ID: 163
2023-11-16:22:23:30,016 WARNING  [sqlite.py:234] Insert of existing embedding ID: 164
2023-11-16:22:23:30,016 WARNING  [sqlite.py:234] Insert of existing embedding ID: 165
2023-11-16:22:23:30,017 WARNING  [sqlite.py:234] Insert of existing embedding ID: 166
2023-11-16:22:23:30,017 WARNING  [sqlite.py:234] Insert of existing embedding ID: 167
2023-11-16:22:23:30,017 WARNING  [sqlite.py:234] Insert of existing embedding ID: 168
2023-11-16:22:23:30,018 WARNING  [sqlite.py:234] Insert of existing embedding ID: 169
2023-11-16:22:23:30,018 WARNING  [sqlite.py:234] Insert of existing embedding ID: 170
2023-11-16:22:23:30,018 WARNING  [sqlite.py:234] Insert of existing embedding ID: 171
2023-11-16:22:23:30,019 WARNING  [sqlite.py:234] Insert of existing embedding ID: 172
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 160
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 161
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 162
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 163
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 164
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 165
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 166
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 167
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 168
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 169
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 170
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 171
2023-11-16:22:23:30,019 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 172
2023-11-16:22:23:30,054 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:23:30,054 INFO     [vector_search.py:103] Element: (1700092390869348, 'Job Title') - Score: 0.662529706954956
2023-11-16:22:23:30,054 INFO     [vector_search.py:103] Element: (1700092362344043, 'Supervisor') - Score: 0.598232626914978
2023-11-16:22:23:30,054 INFO     [vector_search.py:103] Element: (1700092362344043, 'JobFunctionDescription') - Score: 0.5774050951004028
2023-11-16:22:23:30,054 INFO     [vector_search.py:103] Element: (1700092362344043, 'EmployeeType') - Score: 0.5185337066650391
2023-11-16:22:23:30,054 INFO     [vector_search.py:103] Element: (1700092377314948, 'Administrative') - Score: 0.5149404406547546
2023-11-16:22:23:30,067 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:23:30,067 INFO     [vector_search.py:103] Element: (1700092381859424, 'Plan Duration') - Score: 0.5834157466888428
2023-11-16:22:23:30,067 INFO     [vector_search.py:103] Element: (1700092404695104, 'Training Duration(Days)') - Score: 0.5574712157249451
2023-11-16:22:23:30,067 INFO     [vector_search.py:103] Element: (1700092377314948, 'Administrative_Duration') - Score: 0.5512425899505615
2023-11-16:22:23:30,067 INFO     [vector_search.py:103] Element: (1700092377314948, 'Informational_Duration') - Score: 0.5294865965843201
2023-11-16:22:23:30,067 INFO     [vector_search.py:103] Element: (1700092377314948, 'ProductRelated_Duration') - Score: 0.5084898471832275
2023-11-16:22:23:30,067 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-16:22:23:30,105 INFO     [prebuilt.py:537] 
   Administrative  Administrative_Duration  Informational  \
0               0                      0.0              0   
1               0                      0.0              0   
2               0                      0.0              0   

   Informational_Duration  ProductRelated  ProductRelated_Duration  \
0                     0.0               1                      0.0   
1                     0.0               2                     64.0   
2                     0.0               1                      0.0   

   BounceRates  ExitRates  PageValues  SpecialDay Month  OperatingSystems  \
0          0.2        0.2         0.0         0.0   Feb                 1   
1          0.0        0.1         0.0         0.0   Feb                 2   
2          0.2        0.2         0.0         0.0   Feb                 4   

   Browser  Region  TrafficType        VisitorType  Weekend  Revenue  
0        1       1            1  Returning_Visitor    False    False  
1        2       1            2  Returning_Visitor    False    False  
2        1       9            3  Returning_Visitor    False    False  
2023-11-16:22:23:30,114 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:23:30,142 INFO     [logger.py:73] Question: Are there any patterns in the job roles and the duration of employment?
2023-11-16:22:23:30,142 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-16:22:23:30,142 INFO     [logger.py:73] Prompt ID: 9931e2a7-eb27-4da3-869d-cc46353cb12b
2023-11-16:22:23:30,169 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 12330 rows and 18 columns.
This is the metadata of the dataframe dfs[0]:
Administrative,Administrative_Duration,Informational,Informational_Duration,ProductRelated,ProductRelated_Duration,BounceRates,ExitRates,PageValues,SpecialDay,Month,OperatingSystems,Browser,Region,TrafficType,VisitorType,Weekend,Revenue
0,0.0,0,0.0,1,0.0,0.2,0.2,0.0,0.0,Feb,1,1,1,1,Returning_Visitor,False,False
0,0.0,0,0.0,10,627.5,0.02,0.05,0.0,0.0,Feb,3,3,1,4,Returning_Visitor,True,False
0,0.0,0,0.0,2,2.666666667,0.05,0.14,0.0,0.0,Feb,3,2,2,4,Returning_Visitor,False,False
0,0.0,0,0.0,1,0.0,0.2,0.2,0.0,0.0,Feb,4,1,9,3,Returning_Visitor,False,False
0,0.0,0,0.0,2,64.0,0.0,0.1,0.0,0.0,Feb,2,2,1,2,Returning_Visitor,False,False
</dataframe>

<conversation>
User: Are there any patterns in the job roles and the duration of employment?
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-16:22:23:30,172 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:23:30,172 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 12330 rows and 18 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nAdministrative,Administrative_Duration,Informational,Informational_Duration,ProductRelated,ProductRelated_Duration,BounceRates,ExitRates,PageValues,SpecialDay,Month,OperatingSystems,Browser,Region,TrafficType,VisitorType,Weekend,Revenue\\n0,0.0,0,0.0,1,0.0,0.2,0.2,0.0,0.0,Feb,1,1,1,1,Returning_Visitor,False,False\\n0,0.0,0,0.0,10,627.5,0.02,0.05,0.0,0.0,Feb,3,3,1,4,Returning_Visitor,True,False\\n0,0.0,0,0.0,2,2.666666667,0.05,0.14,0.0,0.0,Feb,3,2,2,4,Returning_Visitor,False,False\\n0,0.0,0,0.0,1,0.0,0.2,0.2,0.0,0.0,Feb,4,1,9,3,Returning_Visitor,False,False\\n0,0.0,0,0.0,2,64.0,0.0,0.1,0.0,0.0,Feb,2,2,1,2,Returning_Visitor,False,False\\n</dataframe>\\n\\n<conversation>\\nUser: Are there any patterns in the job roles and the duration of employment?\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-16:22:23:30,829 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:23:55,005 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:23:55,010 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=24325 request_id=310281b5cb34864d4fca3571f5d3811e response_code=200
2023-11-16:22:23:55,057 INFO     [logger.py:73] Code generated:
```
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    # The user's question is not relevant to the provided dataframe.
    # The dataframe does not contain any information about job roles or duration of employment.
    return { "type": "string", "value": "The provided data does not contain information about job roles or duration of employment." }
```

2023-11-16:22:23:55,063 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    return {'type': 'string', 'value': 'The provided data does not contain information about job roles or duration of employment.'}
        ```
2023-11-16:22:23:55,064 INFO     [logger.py:73] Answer: {'type': 'string', 'value': 'The provided data does not contain information about job roles or duration of employment.'}
2023-11-16:22:23:55,065 INFO     [logger.py:73] Executed in: 24.923753023147583s
2023-11-16:22:23:55,099 INFO     [quality_test.py:48] customer request: Analyze whether the employee performance has a relation to the frequency of termination.
2023-11-16:22:23:55,196 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:23:55,196 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Analyze whether the employee performance has a relation to the frequency of termination. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-16:22:23:56,330 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:23:56,332 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=662 request_id=f9ea53bda780eeaff11a7e62ad2c23f5 response_code=200
2023-11-16:22:23:56,340 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-16:22:23:56,828 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-16:22:23:56,901 WARNING  [sqlite.py:234] Insert of existing embedding ID: 0
2023-11-16:22:23:56,902 WARNING  [sqlite.py:234] Insert of existing embedding ID: 1
2023-11-16:22:23:56,902 WARNING  [sqlite.py:234] Insert of existing embedding ID: 2
2023-11-16:22:23:56,902 WARNING  [sqlite.py:234] Insert of existing embedding ID: 3
2023-11-16:22:23:56,902 WARNING  [sqlite.py:234] Insert of existing embedding ID: 4
2023-11-16:22:23:56,903 WARNING  [sqlite.py:234] Insert of existing embedding ID: 5
2023-11-16:22:23:56,903 WARNING  [sqlite.py:234] Insert of existing embedding ID: 6
2023-11-16:22:23:56,903 WARNING  [sqlite.py:234] Insert of existing embedding ID: 7
2023-11-16:22:23:56,903 WARNING  [sqlite.py:234] Insert of existing embedding ID: 8
2023-11-16:22:23:56,903 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 0
2023-11-16:22:23:56,903 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 1
2023-11-16:22:23:56,903 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 2
2023-11-16:22:23:56,904 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 3
2023-11-16:22:23:56,904 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 4
2023-11-16:22:23:56,904 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 5
2023-11-16:22:23:56,904 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 6
2023-11-16:22:23:56,904 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 7
2023-11-16:22:23:56,904 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 8
2023-11-16:22:23:56,921 WARNING  [sqlite.py:234] Insert of existing embedding ID: 9
2023-11-16:22:23:56,921 WARNING  [sqlite.py:234] Insert of existing embedding ID: 10
2023-11-16:22:23:56,921 WARNING  [sqlite.py:234] Insert of existing embedding ID: 11
2023-11-16:22:23:56,922 WARNING  [sqlite.py:234] Insert of existing embedding ID: 12
2023-11-16:22:23:56,922 WARNING  [sqlite.py:234] Insert of existing embedding ID: 13
2023-11-16:22:23:56,922 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 9
2023-11-16:22:23:56,922 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 10
2023-11-16:22:23:56,922 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 11
2023-11-16:22:23:56,922 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 12
2023-11-16:22:23:56,922 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 13
2023-11-16:22:23:56,966 WARNING  [sqlite.py:234] Insert of existing embedding ID: 14
2023-11-16:22:23:56,967 WARNING  [sqlite.py:234] Insert of existing embedding ID: 15
2023-11-16:22:23:56,967 WARNING  [sqlite.py:234] Insert of existing embedding ID: 16
2023-11-16:22:23:56,967 WARNING  [sqlite.py:234] Insert of existing embedding ID: 17
2023-11-16:22:23:56,967 WARNING  [sqlite.py:234] Insert of existing embedding ID: 18
2023-11-16:22:23:56,968 WARNING  [sqlite.py:234] Insert of existing embedding ID: 19
2023-11-16:22:23:56,968 WARNING  [sqlite.py:234] Insert of existing embedding ID: 20
2023-11-16:22:23:56,968 WARNING  [sqlite.py:234] Insert of existing embedding ID: 21
2023-11-16:22:23:56,968 WARNING  [sqlite.py:234] Insert of existing embedding ID: 22
2023-11-16:22:23:56,969 WARNING  [sqlite.py:234] Insert of existing embedding ID: 23
2023-11-16:22:23:56,969 WARNING  [sqlite.py:234] Insert of existing embedding ID: 24
2023-11-16:22:23:56,969 WARNING  [sqlite.py:234] Insert of existing embedding ID: 25
2023-11-16:22:23:56,969 WARNING  [sqlite.py:234] Insert of existing embedding ID: 26
2023-11-16:22:23:56,969 WARNING  [sqlite.py:234] Insert of existing embedding ID: 27
2023-11-16:22:23:56,970 WARNING  [sqlite.py:234] Insert of existing embedding ID: 28
2023-11-16:22:23:56,970 WARNING  [sqlite.py:234] Insert of existing embedding ID: 29
2023-11-16:22:23:56,970 WARNING  [sqlite.py:234] Insert of existing embedding ID: 30
2023-11-16:22:23:56,970 WARNING  [sqlite.py:234] Insert of existing embedding ID: 31
2023-11-16:22:23:56,971 WARNING  [sqlite.py:234] Insert of existing embedding ID: 32
2023-11-16:22:23:56,971 WARNING  [sqlite.py:234] Insert of existing embedding ID: 33
2023-11-16:22:23:56,971 WARNING  [sqlite.py:234] Insert of existing embedding ID: 34
2023-11-16:22:23:56,971 WARNING  [sqlite.py:234] Insert of existing embedding ID: 35
2023-11-16:22:23:56,972 WARNING  [sqlite.py:234] Insert of existing embedding ID: 36
2023-11-16:22:23:56,972 WARNING  [sqlite.py:234] Insert of existing embedding ID: 37
2023-11-16:22:23:56,972 WARNING  [sqlite.py:234] Insert of existing embedding ID: 38
2023-11-16:22:23:56,972 WARNING  [sqlite.py:234] Insert of existing embedding ID: 39
2023-11-16:22:23:56,972 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 14
2023-11-16:22:23:56,972 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 15
2023-11-16:22:23:56,972 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 16
2023-11-16:22:23:56,972 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 17
2023-11-16:22:23:56,972 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 18
2023-11-16:22:23:56,972 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 19
2023-11-16:22:23:56,972 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 20
2023-11-16:22:23:56,972 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 21
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 22
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 23
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 24
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 25
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 26
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 27
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 28
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 29
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 30
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 31
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 32
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 33
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 34
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 35
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 36
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 37
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 38
2023-11-16:22:23:56,973 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 39
2023-11-16:22:23:56,996 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:23:57,211 WARNING  [sqlite.py:234] Insert of existing embedding ID: 40
2023-11-16:22:23:57,211 WARNING  [sqlite.py:234] Insert of existing embedding ID: 41
2023-11-16:22:23:57,212 WARNING  [sqlite.py:234] Insert of existing embedding ID: 42
2023-11-16:22:23:57,212 WARNING  [sqlite.py:234] Insert of existing embedding ID: 43
2023-11-16:22:23:57,212 WARNING  [sqlite.py:234] Insert of existing embedding ID: 44
2023-11-16:22:23:57,212 WARNING  [sqlite.py:234] Insert of existing embedding ID: 45
2023-11-16:22:23:57,212 WARNING  [sqlite.py:234] Insert of existing embedding ID: 46
2023-11-16:22:23:57,213 WARNING  [sqlite.py:234] Insert of existing embedding ID: 47
2023-11-16:22:23:57,213 WARNING  [sqlite.py:234] Insert of existing embedding ID: 48
2023-11-16:22:23:57,213 WARNING  [sqlite.py:234] Insert of existing embedding ID: 49
2023-11-16:22:23:57,213 WARNING  [sqlite.py:234] Insert of existing embedding ID: 50
2023-11-16:22:23:57,214 WARNING  [sqlite.py:234] Insert of existing embedding ID: 51
2023-11-16:22:23:57,214 WARNING  [sqlite.py:234] Insert of existing embedding ID: 52
2023-11-16:22:23:57,214 WARNING  [sqlite.py:234] Insert of existing embedding ID: 53
2023-11-16:22:23:57,214 WARNING  [sqlite.py:234] Insert of existing embedding ID: 54
2023-11-16:22:23:57,215 WARNING  [sqlite.py:234] Insert of existing embedding ID: 55
2023-11-16:22:23:57,215 WARNING  [sqlite.py:234] Insert of existing embedding ID: 56
2023-11-16:22:23:57,215 WARNING  [sqlite.py:234] Insert of existing embedding ID: 57
2023-11-16:22:23:57,215 WARNING  [sqlite.py:234] Insert of existing embedding ID: 58
2023-11-16:22:23:57,215 WARNING  [sqlite.py:234] Insert of existing embedding ID: 59
2023-11-16:22:23:57,216 WARNING  [sqlite.py:234] Insert of existing embedding ID: 60
2023-11-16:22:23:57,216 WARNING  [sqlite.py:234] Insert of existing embedding ID: 61
2023-11-16:22:23:57,216 WARNING  [sqlite.py:234] Insert of existing embedding ID: 62
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 40
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 41
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 42
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 43
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 44
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 45
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 46
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 47
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 48
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 49
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 50
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 51
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 52
2023-11-16:22:23:57,216 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 53
2023-11-16:22:23:57,217 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 54
2023-11-16:22:23:57,217 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 55
2023-11-16:22:23:57,217 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 56
2023-11-16:22:23:57,217 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 57
2023-11-16:22:23:57,217 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 58
2023-11-16:22:23:57,217 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 59
2023-11-16:22:23:57,217 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 60
2023-11-16:22:23:57,217 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 61
2023-11-16:22:23:57,217 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 62
2023-11-16:22:23:57,249 WARNING  [sqlite.py:234] Insert of existing embedding ID: 63
2023-11-16:22:23:57,249 WARNING  [sqlite.py:234] Insert of existing embedding ID: 64
2023-11-16:22:23:57,249 WARNING  [sqlite.py:234] Insert of existing embedding ID: 65
2023-11-16:22:23:57,250 WARNING  [sqlite.py:234] Insert of existing embedding ID: 66
2023-11-16:22:23:57,250 WARNING  [sqlite.py:234] Insert of existing embedding ID: 67
2023-11-16:22:23:57,250 WARNING  [sqlite.py:234] Insert of existing embedding ID: 68
2023-11-16:22:23:57,250 WARNING  [sqlite.py:234] Insert of existing embedding ID: 69
2023-11-16:22:23:57,251 WARNING  [sqlite.py:234] Insert of existing embedding ID: 70
2023-11-16:22:23:57,251 WARNING  [sqlite.py:234] Insert of existing embedding ID: 71
2023-11-16:22:23:57,251 WARNING  [sqlite.py:234] Insert of existing embedding ID: 72
2023-11-16:22:23:57,251 WARNING  [sqlite.py:234] Insert of existing embedding ID: 73
2023-11-16:22:23:57,252 WARNING  [sqlite.py:234] Insert of existing embedding ID: 74
2023-11-16:22:23:57,252 WARNING  [sqlite.py:234] Insert of existing embedding ID: 75
2023-11-16:22:23:57,252 WARNING  [sqlite.py:234] Insert of existing embedding ID: 76
2023-11-16:22:23:57,253 WARNING  [sqlite.py:234] Insert of existing embedding ID: 77
2023-11-16:22:23:57,253 WARNING  [sqlite.py:234] Insert of existing embedding ID: 78
2023-11-16:22:23:57,253 WARNING  [sqlite.py:234] Insert of existing embedding ID: 79
2023-11-16:22:23:57,253 WARNING  [sqlite.py:234] Insert of existing embedding ID: 80
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 63
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 64
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 65
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 66
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 67
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 68
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 69
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 70
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 71
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 72
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 73
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 74
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 75
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 76
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 77
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 78
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 79
2023-11-16:22:23:57,254 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 80
2023-11-16:22:23:57,275 WARNING  [sqlite.py:234] Insert of existing embedding ID: 81
2023-11-16:22:23:57,276 WARNING  [sqlite.py:234] Insert of existing embedding ID: 82
2023-11-16:22:23:57,276 WARNING  [sqlite.py:234] Insert of existing embedding ID: 83
2023-11-16:22:23:57,276 WARNING  [sqlite.py:234] Insert of existing embedding ID: 84
2023-11-16:22:23:57,276 WARNING  [sqlite.py:234] Insert of existing embedding ID: 85
2023-11-16:22:23:57,277 WARNING  [sqlite.py:234] Insert of existing embedding ID: 86
2023-11-16:22:23:57,277 WARNING  [sqlite.py:234] Insert of existing embedding ID: 87
2023-11-16:22:23:57,277 WARNING  [sqlite.py:234] Insert of existing embedding ID: 88
2023-11-16:22:23:57,277 WARNING  [sqlite.py:234] Insert of existing embedding ID: 89
2023-11-16:22:23:57,277 WARNING  [sqlite.py:234] Insert of existing embedding ID: 90
2023-11-16:22:23:57,277 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 81
2023-11-16:22:23:57,278 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 82
2023-11-16:22:23:57,278 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 83
2023-11-16:22:23:57,278 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 84
2023-11-16:22:23:57,278 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 85
2023-11-16:22:23:57,278 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 86
2023-11-16:22:23:57,278 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 87
2023-11-16:22:23:57,278 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 88
2023-11-16:22:23:57,278 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 89
2023-11-16:22:23:57,278 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 90
2023-11-16:22:23:57,310 WARNING  [sqlite.py:234] Insert of existing embedding ID: 91
2023-11-16:22:23:57,310 WARNING  [sqlite.py:234] Insert of existing embedding ID: 92
2023-11-16:22:23:57,310 WARNING  [sqlite.py:234] Insert of existing embedding ID: 93
2023-11-16:22:23:57,310 WARNING  [sqlite.py:234] Insert of existing embedding ID: 94
2023-11-16:22:23:57,311 WARNING  [sqlite.py:234] Insert of existing embedding ID: 95
2023-11-16:22:23:57,311 WARNING  [sqlite.py:234] Insert of existing embedding ID: 96
2023-11-16:22:23:57,311 WARNING  [sqlite.py:234] Insert of existing embedding ID: 97
2023-11-16:22:23:57,311 WARNING  [sqlite.py:234] Insert of existing embedding ID: 98
2023-11-16:22:23:57,312 WARNING  [sqlite.py:234] Insert of existing embedding ID: 99
2023-11-16:22:23:57,312 WARNING  [sqlite.py:234] Insert of existing embedding ID: 100
2023-11-16:22:23:57,312 WARNING  [sqlite.py:234] Insert of existing embedding ID: 101
2023-11-16:22:23:57,312 WARNING  [sqlite.py:234] Insert of existing embedding ID: 102
2023-11-16:22:23:57,312 WARNING  [sqlite.py:234] Insert of existing embedding ID: 103
2023-11-16:22:23:57,313 WARNING  [sqlite.py:234] Insert of existing embedding ID: 104
2023-11-16:22:23:57,313 WARNING  [sqlite.py:234] Insert of existing embedding ID: 105
2023-11-16:22:23:57,313 WARNING  [sqlite.py:234] Insert of existing embedding ID: 106
2023-11-16:22:23:57,313 WARNING  [sqlite.py:234] Insert of existing embedding ID: 107
2023-11-16:22:23:57,314 WARNING  [sqlite.py:234] Insert of existing embedding ID: 108
2023-11-16:22:23:57,314 WARNING  [sqlite.py:234] Insert of existing embedding ID: 109
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 91
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 92
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 93
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 94
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 95
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 96
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 97
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 98
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 99
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 100
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 101
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 102
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 103
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 104
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 105
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 106
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 107
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 108
2023-11-16:22:23:57,314 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 109
2023-11-16:22:23:57,341 WARNING  [sqlite.py:234] Insert of existing embedding ID: 110
2023-11-16:22:23:57,341 WARNING  [sqlite.py:234] Insert of existing embedding ID: 111
2023-11-16:22:23:57,341 WARNING  [sqlite.py:234] Insert of existing embedding ID: 112
2023-11-16:22:23:57,342 WARNING  [sqlite.py:234] Insert of existing embedding ID: 113
2023-11-16:22:23:57,342 WARNING  [sqlite.py:234] Insert of existing embedding ID: 114
2023-11-16:22:23:57,342 WARNING  [sqlite.py:234] Insert of existing embedding ID: 115
2023-11-16:22:23:57,342 WARNING  [sqlite.py:234] Insert of existing embedding ID: 116
2023-11-16:22:23:57,342 WARNING  [sqlite.py:234] Insert of existing embedding ID: 117
2023-11-16:22:23:57,343 WARNING  [sqlite.py:234] Insert of existing embedding ID: 118
2023-11-16:22:23:57,343 WARNING  [sqlite.py:234] Insert of existing embedding ID: 119
2023-11-16:22:23:57,343 WARNING  [sqlite.py:234] Insert of existing embedding ID: 120
2023-11-16:22:23:57,343 WARNING  [sqlite.py:234] Insert of existing embedding ID: 121
2023-11-16:22:23:57,344 WARNING  [sqlite.py:234] Insert of existing embedding ID: 122
2023-11-16:22:23:57,344 WARNING  [sqlite.py:234] Insert of existing embedding ID: 123
2023-11-16:22:23:57,344 WARNING  [sqlite.py:234] Insert of existing embedding ID: 124
2023-11-16:22:23:57,344 WARNING  [sqlite.py:234] Insert of existing embedding ID: 125
2023-11-16:22:23:57,344 WARNING  [sqlite.py:234] Insert of existing embedding ID: 126
2023-11-16:22:23:57,345 WARNING  [sqlite.py:234] Insert of existing embedding ID: 127
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 110
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 111
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 112
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 113
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 114
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 115
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 116
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 117
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 118
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 119
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 120
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 121
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 122
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 123
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 124
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 125
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 126
2023-11-16:22:23:57,345 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 127
2023-11-16:22:23:57,371 WARNING  [sqlite.py:234] Insert of existing embedding ID: 128
2023-11-16:22:23:57,371 WARNING  [sqlite.py:234] Insert of existing embedding ID: 129
2023-11-16:22:23:57,371 WARNING  [sqlite.py:234] Insert of existing embedding ID: 130
2023-11-16:22:23:57,372 WARNING  [sqlite.py:234] Insert of existing embedding ID: 131
2023-11-16:22:23:57,372 WARNING  [sqlite.py:234] Insert of existing embedding ID: 132
2023-11-16:22:23:57,372 WARNING  [sqlite.py:234] Insert of existing embedding ID: 133
2023-11-16:22:23:57,372 WARNING  [sqlite.py:234] Insert of existing embedding ID: 134
2023-11-16:22:23:57,372 WARNING  [sqlite.py:234] Insert of existing embedding ID: 135
2023-11-16:22:23:57,373 WARNING  [sqlite.py:234] Insert of existing embedding ID: 136
2023-11-16:22:23:57,373 WARNING  [sqlite.py:234] Insert of existing embedding ID: 137
2023-11-16:22:23:57,373 WARNING  [sqlite.py:234] Insert of existing embedding ID: 138
2023-11-16:22:23:57,373 WARNING  [sqlite.py:234] Insert of existing embedding ID: 139
2023-11-16:22:23:57,374 WARNING  [sqlite.py:234] Insert of existing embedding ID: 140
2023-11-16:22:23:57,374 WARNING  [sqlite.py:234] Insert of existing embedding ID: 141
2023-11-16:22:23:57,374 WARNING  [sqlite.py:234] Insert of existing embedding ID: 142
2023-11-16:22:23:57,374 WARNING  [sqlite.py:234] Insert of existing embedding ID: 143
2023-11-16:22:23:57,375 WARNING  [sqlite.py:234] Insert of existing embedding ID: 144
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 128
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 129
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 130
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 131
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 132
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 133
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 134
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 135
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 136
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 137
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 138
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 139
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 140
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 141
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 142
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 143
2023-11-16:22:23:57,375 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 144
2023-11-16:22:23:57,393 WARNING  [sqlite.py:234] Insert of existing embedding ID: 145
2023-11-16:22:23:57,393 WARNING  [sqlite.py:234] Insert of existing embedding ID: 146
2023-11-16:22:23:57,393 WARNING  [sqlite.py:234] Insert of existing embedding ID: 147
2023-11-16:22:23:57,393 WARNING  [sqlite.py:234] Insert of existing embedding ID: 148
2023-11-16:22:23:57,394 WARNING  [sqlite.py:234] Insert of existing embedding ID: 149
2023-11-16:22:23:57,394 WARNING  [sqlite.py:234] Insert of existing embedding ID: 150
2023-11-16:22:23:57,394 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 145
2023-11-16:22:23:57,394 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 146
2023-11-16:22:23:57,394 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 147
2023-11-16:22:23:57,394 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 148
2023-11-16:22:23:57,394 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 149
2023-11-16:22:23:57,394 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 150
2023-11-16:22:23:57,429 WARNING  [sqlite.py:234] Insert of existing embedding ID: 151
2023-11-16:22:23:57,429 WARNING  [sqlite.py:234] Insert of existing embedding ID: 152
2023-11-16:22:23:57,430 WARNING  [sqlite.py:234] Insert of existing embedding ID: 153
2023-11-16:22:23:57,430 WARNING  [sqlite.py:234] Insert of existing embedding ID: 154
2023-11-16:22:23:57,431 WARNING  [sqlite.py:234] Insert of existing embedding ID: 155
2023-11-16:22:23:57,431 WARNING  [sqlite.py:234] Insert of existing embedding ID: 156
2023-11-16:22:23:57,432 WARNING  [sqlite.py:234] Insert of existing embedding ID: 157
2023-11-16:22:23:57,433 WARNING  [sqlite.py:234] Insert of existing embedding ID: 158
2023-11-16:22:23:57,433 WARNING  [sqlite.py:234] Insert of existing embedding ID: 159
2023-11-16:22:23:57,434 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 151
2023-11-16:22:23:57,434 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 152
2023-11-16:22:23:57,434 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 153
2023-11-16:22:23:57,434 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 154
2023-11-16:22:23:57,434 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 155
2023-11-16:22:23:57,434 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 156
2023-11-16:22:23:57,434 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 157
2023-11-16:22:23:57,434 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 158
2023-11-16:22:23:57,434 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 159
2023-11-16:22:23:57,499 WARNING  [sqlite.py:234] Insert of existing embedding ID: 160
2023-11-16:22:23:57,500 WARNING  [sqlite.py:234] Insert of existing embedding ID: 161
2023-11-16:22:23:57,500 WARNING  [sqlite.py:234] Insert of existing embedding ID: 162
2023-11-16:22:23:57,500 WARNING  [sqlite.py:234] Insert of existing embedding ID: 163
2023-11-16:22:23:57,501 WARNING  [sqlite.py:234] Insert of existing embedding ID: 164
2023-11-16:22:23:57,501 WARNING  [sqlite.py:234] Insert of existing embedding ID: 165
2023-11-16:22:23:57,501 WARNING  [sqlite.py:234] Insert of existing embedding ID: 166
2023-11-16:22:23:57,501 WARNING  [sqlite.py:234] Insert of existing embedding ID: 167
2023-11-16:22:23:57,502 WARNING  [sqlite.py:234] Insert of existing embedding ID: 168
2023-11-16:22:23:57,502 WARNING  [sqlite.py:234] Insert of existing embedding ID: 169
2023-11-16:22:23:57,502 WARNING  [sqlite.py:234] Insert of existing embedding ID: 170
2023-11-16:22:23:57,502 WARNING  [sqlite.py:234] Insert of existing embedding ID: 171
2023-11-16:22:23:57,503 WARNING  [sqlite.py:234] Insert of existing embedding ID: 172
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 160
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 161
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 162
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 163
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 164
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 165
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 166
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 167
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 168
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 169
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 170
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 171
2023-11-16:22:23:57,503 WARNING  [local_hnsw.py:319] Add of existing embedding ID: 172
2023-11-16:22:23:57,533 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:23:57,533 INFO     [vector_search.py:103] Element: (1700092362344043, 'Current Employee Rating') - Score: 0.6070469617843628
2023-11-16:22:23:57,533 INFO     [vector_search.py:103] Element: (1700092362344043, 'EmployeeType') - Score: 0.5839868783950806
2023-11-16:22:23:57,533 INFO     [vector_search.py:103] Element: (1700092362344043, 'EmployeeStatus') - Score: 0.5781844854354858
2023-11-16:22:23:57,533 INFO     [vector_search.py:103] Element: (1700092362344043, 'Performance Score') - Score: 0.5282902717590332
2023-11-16:22:23:57,533 INFO     [vector_search.py:103] Element: (1700092404695104, 'Employee ID') - Score: 0.5161601305007935
2023-11-16:22:23:57,546 INFO     [vector_search.py:99] Similarity Result:
2023-11-16:22:23:57,546 INFO     [vector_search.py:103] Element: (1700092362344043, 'TerminationDescription') - Score: 0.6750630140304565
2023-11-16:22:23:57,546 INFO     [vector_search.py:103] Element: (1700092362344043, 'TerminationType') - Score: 0.6479887962341309
2023-11-16:22:23:57,546 INFO     [vector_search.py:103] Element: (1700092362344043, 'ExitDate') - Score: 0.32912376523017883
2023-11-16:22:23:57,546 INFO     [vector_search.py:103] Element: (1700092377314948, 'ExitRates') - Score: 0.32724320888519287
2023-11-16:22:23:57,546 INFO     [vector_search.py:103] Element: (1700092385555876, 'Frequency of Purchases') - Score: 0.3048601448535919
2023-11-16:22:23:57,547 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-16:22:23:57,576 INFO     [prebuilt.py:537] 
   EmpID FirstName LastName  StartDate ExitDate                    Title  \
0   3427     Uriah  Bridges  20-Sep-19      NaN  Production Technician I   
1   3428     Paula    Small  11-Feb-23      NaN  Production Technician I   
2   3429    Edward     Buck  10-Dec-18      NaN       Area Sales Manager   

        Supervisor                      ADEmail BusinessUnit EmployeeStatus  \
0     Peter Oneill  uriah.bridges@bilearner.com         CCDR         Active   
1  Renee Mccormick    paula.small@bilearner.com           EW         Active   
2   Crystal Walker    edward.buck@bilearner.com           PL         Active   

  EmployeeType PayZone EmployeeClassificationType TerminationType  \
0     Contract  Zone C                  Temporary             Unk   
1     Contract  Zone A                  Part-Time             Unk   
2    Full-Time  Zone B                  Part-Time             Unk   

  TerminationDescription     DepartmentType              Division         DOB  \
0                    NaN  Production         Finance & Accounting  07-10-1969   
1                    NaN  Production                       Aerial  30-08-1965   
2                    NaN              Sales         General - Sga  06-10-1991   

  State JobFunctionDescription GenderCode  LocationCode  RaceDesc MaritalDesc  \
0    MA             Accounting     Female         34904     White     Widowed   
1    MA                  Labor       Male          6593  Hispanic     Widowed   
2    MA              Assistant       Male          2330  Hispanic     Widowed   

  Performance Score  Current Employee Rating  
0       Fully Meets                        4  
1       Fully Meets                        3  
2       Fully Meets                        4  
2023-11-16:22:23:57,587 INFO     [logger.py:73] Question: Analyze whether the employee performance has a relation to the frequency of termination.
2023-11-16:22:23:57,587 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-16:22:23:57,588 INFO     [logger.py:73] Prompt ID: f2d58646-9ebd-459e-b83e-3b6ab49a46a9
2023-11-16:22:23:57,616 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 3000 rows and 26 columns.
This is the metadata of the dataframe dfs[0]:
EmpID,FirstName,LastName,StartDate,ExitDate,Title,Supervisor,ADEmail,BusinessUnit,EmployeeStatus,EmployeeType,PayZone,EmployeeClassificationType,TerminationType,TerminationDescription,DepartmentType,Division,DOB,State,JobFunctionDescription,GenderCode,LocationCode,RaceDesc,MaritalDesc,Performance Score,Current Employee Rating
3429,Edward,Buck,10-Dec-18,,Area Sales Manager,Crystal Walker,6498ejsnlovp@gmail.com,PL,Active,Full-Time,Zone B,Part-Time,Unk,,Sales,General - Sga,06-10-1991,MA,Assistant,Male,2330,Hispanic,Widowed,Fully Meets,4
3430,Michael,Riordan,21-Jun-21,,Area Sales Manager,Rebekah Wright,hmvvs8uu84eb@outlook.com,CCDR,Active,Contract,Zone A,Full-Time,Unk,,Sales,Finance & Accounting,04-04-1998,ND,Clerk,Male,58782,Other,Single,Fully Meets,2
3431,Jasmine,Onque,29-Jun-19,,Area Sales Manager,Jason Kim,sdksdwgi0j7@yahoo.com,TNS,Active,Contract,Zone A,Temporary,Unk,,Sales,General - Con,29-08-1969,FL,Laborer,Female,33174,Other,Married,Fully Meets,3
3427,Uriah,Bridges,20-Sep-19,,Production Technician I,Peter Oneill,v_yc89@yahoo.com,CCDR,Active,Contract,Zone C,Temporary,Unk,,Production       ,Finance & Accounting,07-10-1969,MA,Accounting,Female,34904,White,Widowed,Fully Meets,4
3428,Paula,Small,11-Feb-23,,Production Technician I,Renee Mccormick,0eo5_g@icloud.com,EW,Active,Contract,Zone A,Part-Time,Unk,,Production       ,Aerial,30-08-1965,MA,Labor,Male,6593,Hispanic,Widowed,Fully Meets,3
</dataframe>

<conversation>
User: Analyze whether the employee performance has a relation to the frequency of termination.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-16:22:23:57,617 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:23:57,617 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 3000 rows and 26 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nEmpID,FirstName,LastName,StartDate,ExitDate,Title,Supervisor,ADEmail,BusinessUnit,EmployeeStatus,EmployeeType,PayZone,EmployeeClassificationType,TerminationType,TerminationDescription,DepartmentType,Division,DOB,State,JobFunctionDescription,GenderCode,LocationCode,RaceDesc,MaritalDesc,Performance Score,Current Employee Rating\\n3429,Edward,Buck,10-Dec-18,,Area Sales Manager,Crystal Walker,6498ejsnlovp@gmail.com,PL,Active,Full-Time,Zone B,Part-Time,Unk,,Sales,General - Sga,06-10-1991,MA,Assistant,Male,2330,Hispanic,Widowed,Fully Meets,4\\n3430,Michael,Riordan,21-Jun-21,,Area Sales Manager,Rebekah Wright,hmvvs8uu84eb@outlook.com,CCDR,Active,Contract,Zone A,Full-Time,Unk,,Sales,Finance & Accounting,04-04-1998,ND,Clerk,Male,58782,Other,Single,Fully Meets,2\\n3431,Jasmine,Onque,29-Jun-19,,Area Sales Manager,Jason Kim,sdksdwgi0j7@yahoo.com,TNS,Active,Contract,Zone A,Temporary,Unk,,Sales,General - Con,29-08-1969,FL,Laborer,Female,33174,Other,Married,Fully Meets,3\\n3427,Uriah,Bridges,20-Sep-19,,Production Technician I,Peter Oneill,v_yc89@yahoo.com,CCDR,Active,Contract,Zone C,Temporary,Unk,,Production       ,Finance & Accounting,07-10-1969,MA,Accounting,Female,34904,White,Widowed,Fully Meets,4\\n3428,Paula,Small,11-Feb-23,,Production Technician I,Renee Mccormick,0eo5_g@icloud.com,EW,Active,Contract,Zone A,Part-Time,Unk,,Production       ,Aerial,30-08-1965,MA,Labor,Male,6593,Hispanic,Widowed,Fully Meets,3\\n</dataframe>\\n\\n<conversation>\\nUser: Analyze whether the employee performance has a relation to the frequency of termination.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-16:22:23:58,172 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-16:22:24:20,803 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:24:20,807 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=22754 request_id=afb9855542b6d97bc6f2ad471bf14d7a response_code=200
2023-11-16:22:24:20,824 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    # Prepare: Preprocessing and cleaning data if necessary
    df = dfs[0]
    df['TerminationType'] = df['TerminationType'].fillna('Active')
    
    # Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    termination_performance = df.groupby(['TerminationType', 'Performance Score']).size().reset_index(name='Frequency')
    
    # Analyze: Conducting the actual analysis
    plt.figure(figsize=(10,6))
    sns.barplot(x='TerminationType', y='Frequency', hue='Performance Score', data=termination_performance)
    plt.title('Employee Performance vs Termination Frequency')
    plt.xlabel('Termination Type')
    plt.ylabel('Frequency')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.savefig('temp_chart.png')
    
    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-16:22:24:20,835 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0]
    df['TerminationType'] = df['TerminationType'].fillna('Active')
    termination_performance = df.groupby(['TerminationType', 'Performance Score']).size().reset_index(name='Frequency')
    plt.figure(figsize=(10, 6))
    sns.barplot(x='TerminationType', y='Frequency', hue='Performance Score', data=termination_performance)
    plt.title('Employee Performance vs Termination Frequency')
    plt.xlabel('Termination Type')
    plt.ylabel('Frequency')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-16:22:24:20,842 WARNING  [logger.py:75] Failed to execute code with a correction framework [retry number: 1]
2023-11-16:22:24:20,846 ERROR    [logger.py:77] Failed with error: Traceback (most recent call last):
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/optional.py", line 92, in import_dependency
    module = importlib.import_module(name)
  File "/usr/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1004, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'seaborn'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/smart_datalake/__init__.py", line 394, in chat
    result = self._code_manager.execute_code(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py", line 255, in execute_code
    environment: dict = self._get_environment()
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py", line 330, in _get_environment
    **{
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py", line 332, in <dictcomp>
    if hasattr(import_dependency(lib["module"]), lib["name"])
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/optional.py", line 95, in import_dependency
    raise ImportError(msg) from exc
ImportError: Missing optional dependency 'seaborn'.  Use pip or conda to install seaborn.
. Retrying
2023-11-16:22:24:20,850 INFO     [logger.py:73] Using prompt: 
You are provided with the following pandas DataFrames with the following metadata:

<dataframe>
Dataframe dfs[0], with 3000 rows and 26 columns.
This is the metadata of the dataframe dfs[0]:
EmpID,FirstName,LastName,StartDate,ExitDate,Title,Supervisor,ADEmail,BusinessUnit,EmployeeStatus,EmployeeType,PayZone,EmployeeClassificationType,TerminationType,TerminationDescription,DepartmentType,Division,DOB,State,JobFunctionDescription,GenderCode,LocationCode,RaceDesc,MaritalDesc,Performance Score,Current Employee Rating
3429,Edward,Buck,10-Dec-18,,Area Sales Manager,Crystal Walker,6498ejsnlovp@gmail.com,PL,Active,Full-Time,Zone B,Part-Time,Unk,,Sales,General - Sga,06-10-1991,MA,Assistant,Male,2330,Hispanic,Widowed,Fully Meets,4
3430,Michael,Riordan,21-Jun-21,,Area Sales Manager,Rebekah Wright,hmvvs8uu84eb@outlook.com,CCDR,Active,Contract,Zone A,Full-Time,Unk,,Sales,Finance & Accounting,04-04-1998,ND,Clerk,Male,58782,Other,Single,Fully Meets,2
3431,Jasmine,Onque,29-Jun-19,,Area Sales Manager,Jason Kim,sdksdwgi0j7@yahoo.com,TNS,Active,Contract,Zone A,Temporary,Unk,,Sales,General - Con,29-08-1969,FL,Laborer,Female,33174,Other,Married,Fully Meets,3
3427,Uriah,Bridges,20-Sep-19,,Production Technician I,Peter Oneill,v_yc89@yahoo.com,CCDR,Active,Contract,Zone C,Temporary,Unk,,Production       ,Finance & Accounting,07-10-1969,MA,Accounting,Female,34904,White,Widowed,Fully Meets,4
3428,Paula,Small,11-Feb-23,,Production Technician I,Renee Mccormick,0eo5_g@icloud.com,EW,Active,Contract,Zone A,Part-Time,Unk,,Production       ,Aerial,30-08-1965,MA,Labor,Male,6593,Hispanic,Widowed,Fully Meets,3
</dataframe>

The user asked the following question:
User: Analyze whether the employee performance has a relation to the frequency of termination.

You generated this python code:
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    # Prepare: Preprocessing and cleaning data if necessary
    df = dfs[0]
    df['TerminationType'] = df['TerminationType'].fillna('Active')
    
    # Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    termination_performance = df.groupby(['TerminationType', 'Performance Score']).size().reset_index(name='Frequency')
    
    # Analyze: Conducting the actual analysis
    plt.figure(figsize=(10,6))
    sns.barplot(x='TerminationType', y='Frequency', hue='Performance Score', data=termination_performance)
    plt.title('Employee Performance vs Termination Frequency')
    plt.xlabel('Termination Type')
    plt.ylabel('Frequency')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.savefig('temp_chart.png')
    
    return { "type": "plot", "value": "temp_chart.png" }

It fails with the following error:
Traceback (most recent call last):
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/optional.py", line 92, in import_dependency
    module = importlib.import_module(name)
  File "/usr/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1004, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'seaborn'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/smart_datalake/__init__.py", line 394, in chat
    result = self._code_manager.execute_code(
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py", line 255, in execute_code
    environment: dict = self._get_environment()
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py", line 330, in _get_environment
    **{
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py", line 332, in <dictcomp>
    if hasattr(import_dependency(lib["module"]), lib["name"])
  File "/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/optional.py", line 95, in import_dependency
    raise ImportError(msg) from exc
ImportError: Missing optional dependency 'seaborn'.  Use pip or conda to install seaborn.


Correct the python code and return a new python code that fixes the above mentioned error. Do not generate the same code again.

2023-11-16:22:24:20,852 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-16:22:24:20,853 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "\\nYou are provided with the following pandas DataFrames with the following metadata:\\n\\n<dataframe>\\nDataframe dfs[0], with 3000 rows and 26 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nEmpID,FirstName,LastName,StartDate,ExitDate,Title,Supervisor,ADEmail,BusinessUnit,EmployeeStatus,EmployeeType,PayZone,EmployeeClassificationType,TerminationType,TerminationDescription,DepartmentType,Division,DOB,State,JobFunctionDescription,GenderCode,LocationCode,RaceDesc,MaritalDesc,Performance Score,Current Employee Rating\\n3429,Edward,Buck,10-Dec-18,,Area Sales Manager,Crystal Walker,6498ejsnlovp@gmail.com,PL,Active,Full-Time,Zone B,Part-Time,Unk,,Sales,General - Sga,06-10-1991,MA,Assistant,Male,2330,Hispanic,Widowed,Fully Meets,4\\n3430,Michael,Riordan,21-Jun-21,,Area Sales Manager,Rebekah Wright,hmvvs8uu84eb@outlook.com,CCDR,Active,Contract,Zone A,Full-Time,Unk,,Sales,Finance & Accounting,04-04-1998,ND,Clerk,Male,58782,Other,Single,Fully Meets,2\\n3431,Jasmine,Onque,29-Jun-19,,Area Sales Manager,Jason Kim,sdksdwgi0j7@yahoo.com,TNS,Active,Contract,Zone A,Temporary,Unk,,Sales,General - Con,29-08-1969,FL,Laborer,Female,33174,Other,Married,Fully Meets,3\\n3427,Uriah,Bridges,20-Sep-19,,Production Technician I,Peter Oneill,v_yc89@yahoo.com,CCDR,Active,Contract,Zone C,Temporary,Unk,,Production       ,Finance & Accounting,07-10-1969,MA,Accounting,Female,34904,White,Widowed,Fully Meets,4\\n3428,Paula,Small,11-Feb-23,,Production Technician I,Renee Mccormick,0eo5_g@icloud.com,EW,Active,Contract,Zone A,Part-Time,Unk,,Production       ,Aerial,30-08-1965,MA,Labor,Male,6593,Hispanic,Widowed,Fully Meets,3\\n</dataframe>\\n\\nThe user asked the following question:\\nUser: Analyze whether the employee performance has a relation to the frequency of termination.\\n\\nYou generated this python code:\\nimport pandas as pd\\nimport matplotlib.pyplot as plt\\nimport seaborn as sns\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n    # Prepare: Preprocessing and cleaning data if necessary\\n    df = dfs[0]\\n    df[\'TerminationType\'] = df[\'TerminationType\'].fillna(\'Active\')\\n    \\n    # Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    termination_performance = df.groupby([\'TerminationType\', \'Performance Score\']).size().reset_index(name=\'Frequency\')\\n    \\n    # Analyze: Conducting the actual analysis\\n    plt.figure(figsize=(10,6))\\n    sns.barplot(x=\'TerminationType\', y=\'Frequency\', hue=\'Performance Score\', data=termination_performance)\\n    plt.title(\'Employee Performance vs Termination Frequency\')\\n    plt.xlabel(\'Termination Type\')\\n    plt.ylabel(\'Frequency\')\\n    plt.xticks(rotation=45)\\n    plt.tight_layout()\\n    plt.savefig(\'temp_chart.png\')\\n    \\n    return { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n\\nIt fails with the following error:\\nTraceback (most recent call last):\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/optional.py\\", line 92, in import_dependency\\n    module = importlib.import_module(name)\\n  File \\"/usr/lib/python3.10/importlib/__init__.py\\", line 126, in import_module\\n    return _bootstrap._gcd_import(name[level:], package, level)\\n  File \\"<frozen importlib._bootstrap>\\", line 1050, in _gcd_import\\n  File \\"<frozen importlib._bootstrap>\\", line 1027, in _find_and_load\\n  File \\"<frozen importlib._bootstrap>\\", line 1004, in _find_and_load_unlocked\\nModuleNotFoundError: No module named \'seaborn\'\\n\\nThe above exception was the direct cause of the following exception:\\n\\nTraceback (most recent call last):\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/smart_datalake/__init__.py\\", line 394, in chat\\n    result = self._code_manager.execute_code(\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py\\", line 255, in execute_code\\n    environment: dict = self._get_environment()\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py\\", line 330, in _get_environment\\n    **{\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/code_manager.py\\", line 332, in <dictcomp>\\n    if hasattr(import_dependency(lib[\\"module\\"]), lib[\\"name\\"])\\n  File \\"/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/pandasai/helpers/optional.py\\", line 95, in import_dependency\\n    raise ImportError(msg) from exc\\nImportError: Missing optional dependency \'seaborn\'.  Use pip or conda to install seaborn.\\n\\n\\nCorrect the python code and return a new python code that fixes the above mentioned error. Do not generate the same code again.\\n"}]}' message='Post details'
2023-11-16:22:24:48,555 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-16:22:24:48,557 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=27281 request_id=5410f18041cf1d0022654eda9f4eebc9 response_code=200
2023-11-16:22:24:48,570 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0]
    df['TerminationType'] = df['TerminationType'].fillna('Active')
    termination_performance = df.groupby(['TerminationType', 'Performance Score']).size().reset_index(name='Frequency')
    termination_types = termination_performance['TerminationType'].unique()
    performance_scores = termination_performance['Performance Score'].unique()
    for score in performance_scores:
        frequencies = termination_performance[termination_performance['Performance Score'] == score]['Frequency']
        plt.bar(termination_types, frequencies, label=score)
    plt.title('Employee Performance vs Termination Frequency')
    plt.xlabel('Termination Type')
    plt.ylabel('Frequency')
    plt.xticks(rotation=45)
    plt.legend(title='Performance Score')
    plt.tight_layout()
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-16:22:24:48,783 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:24:48,783 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:24:48,783 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:24:48,784 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:24:48,784 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-16:22:24:48,792 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:24:48,792 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:24:48,792 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:24:48,792 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:24:48,792 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-16:22:24:48,837 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:24:48,837 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:24:48,837 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:24:48,837 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:24:48,837 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-16:22:24:48,842 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:24:48,842 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:24:48,842 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:24:48,842 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:24:48,842 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-16:22:24:48,844 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:24:48,844 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:24:48,844 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:24:48,844 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:24:48,844 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-16:22:24:48,874 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:24:48,874 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:24:48,874 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:24:48,874 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:24:48,874 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-16:22:24:48,880 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:24:48,881 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:24:48,881 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:24:48,881 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:24:48,881 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-16:22:24:48,884 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:24:48,884 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:24:48,884 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:24:48,884 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:24:48,885 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-16:22:24:48,887 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:24:48,887 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-16:22:24:48,887 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-16:22:24:48,887 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-16:22:24:48,887 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-16:22:24:49,184 INFO     [logger.py:73] Answer: {'type': 'plot', 'value': 'temp_chart.png'}
2023-11-16:22:24:49,184 INFO     [logger.py:73] Executed in: 51.597484827041626s
2023-11-16:22:24:49,185 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-16:22:24:49,185 DEBUG    [PngImagePlugin.py:190] STREAM b'tEXt' 41 57
2023-11-16:22:24:49,185 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 110 9
2023-11-16:22:24:49,186 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 131 37574
2023-11-17:00:09:25,006 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-17:00:09:25,472 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:00:09:25,472 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Show the performance of the different ad spends in relation to the gender and sales. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:00:09:25,472 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:00:09:25,474 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:00:09:26,588 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:00:09:26,591 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=541 request_id=99257b6f255a788a84dd59f8f0dbf1a5 response_code=200
2023-11-17:00:09:26,608 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:00:09:28,897 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:00:09:28,910 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:00:09:29,268 DEBUG    [config.py:244] Starting component System
2023-11-17:00:09:29,269 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:00:09:29,269 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:00:09:29,269 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:00:09:29,269 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:00:09:29,304 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:00:09:29,304 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:00:09:29,712 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:00:09:29,812 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:00:09:30,121 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:00:09:30,464 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:00:09:30,464 INFO     [vector_search.py:103] Element: (1700092401406344, 'TV Ad Budget ($)') - Score: 0.6387732028961182
2023-11-17:00:09:30,464 INFO     [vector_search.py:103] Element: (1700092401406344, 'Newspaper Ad Budget ($)') - Score: 0.5881010293960571
2023-11-17:00:09:30,464 INFO     [vector_search.py:103] Element: (1700092401406344, 'Radio Ad Budget ($)') - Score: 0.5646078586578369
2023-11-17:00:09:30,464 INFO     [vector_search.py:103] Element: (1700092377314948, 'Revenue') - Score: 0.45662227272987366
2023-11-17:00:09:30,464 INFO     [vector_search.py:103] Element: (170009239686281, 'Revenue') - Score: 0.45662227272987366
2023-11-17:00:09:30,479 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:00:09:30,479 INFO     [vector_search.py:103] Element: (1700092401406344, 'gender') - Score: 1.0000001192092896
2023-11-17:00:09:30,479 INFO     [vector_search.py:103] Element: (1700092385555876, 'Gender') - Score: 1.0000001192092896
2023-11-17:00:09:30,479 INFO     [vector_search.py:103] Element: (1700092381859424, 'Gender') - Score: 1.0000001192092896
2023-11-17:00:09:30,479 INFO     [vector_search.py:103] Element: (1700092390869348, 'Gender') - Score: 1.0000001192092896
2023-11-17:00:09:30,479 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 1.0
2023-11-17:00:09:30,493 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:00:09:30,493 INFO     [vector_search.py:103] Element: (1700092401406344, 'Sales ($)') - Score: 0.8653542399406433
2023-11-17:00:09:30,493 INFO     [vector_search.py:103] Element: (1700092408519074, 'Total Sales') - Score: 0.7782794237136841
2023-11-17:00:09:30,493 INFO     [vector_search.py:103] Element: (1700092408519074, 'Sales Method') - Score: 0.7738610506057739
2023-11-17:00:09:30,493 INFO     [vector_search.py:103] Element: (1700092408519074, 'Retailer') - Score: 0.654481053352356
2023-11-17:00:09:30,493 INFO     [vector_search.py:103] Element: (1700092377314948, 'Revenue') - Score: 0.6518972516059875
2023-11-17:00:09:30,493 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-17:00:09:30,504 INFO     [prebuilt.py:537] 
   Unnamed: 0  TV Ad Budget ($)  Radio Ad Budget ($)  Newspaper Ad Budget ($)  \
0           1             230.1                 37.8                     69.2   
1           2              44.5                 39.3                     45.1   
2           3              17.2                 45.9                     69.3   

   Sales ($)  gender  
0       22.1  female  
1       10.4    male  
2        9.3    male  
2023-11-17:00:09:31,001 INFO     [logger.py:73] Question: Show the performance of the different ad spends in relation to the gender and sales.
2023-11-17:00:09:31,036 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:00:09:31,037 INFO     [logger.py:73] Prompt ID: 7700bf22-1f40-4824-8b7f-8c2e6252731f
2023-11-17:00:09:31,199 INFO     [logger.py:73] Using cached response
2023-11-17:00:09:31,204 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    
    # Assuming dfs[0] is the relevant dataframe
    df = dfs[0]
    
    # Group by gender and calculate the sum of ad spends and sales
    grouped_df = df.groupby('gender').sum()
    
    # Calculate the total ad spend for each gender
    grouped_df['Total Ad Spend ($)'] = grouped_df['TV Ad Budget ($)'] + grouped_df['Radio Ad Budget ($)'] + grouped_df['Newspaper Ad Budget ($)']
    
    # Calculate the sales per dollar spent for each gender
    grouped_df['Sales per Dollar Spent'] = grouped_df['Sales ($)'] / grouped_df['Total Ad Spend ($)']
    
    # Plotting the sales per dollar spent for each gender
    grouped_df['Sales per Dollar Spent'].plot(kind='bar', color=['blue', 'pink'])
    plt.xlabel('Gender')
    plt.ylabel('Sales per Dollar Spent')
    plt.title('Performance of Different Ad Spends in Relation to Gender and Sales')
    plt.savefig('temp_chart.png')
    
    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-17:00:09:31,217 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0]
    grouped_df = df.groupby('gender').sum()
    grouped_df['Total Ad Spend ($)'] = grouped_df['TV Ad Budget ($)'] + grouped_df['Radio Ad Budget ($)'] + grouped_df['Newspaper Ad Budget ($)']
    grouped_df['Sales per Dollar Spent'] = grouped_df['Sales ($)'] / grouped_df['Total Ad Spend ($)']
    grouped_df['Sales per Dollar Spent'].plot(kind='bar', color=['blue', 'pink'])
    plt.xlabel('Gender')
    plt.ylabel('Sales per Dollar Spent')
    plt.title('Performance of Different Ad Spends in Relation to Gender and Sales')
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-17:00:09:31,300 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:00:09:31,808 DEBUG    [__init__.py:337] matplotlib data path: /home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data
2023-11-17:00:09:31,836 DEBUG    [__init__.py:337] CONFIGDIR=/home/stella/.config/matplotlib
2023-11-17:00:09:31,845 DEBUG    [__init__.py:1498] interactive is False
2023-11-17:00:09:31,846 DEBUG    [__init__.py:1499] platform is linux
2023-11-17:00:09:32,085 DEBUG    [__init__.py:337] CACHEDIR=/home/stella/.cache/matplotlib
2023-11-17:00:09:32,087 DEBUG    [font_manager.py:1574] Using fontManager instance from /home/stella/.cache/matplotlib/fontlist-v330.json
2023-11-17:00:09:32,338 DEBUG    [pyplot.py:414] Loaded backend tkagg version 8.6.
2023-11-17:00:09:32,555 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:00:09:32,555 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:00:09:32,555 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:00:09:32,555 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:00:09:32,555 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:00:09:32,560 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:00:09:32,560 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:00:09:32,560 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:00:09:32,560 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:00:09:32,560 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:00:09:32,777 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:00:09:32,778 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:00:09:32,778 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:00:09:32,778 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:00:09:32,778 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:00:09:32,788 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:00:09:32,789 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:00:09:32,789 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:00:09:32,789 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:00:09:32,789 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:00:09:32,793 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:00:09:32,793 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:00:09:32,794 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:00:09:32,794 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:00:09:32,794 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:00:09:32,800 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:00:09:32,801 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:00:09:32,801 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:00:09:32,802 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:00:09:32,802 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:00:09:32,806 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:00:09:32,806 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:00:09:32,807 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:00:09:32,807 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:00:09:32,807 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:00:09:32,811 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:00:09:32,811 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:00:09:32,811 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:00:09:32,811 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:00:09:32,811 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:00:09:32,814 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:00:09:32,815 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:00:09:32,815 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:00:09:32,815 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:00:09:32,815 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:00:09:32,824 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,825 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,826 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,827 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,828 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,829 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,830 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,831 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:00:09:32,832 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,833 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,834 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,835 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,836 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,837 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,838 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,839 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,840 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:00:09:32,917 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,918 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:00:09:32,919 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,920 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,921 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,922 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,923 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:00:09:32,924 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:00:09:32,998 INFO     [logger.py:73] Answer: {'type': 'plot', 'value': 'temp_chart.png'}
2023-11-17:00:09:32,999 INFO     [logger.py:73] Executed in: 1.99790620803833s
2023-11-17:00:09:32,999 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:00:09:32,999 DEBUG    [PngImagePlugin.py:190] STREAM b'tEXt' 41 57
2023-11-17:00:09:32,999 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 110 9
2023-11-17:00:09:32,999 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 131 23142
2023-11-17:11:04:46,537 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-17:11:04:46,726 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:04:46,726 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Categorize different marketing campaigns. Show me the distribution of the marketing costs. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:11:04:46,726 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:11:04:46,728 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:11:04:47,746 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:04:47,749 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=436 request_id=d05d8e12378b8b085aff2699c8a15217 response_code=200
2023-11-17:11:04:47,762 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:11:04:49,152 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:11:04:49,163 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:11:04:49,610 DEBUG    [config.py:244] Starting component System
2023-11-17:11:04:49,610 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:11:04:49,610 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:11:04:49,610 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:11:04:49,610 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:11:04:49,620 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:11:04:49,621 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:11:04:50,125 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:11:04:50,129 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:11:04:50,375 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:04:50,852 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:04:50,852 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.8252756595611572
2023-11-17:11:04:50,852 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Cost') - Score: 0.5490508079528809
2023-11-17:11:04:50,852 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Influence') - Score: 0.5224956274032593
2023-11-17:11:04:50,852 INFO     [vector_search.py:103] Element: (170009239686281, 'Target Revenue') - Score: 0.44196632504463196
2023-11-17:11:04:50,852 INFO     [vector_search.py:103] Element: (1700092362344043, 'RaceDesc') - Score: 0.38117605447769165
2023-11-17:11:04:50,866 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:04:50,866 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Cost') - Score: 0.920361340045929
2023-11-17:11:04:50,866 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Influence') - Score: 0.537601113319397
2023-11-17:11:04:50,866 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.5268754363059998
2023-11-17:11:04:50,866 INFO     [vector_search.py:103] Element: (1700092353790055, 'Price Per Each') - Score: 0.48811736702919006
2023-11-17:11:04:50,866 INFO     [vector_search.py:103] Element: (1700092408519074, 'Price per Unit') - Score: 0.47878673672676086
2023-11-17:11:04:50,867 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-17:11:04:51,166 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:04:51,241 INFO     [prebuilt.py:537] 
        Date Months    Revenue  Target Revenue     Leads  \
0 2018-01-01    Jan  8304345.0         8492400  8304.345   
1 2018-02-01    Feb  7856000.0         8492400  7856.000   
2 2018-03-01    Mar  7933500.0         8492400  7933.500   

                                 Marketing Campaigns  Marketing Cost  \
0                      Massive discounts and Hampers       2200000.0   
1        Arranging Giveaways,Investing on Google ads       2015840.0   
2  Designing optimized and attractive landing pag...       2008800.0   

   Gross Profit  Gross Margin  Conversion Rate  Churn Rate         CAC  \
0     6104345.0      0.735078             0.07        0.07  264.921556   
1     5840160.0      0.743401             0.04        0.07  256.598778   
2     5924700.0      0.746795             0.08        0.02  253.204765   

   Marketing Influence  Customer Lifetime Value  Organic Reach Rate  \
0                 0.46                    59494               0.357   
1                 0.50                    68664               0.454   
2                 0.26                    78923               0.329   

   Unnamed: 15 Unnamed: 16  
0          NaN         NaN  
1          NaN         NaN  
2          NaN         NaN  
2023-11-17:11:04:51,438 INFO     [logger.py:73] Question: Categorize different marketing campaigns. Show me the distribution of the marketing costs.
2023-11-17:11:04:51,443 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:11:04:51,444 INFO     [logger.py:73] Prompt ID: 0ac8aeb5-5fdc-4531-8c15-59b277e632e9
2023-11-17:11:04:51,482 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 36 rows and 17 columns.
This is the metadata of the dataframe dfs[0]:
Date,Months,Revenue,Target Revenue,Leads,Marketing Campaigns,Marketing Cost,Gross Profit,Gross Margin,Conversion Rate,Churn Rate,CAC,Marketing Influence,Customer Lifetime Value,Organic Reach Rate,Unnamed: 15,Unnamed: 16
2018-02-01,Feb,7856000.0,8492400,7856.0,"Arranging Giveaways,In...",2015840.0,5840160.0,0.743401221995927,0.04,0.07,2094295220,0.5,68664,0.454,,
2018-01-01,Jan,8304345.0,8492400,8304.345,Massive discounts and ...,2200000.0,6104345.0,0.735078443874863,0.07,0.07,0619207392,0.46,59494,0.357,,
2018-04-01,Apr,9409500.0,8492400,9409.5,Designing engagement c...,2003520.0,7405980.0,0.787074764865296,0.05,0.03,3504922853,0.35,82310,0.471,,
2018-05-01,May,8856000.0,8492400,8856.0,Using influencer marke...,1173600.0,7682400.0,0.867479674796748,0.01,0.05,4596694548,0.72,72000,0.52,,
2018-03-01,Mar,7933500.0,8492400,7933.5,Designing optimized an...,2008800.0,5924700.0,0.746795235394214,0.08,0.02,7463916764,0.26,78923,0.329,,
</dataframe>

<conversation>
User: Categorize different marketing campaigns. Show me the distribution of the marketing costs.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-17:11:04:51,483 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:04:51,483 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 36 rows and 17 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nDate,Months,Revenue,Target Revenue,Leads,Marketing Campaigns,Marketing Cost,Gross Profit,Gross Margin,Conversion Rate,Churn Rate,CAC,Marketing Influence,Customer Lifetime Value,Organic Reach Rate,Unnamed: 15,Unnamed: 16\\n2018-02-01,Feb,7856000.0,8492400,7856.0,\\"Arranging Giveaways,In...\\",2015840.0,5840160.0,0.743401221995927,0.04,0.07,2094295220,0.5,68664,0.454,,\\n2018-01-01,Jan,8304345.0,8492400,8304.345,Massive discounts and ...,2200000.0,6104345.0,0.735078443874863,0.07,0.07,0619207392,0.46,59494,0.357,,\\n2018-04-01,Apr,9409500.0,8492400,9409.5,Designing engagement c...,2003520.0,7405980.0,0.787074764865296,0.05,0.03,3504922853,0.35,82310,0.471,,\\n2018-05-01,May,8856000.0,8492400,8856.0,Using influencer marke...,1173600.0,7682400.0,0.867479674796748,0.01,0.05,4596694548,0.72,72000,0.52,,\\n2018-03-01,Mar,7933500.0,8492400,7933.5,Designing optimized an...,2008800.0,5924700.0,0.746795235394214,0.08,0.02,7463916764,0.26,78923,0.329,,\\n</dataframe>\\n\\n<conversation>\\nUser: Categorize different marketing campaigns. Show me the distribution of the marketing costs.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-17:11:05:18,676 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:05:18,679 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=26787 request_id=b8e45b1b27b013e43c51db3cbc142b99 response_code=200
2023-11-17:11:05:18,698 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    
    # Preprocessing and cleaning data
    df = dfs[0]
    df['Marketing Campaigns'] = df['Marketing Campaigns'].astype(str)
    df['Marketing Cost'] = df['Marketing Cost'].astype(float)

    # Grouping by Marketing Campaigns and calculating the sum of Marketing Cost
    grouped_df = df.groupby('Marketing Campaigns')['Marketing Cost'].sum().reset_index()

    # Plotting the distribution of the marketing costs
    plt.figure(figsize=(10,6))
    plt.barh(grouped_df['Marketing Campaigns'], grouped_df['Marketing Cost'], color='skyblue')
    plt.xlabel('Marketing Cost')
    plt.ylabel('Marketing Campaigns')
    plt.title('Distribution of Marketing Costs by Campaign')
    plt.savefig('temp_chart.png')

    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-17:11:05:18,710 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0]
    df['Marketing Campaigns'] = df['Marketing Campaigns'].astype(str)
    df['Marketing Cost'] = df['Marketing Cost'].astype(float)
    grouped_df = df.groupby('Marketing Campaigns')['Marketing Cost'].sum().reset_index()
    plt.figure(figsize=(10, 6))
    plt.barh(grouped_df['Marketing Campaigns'], grouped_df['Marketing Cost'], color='skyblue')
    plt.xlabel('Marketing Cost')
    plt.ylabel('Marketing Campaigns')
    plt.title('Distribution of Marketing Costs by Campaign')
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-17:11:05:18,818 DEBUG    [__init__.py:337] matplotlib data path: /home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data
2023-11-17:11:05:18,823 DEBUG    [__init__.py:337] CONFIGDIR=/home/stella/.config/matplotlib
2023-11-17:11:05:18,824 DEBUG    [__init__.py:1498] interactive is False
2023-11-17:11:05:18,824 DEBUG    [__init__.py:1499] platform is linux
2023-11-17:11:05:18,875 DEBUG    [__init__.py:337] CACHEDIR=/home/stella/.cache/matplotlib
2023-11-17:11:05:18,877 DEBUG    [font_manager.py:1574] Using fontManager instance from /home/stella/.cache/matplotlib/fontlist-v330.json
2023-11-17:11:05:19,185 DEBUG    [pyplot.py:414] Loaded backend tkagg version 8.6.
2023-11-17:11:05:19,445 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,445 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,446 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,446 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,446 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:05:19,451 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,451 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,451 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,452 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,452 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:05:19,528 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,529 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,529 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,529 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,529 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:05:19,541 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,542 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,542 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,542 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,542 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:05:19,548 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,548 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,549 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,549 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,549 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:05:19,557 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,557 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,557 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,557 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,558 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:05:19,560 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,560 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,560 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,560 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,560 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:05:19,563 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,563 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,563 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,563 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,563 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:05:19,569 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,570 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,570 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,570 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,570 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:05:19,590 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-11-17:11:05:19,590 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,591 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,591 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,591 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,591 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,591 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,591 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:05:19,592 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:05:19,592 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,592 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,592 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,592 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,592 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,593 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,593 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,593 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,593 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,593 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,593 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,593 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:05:19,593 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,593 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,594 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,594 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:05:19,594 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,594 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,594 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,594 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,594 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,594 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,595 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,595 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,595 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,595 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,595 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,595 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,595 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,595 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,596 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,596 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,596 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,596 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,596 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:05:19,596 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,596 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,597 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,597 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,597 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,597 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,597 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,597 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,598 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,599 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,599 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,599 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,599 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:05:19,599 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,600 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,600 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,600 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,600 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,600 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,600 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,600 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:05:19,600 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,601 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,601 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,601 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,601 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,601 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,602 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,602 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,602 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:05:19,602 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,602 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,602 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,602 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,603 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,603 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,603 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,603 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,603 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,603 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,603 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,604 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,604 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,604 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,604 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,604 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,604 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:05:19,604 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,605 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,605 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,605 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:05:19,605 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,605 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,605 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,605 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,605 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,605 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,606 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,606 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,606 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,606 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,606 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,607 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,607 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,607 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,607 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,607 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,607 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,607 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,607 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,607 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,608 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,608 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,608 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,608 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,608 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,608 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,608 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,608 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,609 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,609 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:05:19,609 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,609 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,609 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,609 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,609 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,609 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,610 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,610 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,610 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,610 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:05:19,610 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,610 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,610 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,610 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,611 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,611 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,611 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,611 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,611 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,611 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,611 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,611 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,612 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,612 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,612 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,612 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:05:19,612 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,612 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,613 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,613 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,613 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,613 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,613 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,613 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:05:19,613 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:05:19,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:05:19,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:05:19,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:05:19,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:05:19,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:05:19,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:05:19,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:05:19,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:05:19,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:05:19,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:05:19,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:05:19,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:05:19,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:05:19,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,633 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:05:19,633 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,633 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,633 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,633 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,633 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,633 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,633 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,633 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,633 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,755 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,756 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,757 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,758 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,759 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,760 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,761 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,762 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,763 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,764 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,765 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,766 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,767 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,768 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,769 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:05:19,770 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,771 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,771 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:05:19,771 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:05:19,869 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,869 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,869 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,869 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,869 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:05:19,873 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,873 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,873 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,874 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,874 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:05:19,881 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,881 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,881 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,881 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,881 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:05:19,884 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,884 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,884 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,884 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,884 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:05:19,886 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,886 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,886 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,886 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,886 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:05:19,887 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,887 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,887 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,887 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,888 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:05:19,889 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,889 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,889 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,889 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,889 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:05:19,890 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,891 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,891 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,891 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,891 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:05:19,892 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:19,892 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:05:19,892 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:05:19,892 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:05:19,892 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:05:20,092 INFO     [logger.py:73] Answer: {'type': 'plot', 'value': 'temp_chart.png'}
2023-11-17:11:05:20,093 INFO     [logger.py:73] Executed in: 28.654740810394287s
2023-11-17:11:05:20,095 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:05:20,096 DEBUG    [PngImagePlugin.py:190] STREAM b'tEXt' 41 57
2023-11-17:11:05:20,096 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 110 9
2023-11-17:11:05:20,096 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 131 41271
2023-11-17:11:14:05,881 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-17:11:14:06,059 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:14:06,059 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Categorize different marketing campaigns. Show me the distribution of the marketing costs. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:11:14:06,060 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:11:14:06,065 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:11:14:07,070 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:14:07,082 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=511 request_id=7eac79c5f88d21b4eb283d66c8211203 response_code=200
2023-11-17:11:14:07,104 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:11:14:08,196 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:11:14:08,214 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:11:14:09,197 DEBUG    [config.py:244] Starting component System
2023-11-17:11:14:09,197 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:11:14:09,197 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:11:14:09,197 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:11:14:09,198 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:11:14:09,209 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:11:14:09,210 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:11:14:09,719 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:11:14:10,043 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:14:10,937 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:11:14:11,177 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:14:12,456 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:14:12,456 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.8252756595611572
2023-11-17:11:14:12,456 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Cost') - Score: 0.5490508079528809
2023-11-17:11:14:12,456 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Influence') - Score: 0.5224956274032593
2023-11-17:11:14:12,456 INFO     [vector_search.py:103] Element: (170009239686281, 'Target Revenue') - Score: 0.44196632504463196
2023-11-17:11:14:12,457 INFO     [vector_search.py:103] Element: (1700092362344043, 'RaceDesc') - Score: 0.38117605447769165
2023-11-17:11:14:12,489 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:14:12,489 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Cost') - Score: 0.920361340045929
2023-11-17:11:14:12,489 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Influence') - Score: 0.537601113319397
2023-11-17:11:14:12,489 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.5268754363059998
2023-11-17:11:14:12,489 INFO     [vector_search.py:103] Element: (1700092353790055, 'Price Per Each') - Score: 0.48811736702919006
2023-11-17:11:14:12,490 INFO     [vector_search.py:103] Element: (1700092408519074, 'Price per Unit') - Score: 0.47878673672676086
2023-11-17:11:14:12,490 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-17:11:14:12,928 INFO     [prebuilt.py:537] 
        Date Months    Revenue  Target Revenue     Leads  \
0 2018-01-01    Jan  8304345.0         8492400  8304.345   
1 2018-02-01    Feb  7856000.0         8492400  7856.000   
2 2018-03-01    Mar  7933500.0         8492400  7933.500   

                                 Marketing Campaigns  Marketing Cost  \
0                      Massive discounts and Hampers       2200000.0   
1        Arranging Giveaways,Investing on Google ads       2015840.0   
2  Designing optimized and attractive landing pag...       2008800.0   

   Gross Profit  Gross Margin  Conversion Rate  Churn Rate         CAC  \
0     6104345.0      0.735078             0.07        0.07  264.921556   
1     5840160.0      0.743401             0.04        0.07  256.598778   
2     5924700.0      0.746795             0.08        0.02  253.204765   

   Marketing Influence  Customer Lifetime Value  Organic Reach Rate  \
0                 0.46                    59494               0.357   
1                 0.50                    68664               0.454   
2                 0.26                    78923               0.329   

   Unnamed: 15 Unnamed: 16  
0          NaN         NaN  
1          NaN         NaN  
2          NaN         NaN  
2023-11-17:11:14:13,090 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:14:13,096 INFO     [logger.py:73] Question: Categorize different marketing campaigns. Show me the distribution of the marketing costs.
2023-11-17:11:14:13,102 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:11:14:13,106 INFO     [logger.py:73] Prompt ID: bd71eb18-7929-4c17-9471-7ea7150ea770
2023-11-17:11:14:13,234 INFO     [logger.py:73] Using cached response
2023-11-17:11:14:13,238 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    
    # Preprocessing and cleaning data
    df = dfs[0]
    df['Marketing Campaigns'] = df['Marketing Campaigns'].astype(str)
    df['Marketing Cost'] = df['Marketing Cost'].astype(float)

    # Grouping by Marketing Campaigns and calculating the sum of Marketing Cost
    grouped_df = df.groupby('Marketing Campaigns')['Marketing Cost'].sum().reset_index()

    # Plotting the distribution of the marketing costs
    plt.figure(figsize=(10,6))
    plt.barh(grouped_df['Marketing Campaigns'], grouped_df['Marketing Cost'], color='skyblue')
    plt.xlabel('Marketing Cost')
    plt.ylabel('Marketing Campaigns')
    plt.title('Distribution of Marketing Costs by Campaign')
    plt.savefig('temp_chart.png')

    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-17:11:14:13,249 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0]
    df['Marketing Campaigns'] = df['Marketing Campaigns'].astype(str)
    df['Marketing Cost'] = df['Marketing Cost'].astype(float)
    grouped_df = df.groupby('Marketing Campaigns')['Marketing Cost'].sum().reset_index()
    plt.figure(figsize=(10, 6))
    plt.barh(grouped_df['Marketing Campaigns'], grouped_df['Marketing Cost'], color='skyblue')
    plt.xlabel('Marketing Cost')
    plt.ylabel('Marketing Campaigns')
    plt.title('Distribution of Marketing Costs by Campaign')
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-17:11:14:13,367 DEBUG    [__init__.py:337] matplotlib data path: /home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data
2023-11-17:11:14:13,385 DEBUG    [__init__.py:337] CONFIGDIR=/home/stella/.config/matplotlib
2023-11-17:11:14:13,394 DEBUG    [__init__.py:1498] interactive is False
2023-11-17:11:14:13,394 DEBUG    [__init__.py:1499] platform is linux
2023-11-17:11:14:13,547 DEBUG    [__init__.py:337] CACHEDIR=/home/stella/.cache/matplotlib
2023-11-17:11:14:13,552 DEBUG    [font_manager.py:1574] Using fontManager instance from /home/stella/.cache/matplotlib/fontlist-v330.json
2023-11-17:11:14:14,360 DEBUG    [pyplot.py:414] Loaded backend tkagg version 8.6.
2023-11-17:11:14:14,601 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:14,601 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:14,601 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:14,601 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:14,601 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:14:14,606 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:14,606 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:14,606 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:14,606 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:14,606 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:14:14,682 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:14,682 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:14,682 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:14,682 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:14,682 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:14:14,684 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:14,684 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:14,685 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:14,685 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:14,685 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:14:14,687 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:14,688 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:14,688 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:14,688 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:14,688 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:14:14,690 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:14,690 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:14,691 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:14,691 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:14,691 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:14:14,692 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:14,692 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:14,693 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:14,693 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:14,693 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:14:14,694 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:14,695 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:14,695 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:14,695 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:14,695 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:14:14,697 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:14,697 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:14,697 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:14,697 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:14,697 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:14:14,707 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-11-17:11:14:14,708 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,708 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,708 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,708 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,708 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,708 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,709 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:14:14,709 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:14:14,709 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,709 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,709 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,709 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,709 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,709 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,709 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,710 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,710 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,710 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,710 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,710 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:14:14,710 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,710 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,710 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,711 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:14:14,711 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,711 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,711 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,711 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,711 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,711 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,711 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,712 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,712 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,712 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,712 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,712 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,712 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,712 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,712 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,712 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,713 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,713 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,713 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:14:14,713 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,713 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,713 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,713 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,713 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,714 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,714 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,714 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,714 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,714 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,714 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,714 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,715 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:14:14,715 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,715 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,715 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,715 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,715 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,715 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,715 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,716 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:14:14,716 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,716 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,716 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,716 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,716 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,716 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,717 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,717 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,717 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:14:14,717 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,717 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,717 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,717 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,717 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,717 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,718 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,718 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,718 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,718 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,718 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,718 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,718 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,719 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,719 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,719 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,719 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:14:14,719 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,719 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,719 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,719 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:14:14,720 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,720 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,720 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,720 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,720 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,720 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,720 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,721 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,721 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,721 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,721 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,721 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,721 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,721 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,721 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,722 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,722 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,722 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,722 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,722 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,722 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,722 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,723 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,723 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,723 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,723 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,723 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,723 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,723 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,723 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:14:14,723 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,724 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,724 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,724 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,724 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,724 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,724 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,724 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,724 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,725 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:14:14,725 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,725 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,725 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,725 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,725 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,725 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,725 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,726 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,726 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,726 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,726 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,726 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,726 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,726 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,727 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,727 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:14:14,727 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,727 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,727 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,727 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,727 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,727 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,728 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,728 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:14:14,728 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,728 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,728 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,728 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,728 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,728 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,729 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,729 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,729 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,729 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,729 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,729 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,729 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,729 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:14:14,730 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,730 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,730 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,730 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,730 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,730 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:14:14,730 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,731 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,731 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,731 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,731 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,731 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,731 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:14:14,731 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,731 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,731 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,732 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,732 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,732 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,732 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,732 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,732 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,732 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,732 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,733 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:14:14,733 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,733 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,733 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,733 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,733 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,733 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,734 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,734 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,734 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,734 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,734 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,734 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,735 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,735 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,735 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,735 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,735 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,735 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,735 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:14:14,735 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,736 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,736 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,736 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,736 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:14:14,736 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,736 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:14:14,736 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,737 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:14:14,737 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,737 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:14:14,737 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,737 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,737 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,737 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,737 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,738 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,738 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,738 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,738 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,738 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,738 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,738 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,738 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:14:14,739 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,739 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,739 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,739 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,739 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,739 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:14:14,739 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,739 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,740 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,740 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,740 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,740 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,740 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:14:14,740 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,740 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:14:14,740 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,741 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,741 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,741 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,741 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,741 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,741 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,741 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,742 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,742 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,742 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,742 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,742 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,742 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,742 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,742 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,743 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,743 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:14:14,743 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,743 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,743 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,743 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,743 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,744 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,744 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,744 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,744 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,744 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,744 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,744 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:14:14,744 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,745 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,745 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,745 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,745 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,745 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,745 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,745 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,746 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:14:14,924 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-11-17:11:14:14,925 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,925 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,925 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,925 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,925 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,925 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,926 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:14:14,926 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:14:14,926 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,926 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,926 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,926 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,926 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,926 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,927 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,927 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,927 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,927 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,927 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,927 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:14:14,927 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,927 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,928 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,928 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:14:14,928 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,928 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,928 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,928 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,929 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,929 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,929 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,929 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,929 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,929 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,929 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,929 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,930 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,930 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,930 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,930 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,930 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,930 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,930 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:14:14,931 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,931 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,931 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,931 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,931 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,931 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,931 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,931 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,932 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,932 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,932 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,932 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,932 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:14:14,932 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,932 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,932 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,933 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,933 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,933 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,933 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,933 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:14:14,933 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,933 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,933 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,934 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,934 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,934 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,934 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,934 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,934 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:14:14,935 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,935 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,935 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,935 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,935 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,935 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,936 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,936 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,936 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,936 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,936 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,936 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,936 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,936 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,937 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,937 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,937 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:14:14,937 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,937 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,937 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,937 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:14:14,937 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,938 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,938 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,938 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,938 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,938 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,938 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,938 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,938 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,939 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,939 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,939 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,939 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,939 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,939 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,939 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,939 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,939 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,940 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,940 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,940 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,940 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,940 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,940 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,940 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,940 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,941 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,941 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,941 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,941 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:14:14,941 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,941 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,942 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,942 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,942 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,942 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,942 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,942 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,942 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,943 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:14:14,943 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,943 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,943 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,943 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,943 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,943 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,943 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,944 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,944 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,944 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,944 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,944 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,944 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,944 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,944 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,945 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:14:14,945 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,945 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,945 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,945 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,945 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,945 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,946 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,946 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:14:14,946 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,946 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,946 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,946 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,946 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,946 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,947 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,947 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,947 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,947 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,947 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,947 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,947 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,947 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:14:14,948 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,948 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,948 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,948 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,948 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,948 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:14:14,948 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,949 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,949 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,949 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,949 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,949 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,949 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:14:14,949 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,950 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,950 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,950 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,950 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,950 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,950 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,950 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,951 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,951 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,951 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,951 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:14:14,951 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,951 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,952 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,952 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,952 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,952 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,952 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,952 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,952 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,952 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,953 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,953 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,953 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,953 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,953 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,953 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,953 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,954 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,954 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:14:14,954 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,954 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,954 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,954 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,954 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:14:14,954 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,955 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:14:14,955 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,955 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:14:14,955 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,955 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:14:14,955 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,955 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,956 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,956 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,956 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,956 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,956 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,956 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,956 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,957 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,957 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,957 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,957 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:14:14,957 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,957 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,957 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,957 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,958 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,958 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:14:14,958 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,958 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,958 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,958 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,958 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,959 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,959 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:14:14,959 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,959 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:14:14,959 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,959 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,959 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,959 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,960 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,960 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,960 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,960 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,960 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,960 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,960 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,960 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,961 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,961 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,961 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,961 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,961 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,961 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:14:14,962 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:14:14,962 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,962 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,962 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,962 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,962 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,963 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,963 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,963 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,963 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,963 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,963 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:14:14,963 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,963 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,964 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:14:14,964 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:14:14,964 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:14:14,964 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,964 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,964 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:14:14,964 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:14:15,114 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:15,114 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:15,114 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:15,114 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:15,114 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:14:15,117 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:15,117 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:15,117 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:15,118 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:15,118 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:14:15,123 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:15,124 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:15,124 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:15,124 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:15,124 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:14:15,126 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:15,127 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:15,127 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:15,127 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:15,127 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:14:15,129 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:15,130 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:15,130 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:15,130 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:15,130 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:14:15,131 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:15,131 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:15,132 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:15,132 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:15,132 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:14:15,133 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:15,133 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:15,134 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:15,134 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:15,134 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:14:15,136 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:15,136 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:15,136 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:15,136 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:15,136 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:14:15,138 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:15,138 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:14:15,139 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:14:15,139 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:14:15,139 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:14:15,486 INFO     [logger.py:73] Answer: {'type': 'plot', 'value': 'temp_chart.png'}
2023-11-17:11:14:15,491 INFO     [logger.py:73] Executed in: 2.394855260848999s
2023-11-17:11:14:15,493 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:14:15,493 DEBUG    [PngImagePlugin.py:190] STREAM b'tEXt' 41 57
2023-11-17:11:14:15,494 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 110 9
2023-11-17:11:14:15,494 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 131 41271
2023-11-17:11:14:26,040 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-17:11:14:26,215 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:14:26,216 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Categorize different marketing campaigns. Show me the distribution of the marketing costs. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:11:14:26,216 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:11:14:26,220 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:11:14:27,852 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:14:27,853 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=683 request_id=57e026ba6f8a2f0f18dce81010774090 response_code=200
2023-11-17:11:14:27,859 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:11:14:29,278 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:11:14:29,287 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:11:14:29,624 DEBUG    [config.py:244] Starting component System
2023-11-17:11:14:29,624 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:11:14:29,624 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:11:14:29,624 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:11:14:29,624 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:11:14:29,635 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:11:14:29,635 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:11:14:30,035 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:11:14:30,138 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:11:14:30,434 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:14:30,875 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:14:30,875 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.8252756595611572
2023-11-17:11:14:30,875 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Cost') - Score: 0.5490508079528809
2023-11-17:11:14:30,875 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Influence') - Score: 0.5224956274032593
2023-11-17:11:14:30,875 INFO     [vector_search.py:103] Element: (170009239686281, 'Target Revenue') - Score: 0.44196632504463196
2023-11-17:11:14:30,875 INFO     [vector_search.py:103] Element: (1700092362344043, 'RaceDesc') - Score: 0.38117605447769165
2023-11-17:11:14:30,887 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:14:30,888 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Cost') - Score: 0.920361340045929
2023-11-17:11:14:30,888 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Influence') - Score: 0.537601113319397
2023-11-17:11:14:30,888 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.5268754363059998
2023-11-17:11:14:30,888 INFO     [vector_search.py:103] Element: (1700092353790055, 'Price Per Each') - Score: 0.48811736702919006
2023-11-17:11:14:30,888 INFO     [vector_search.py:103] Element: (1700092408519074, 'Price per Unit') - Score: 0.47878673672676086
2023-11-17:11:14:30,888 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-17:11:14:31,186 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:14:31,252 INFO     [prebuilt.py:537] 
        Date Months    Revenue  Target Revenue     Leads  \
0 2018-01-01    Jan  8304345.0         8492400  8304.345   
1 2018-02-01    Feb  7856000.0         8492400  7856.000   
2 2018-03-01    Mar  7933500.0         8492400  7933.500   

                                 Marketing Campaigns  Marketing Cost  \
0                      Massive discounts and Hampers       2200000.0   
1        Arranging Giveaways,Investing on Google ads       2015840.0   
2  Designing optimized and attractive landing pag...       2008800.0   

   Gross Profit  Gross Margin  Conversion Rate  Churn Rate         CAC  \
0     6104345.0      0.735078             0.07        0.07  264.921556   
1     5840160.0      0.743401             0.04        0.07  256.598778   
2     5924700.0      0.746795             0.08        0.02  253.204765   

   Marketing Influence  Customer Lifetime Value  Organic Reach Rate  \
0                 0.46                    59494               0.357   
1                 0.50                    68664               0.454   
2                 0.26                    78923               0.329   

   Unnamed: 15 Unnamed: 16  
0          NaN         NaN  
1          NaN         NaN  
2          NaN         NaN  
2023-11-17:11:14:31,439 INFO     [logger.py:73] Question: Categorize different marketing campaigns. Show me the distribution of the marketing costs.
2023-11-17:11:14:31,443 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:11:14:31,444 INFO     [logger.py:73] Prompt ID: ac7eceda-b5a9-4b6d-aeb4-d2a1edf97080
2023-11-17:11:14:31,481 INFO     [logger.py:73] Using cached response
2023-11-17:11:14:31,483 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    
    # Preprocessing and cleaning data
    df = dfs[0]
    df['Marketing Campaigns'] = df['Marketing Campaigns'].astype(str)
    df['Marketing Cost'] = df['Marketing Cost'].astype(float)

    # Grouping by Marketing Campaigns and calculating the sum of Marketing Cost
    grouped_df = df.groupby('Marketing Campaigns')['Marketing Cost'].sum().reset_index()

    # Plotting the distribution of the marketing costs
    plt.figure(figsize=(10,6))
    plt.barh(grouped_df['Marketing Campaigns'], grouped_df['Marketing Cost'], color='skyblue')
    plt.xlabel('Marketing Cost')
    plt.ylabel('Marketing Campaigns')
    plt.title('Distribution of Marketing Costs by Campaign')
    plt.savefig('temp_chart.png')

    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-17:11:14:31,487 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0]
    df['Marketing Campaigns'] = df['Marketing Campaigns'].astype(str)
    df['Marketing Cost'] = df['Marketing Cost'].astype(float)
    grouped_df = df.groupby('Marketing Campaigns')['Marketing Cost'].sum().reset_index()
    plt.figure(figsize=(10, 6))
    plt.barh(grouped_df['Marketing Campaigns'], grouped_df['Marketing Cost'], color='skyblue')
    plt.xlabel('Marketing Cost')
    plt.ylabel('Marketing Campaigns')
    plt.title('Distribution of Marketing Costs by Campaign')
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-17:11:14:31,556 DEBUG    [__init__.py:337] matplotlib data path: /home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data
2023-11-17:11:14:31,562 DEBUG    [__init__.py:337] CONFIGDIR=/home/stella/.config/matplotlib
2023-11-17:11:14:31,564 DEBUG    [__init__.py:1498] interactive is False
2023-11-17:11:14:31,564 DEBUG    [__init__.py:1499] platform is linux
2023-11-17:11:14:31,618 DEBUG    [__init__.py:337] CACHEDIR=/home/stella/.cache/matplotlib
2023-11-17:11:14:31,621 DEBUG    [font_manager.py:1574] Using fontManager instance from /home/stella/.cache/matplotlib/fontlist-v330.json
2023-11-17:11:14:32,021 DEBUG    [pyplot.py:414] Loaded backend tkagg version 8.6.
2023-11-17:11:21:10,810 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-17:11:21:10,979 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:21:10,979 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Categorize different marketing campaigns. Show me the distribution of the marketing costs and choose a differrnt color for each category. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:11:21:10,979 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:11:21:10,982 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:11:21:11,724 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:21:11,728 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=355 request_id=7e12892f3f4cb29c8b2a8dd4beb6fc8f response_code=200
2023-11-17:11:21:11,740 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:11:21:12,779 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:11:21:12,805 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:11:21:13,172 DEBUG    [config.py:244] Starting component System
2023-11-17:11:21:13,173 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:11:21:13,173 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:11:21:13,173 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:11:21:13,173 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:11:21:13,184 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:11:21:13,184 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:11:21:13,573 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:11:21:13,689 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:11:21:13,999 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:21:14,481 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:21:14,481 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.8252756595611572
2023-11-17:11:21:14,481 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Cost') - Score: 0.5490508079528809
2023-11-17:11:21:14,481 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Influence') - Score: 0.5224956274032593
2023-11-17:11:21:14,481 INFO     [vector_search.py:103] Element: (170009239686281, 'Target Revenue') - Score: 0.44196632504463196
2023-11-17:11:21:14,481 INFO     [vector_search.py:103] Element: (1700092362344043, 'RaceDesc') - Score: 0.38117605447769165
2023-11-17:11:21:14,496 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:21:14,496 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Cost') - Score: 0.920361340045929
2023-11-17:11:21:14,496 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Influence') - Score: 0.537601113319397
2023-11-17:11:21:14,497 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.5268754363059998
2023-11-17:11:21:14,497 INFO     [vector_search.py:103] Element: (1700092353790055, 'Price Per Each') - Score: 0.48811736702919006
2023-11-17:11:21:14,497 INFO     [vector_search.py:103] Element: (1700092408519074, 'Price per Unit') - Score: 0.47878673672676086
2023-11-17:11:21:14,497 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-17:11:21:14,902 INFO     [prebuilt.py:537] 
        Date Months    Revenue  Target Revenue     Leads  \
0 2018-01-01    Jan  8304345.0         8492400  8304.345   
1 2018-02-01    Feb  7856000.0         8492400  7856.000   
2 2018-03-01    Mar  7933500.0         8492400  7933.500   

                                 Marketing Campaigns  Marketing Cost  \
0                      Massive discounts and Hampers       2200000.0   
1        Arranging Giveaways,Investing on Google ads       2015840.0   
2  Designing optimized and attractive landing pag...       2008800.0   

   Gross Profit  Gross Margin  Conversion Rate  Churn Rate         CAC  \
0     6104345.0      0.735078             0.07        0.07  264.921556   
1     5840160.0      0.743401             0.04        0.07  256.598778   
2     5924700.0      0.746795             0.08        0.02  253.204765   

   Marketing Influence  Customer Lifetime Value  Organic Reach Rate  \
0                 0.46                    59494               0.357   
1                 0.50                    68664               0.454   
2                 0.26                    78923               0.329   

   Unnamed: 15 Unnamed: 16  
0          NaN         NaN  
1          NaN         NaN  
2          NaN         NaN  
2023-11-17:11:21:14,904 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:21:15,063 INFO     [logger.py:73] Question: Categorize different marketing campaigns. Show me the distribution of the marketing costs and choose a differrnt color for each category.
2023-11-17:11:21:15,066 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:11:21:15,067 INFO     [logger.py:73] Prompt ID: ee68c719-fa70-46e0-8b81-6ac7024bfbcf
2023-11-17:11:21:15,141 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 36 rows and 17 columns.
This is the metadata of the dataframe dfs[0]:
Date,Months,Revenue,Target Revenue,Leads,Marketing Campaigns,Marketing Cost,Gross Profit,Gross Margin,Conversion Rate,Churn Rate,CAC,Marketing Influence,Customer Lifetime Value,Organic Reach Rate,Unnamed: 15,Unnamed: 16
2018-04-01,Apr,9409500.0,8492400,9409.5,Designing engagement c...,2003520.0,7405980.0,0.787074764865296,0.05,0.03,8630826517,0.35,82310,0.471,,
2018-01-01,Jan,8304345.0,8492400,8304.345,Massive discounts and ...,2200000.0,6104345.0,0.735078443874863,0.07,0.07,6881485818,0.46,59494,0.357,,
2018-03-01,Mar,7933500.0,8492400,7933.5,Designing optimized an...,2008800.0,5924700.0,0.746795235394214,0.08,0.02,8166619862,0.26,78923,0.329,,
2018-05-01,May,8856000.0,8492400,8856.0,Using influencer marke...,1173600.0,7682400.0,0.867479674796748,0.01,0.05,6738034726,0.72,72000,0.52,,
2018-02-01,Feb,7856000.0,8492400,7856.0,"Arranging Giveaways,In...",2015840.0,5840160.0,0.743401221995927,0.04,0.07,0299170629,0.5,68664,0.454,,
</dataframe>

<conversation>
User: Categorize different marketing campaigns. Show me the distribution of the marketing costs and choose a differrnt color for each category.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-17:11:21:15,144 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:21:15,144 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 36 rows and 17 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nDate,Months,Revenue,Target Revenue,Leads,Marketing Campaigns,Marketing Cost,Gross Profit,Gross Margin,Conversion Rate,Churn Rate,CAC,Marketing Influence,Customer Lifetime Value,Organic Reach Rate,Unnamed: 15,Unnamed: 16\\n2018-04-01,Apr,9409500.0,8492400,9409.5,Designing engagement c...,2003520.0,7405980.0,0.787074764865296,0.05,0.03,8630826517,0.35,82310,0.471,,\\n2018-01-01,Jan,8304345.0,8492400,8304.345,Massive discounts and ...,2200000.0,6104345.0,0.735078443874863,0.07,0.07,6881485818,0.46,59494,0.357,,\\n2018-03-01,Mar,7933500.0,8492400,7933.5,Designing optimized an...,2008800.0,5924700.0,0.746795235394214,0.08,0.02,8166619862,0.26,78923,0.329,,\\n2018-05-01,May,8856000.0,8492400,8856.0,Using influencer marke...,1173600.0,7682400.0,0.867479674796748,0.01,0.05,6738034726,0.72,72000,0.52,,\\n2018-02-01,Feb,7856000.0,8492400,7856.0,\\"Arranging Giveaways,In...\\",2015840.0,5840160.0,0.743401221995927,0.04,0.07,0299170629,0.5,68664,0.454,,\\n</dataframe>\\n\\n<conversation>\\nUser: Categorize different marketing campaigns. Show me the distribution of the marketing costs and choose a differrnt color for each category.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-17:11:21:38,559 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:21:38,561 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=23045 request_id=840d704b3a064eb51d29408f840389ff response_code=200
2023-11-17:11:21:38,578 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    # Preprocessing and cleaning data if necessary
    df = dfs[0]
    df['Marketing Campaigns'] = df['Marketing Campaigns'].astype('category')

    # Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    grouped_df = df.groupby('Marketing Campaigns')['Marketing Cost'].sum().reset_index()

    # Conducting the actual analysis
    fig, ax = plt.subplots()
    colors = ['b', 'g', 'r', 'c', 'm', 'y', 'k']
    ax.bar(grouped_df['Marketing Campaigns'], grouped_df['Marketing Cost'], color=colors)
    plt.xticks(rotation=90)
    plt.xlabel('Marketing Campaigns')
    plt.ylabel('Total Marketing Cost')
    plt.title('Distribution of Marketing Costs by Campaign')
    plt.tight_layout()
    plt.savefig('temp_chart.png')
    
    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-17:11:21:38,589 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    df = dfs[0]
    df['Marketing Campaigns'] = df['Marketing Campaigns'].astype('category')
    grouped_df = df.groupby('Marketing Campaigns')['Marketing Cost'].sum().reset_index()
    fig, ax = plt.subplots()
    colors = ['b', 'g', 'r', 'c', 'm', 'y', 'k']
    ax.bar(grouped_df['Marketing Campaigns'], grouped_df['Marketing Cost'], color=colors)
    plt.xticks(rotation=90)
    plt.xlabel('Marketing Campaigns')
    plt.ylabel('Total Marketing Cost')
    plt.title('Distribution of Marketing Costs by Campaign')
    plt.tight_layout()
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-17:11:21:38,688 DEBUG    [__init__.py:337] matplotlib data path: /home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data
2023-11-17:11:21:38,715 DEBUG    [__init__.py:337] CONFIGDIR=/home/stella/.config/matplotlib
2023-11-17:11:21:38,717 DEBUG    [__init__.py:1498] interactive is False
2023-11-17:11:21:38,718 DEBUG    [__init__.py:1499] platform is linux
2023-11-17:11:21:38,833 DEBUG    [__init__.py:337] CACHEDIR=/home/stella/.cache/matplotlib
2023-11-17:11:21:38,836 DEBUG    [font_manager.py:1574] Using fontManager instance from /home/stella/.cache/matplotlib/fontlist-v330.json
2023-11-17:11:21:39,065 DEBUG    [pyplot.py:414] Loaded backend tkagg version 8.6.
2023-11-17:11:21:39,342 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,342 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,342 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,342 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,342 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:21:39,346 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,347 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,347 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,347 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,347 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:21:39,455 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,456 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,456 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,456 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,456 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:21:39,464 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,465 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,465 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,465 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,465 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:21:39,472 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,472 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,472 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,472 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,472 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:21:39,481 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,481 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,481 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,481 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,482 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:21:39,486 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,486 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,486 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,486 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,486 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:21:39,495 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,495 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,496 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,496 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,496 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:21:39,502 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,503 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,503 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,503 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,503 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:21:39,523 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-11-17:11:21:39,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:21:39,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:21:39,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:21:39,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:21:39,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,532 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,532 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,532 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,532 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,532 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,532 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,532 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,533 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,533 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,533 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,533 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,533 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,533 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:21:39,534 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,534 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,534 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,534 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,534 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,534 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,535 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,535 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,535 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,535 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,535 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,536 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,536 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:21:39,536 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,536 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,537 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,537 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,537 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,537 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,537 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,537 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:21:39,537 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,537 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,537 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,538 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,538 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,538 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,538 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,538 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,538 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:21:39,539 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,539 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,539 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,539 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,539 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,539 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,539 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,539 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,540 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,540 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,540 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,540 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,540 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,540 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,540 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,541 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,541 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:21:39,541 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,541 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,541 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,541 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:21:39,542 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,542 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,542 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,542 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,542 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,543 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,543 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,543 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,543 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,543 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,543 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,543 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,543 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,544 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,544 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,544 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,545 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,545 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,545 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,545 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,545 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,546 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,546 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,546 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,546 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,546 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,546 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,546 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,547 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,547 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:21:39,548 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,548 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,548 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,548 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,548 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,549 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,549 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,549 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,549 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,549 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:21:39,549 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,549 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,550 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,550 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,550 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,550 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,550 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,550 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,550 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,550 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,551 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,551 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,552 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,552 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,553 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,553 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:21:39,553 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,553 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,553 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,553 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,553 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,554 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,554 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,554 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:21:39,554 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,555 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,555 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,555 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,555 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,555 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,556 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,556 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,556 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,556 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,556 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,556 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,556 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,556 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:21:39,556 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,556 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,557 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,557 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,557 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,557 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:21:39,557 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,557 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,557 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,557 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,557 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,557 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,558 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:21:39,558 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,558 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,558 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,558 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,558 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,558 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,558 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,558 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,558 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,559 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,560 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,561 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,562 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,563 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,564 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,565 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,566 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:21:39,613 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-11-17:11:21:39,613 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:21:39,614 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,615 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,616 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,617 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,618 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,619 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,620 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,621 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,622 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,623 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,624 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,625 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,626 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:21:39,627 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,628 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,629 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,630 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,631 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:21:39,632 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:21:39,784 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,784 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,784 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,784 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,784 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:21:39,786 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,786 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,786 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,786 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,786 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:21:39,790 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,790 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,790 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,790 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,790 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:21:39,792 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,792 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,792 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,792 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,792 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:21:39,793 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,793 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,793 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,793 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,793 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:21:39,794 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,794 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,794 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,794 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,794 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:21:39,795 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,795 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,795 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,796 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,796 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:21:39,797 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,797 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,797 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,798 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,798 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:21:39,799 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,799 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:21:39,799 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:21:39,799 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:21:39,799 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:21:39,946 INFO     [logger.py:73] Answer: {'type': 'plot', 'value': 'temp_chart.png'}
2023-11-17:11:21:39,949 INFO     [logger.py:73] Executed in: 24.885761737823486s
2023-11-17:11:21:39,950 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:21:39,950 DEBUG    [PngImagePlugin.py:190] STREAM b'tEXt' 41 57
2023-11-17:11:21:39,950 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 110 9
2023-11-17:11:21:39,950 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 131 23836
2023-11-17:11:23:30,589 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-17:11:23:30,974 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:23:30,975 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Create different categories for existing marketing campaigns. Show me the distribution of the marketing costs and choose a differrnt color for each category. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:11:23:30,975 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:11:23:30,976 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:11:23:32,833 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:23:32,833 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1110 request_id=99b2cd06ea56bb9b6e50b36dcda26a12 response_code=200
2023-11-17:11:23:32,838 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:11:23:34,866 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:11:23:34,877 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:11:23:35,272 DEBUG    [config.py:244] Starting component System
2023-11-17:11:23:35,272 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:11:23:35,272 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:11:23:35,272 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:11:23:35,272 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:11:23:35,284 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:11:23:35,284 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:11:23:35,648 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:11:23:35,789 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:11:23:36,069 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:23:36,529 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:23:36,530 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.8252756595611572
2023-11-17:11:23:36,530 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Cost') - Score: 0.5490508079528809
2023-11-17:11:23:36,530 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Influence') - Score: 0.5224956274032593
2023-11-17:11:23:36,530 INFO     [vector_search.py:103] Element: (170009239686281, 'Target Revenue') - Score: 0.44196632504463196
2023-11-17:11:23:36,530 INFO     [vector_search.py:103] Element: (1700092362344043, 'RaceDesc') - Score: 0.38117605447769165
2023-11-17:11:23:36,543 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:23:36,543 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Cost') - Score: 0.920361340045929
2023-11-17:11:23:36,543 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Influence') - Score: 0.537601113319397
2023-11-17:11:23:36,543 INFO     [vector_search.py:103] Element: (170009239686281, 'Marketing Campaigns') - Score: 0.5268754363059998
2023-11-17:11:23:36,543 INFO     [vector_search.py:103] Element: (1700092353790055, 'Price Per Each') - Score: 0.48811736702919006
2023-11-17:11:23:36,543 INFO     [vector_search.py:103] Element: (1700092408519074, 'Price per Unit') - Score: 0.47878673672676086
2023-11-17:11:23:36,543 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-17:11:23:36,725 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:23:38,394 INFO     [prebuilt.py:537] 
        Date Months    Revenue  Target Revenue     Leads  \
0 2018-01-01    Jan  8304345.0         8492400  8304.345   
1 2018-02-01    Feb  7856000.0         8492400  7856.000   
2 2018-03-01    Mar  7933500.0         8492400  7933.500   

                                 Marketing Campaigns  Marketing Cost  \
0                      Massive discounts and Hampers       2200000.0   
1        Arranging Giveaways,Investing on Google ads       2015840.0   
2  Designing optimized and attractive landing pag...       2008800.0   

   Gross Profit  Gross Margin  Conversion Rate  Churn Rate         CAC  \
0     6104345.0      0.735078             0.07        0.07  264.921556   
1     5840160.0      0.743401             0.04        0.07  256.598778   
2     5924700.0      0.746795             0.08        0.02  253.204765   

   Marketing Influence  Customer Lifetime Value  Organic Reach Rate  \
0                 0.46                    59494               0.357   
1                 0.50                    68664               0.454   
2                 0.26                    78923               0.329   

   Unnamed: 15 Unnamed: 16  
0          NaN         NaN  
1          NaN         NaN  
2          NaN         NaN  
2023-11-17:11:23:38,523 INFO     [logger.py:73] Question: Create different categories for existing marketing campaigns. Show me the distribution of the marketing costs and choose a differrnt color for each category.
2023-11-17:11:23:38,526 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:11:23:38,526 INFO     [logger.py:73] Prompt ID: 8a1c07a6-03aa-49b8-aba3-67d0ac0562ce
2023-11-17:11:23:38,558 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 36 rows and 17 columns.
This is the metadata of the dataframe dfs[0]:
Date,Months,Revenue,Target Revenue,Leads,Marketing Campaigns,Marketing Cost,Gross Profit,Gross Margin,Conversion Rate,Churn Rate,CAC,Marketing Influence,Customer Lifetime Value,Organic Reach Rate,Unnamed: 15,Unnamed: 16
2018-04-01,Apr,9409500.0,8492400,9409.5,Designing engagement c...,2003520.0,7405980.0,0.787074764865296,0.05,0.03,7930354096,0.35,82310,0.471,,
2018-01-01,Jan,8304345.0,8492400,8304.345,Massive discounts and ...,2200000.0,6104345.0,0.735078443874863,0.07,0.07,6851826206,0.46,59494,0.357,,
2018-02-01,Feb,7856000.0,8492400,7856.0,"Arranging Giveaways,In...",2015840.0,5840160.0,0.743401221995927,0.04,0.07,0905254926,0.5,68664,0.454,,
2018-05-01,May,8856000.0,8492400,8856.0,Using influencer marke...,1173600.0,7682400.0,0.867479674796748,0.01,0.05,4398651334,0.72,72000,0.52,,
2018-03-01,Mar,7933500.0,8492400,7933.5,Designing optimized an...,2008800.0,5924700.0,0.746795235394214,0.08,0.02,1828157742,0.26,78923,0.329,,
</dataframe>

<conversation>
User: Create different categories for existing marketing campaigns. Show me the distribution of the marketing costs and choose a differrnt color for each category.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-17:11:23:38,560 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:23:38,560 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 36 rows and 17 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nDate,Months,Revenue,Target Revenue,Leads,Marketing Campaigns,Marketing Cost,Gross Profit,Gross Margin,Conversion Rate,Churn Rate,CAC,Marketing Influence,Customer Lifetime Value,Organic Reach Rate,Unnamed: 15,Unnamed: 16\\n2018-04-01,Apr,9409500.0,8492400,9409.5,Designing engagement c...,2003520.0,7405980.0,0.787074764865296,0.05,0.03,7930354096,0.35,82310,0.471,,\\n2018-01-01,Jan,8304345.0,8492400,8304.345,Massive discounts and ...,2200000.0,6104345.0,0.735078443874863,0.07,0.07,6851826206,0.46,59494,0.357,,\\n2018-02-01,Feb,7856000.0,8492400,7856.0,\\"Arranging Giveaways,In...\\",2015840.0,5840160.0,0.743401221995927,0.04,0.07,0905254926,0.5,68664,0.454,,\\n2018-05-01,May,8856000.0,8492400,8856.0,Using influencer marke...,1173600.0,7682400.0,0.867479674796748,0.01,0.05,4398651334,0.72,72000,0.52,,\\n2018-03-01,Mar,7933500.0,8492400,7933.5,Designing optimized an...,2008800.0,5924700.0,0.746795235394214,0.08,0.02,1828157742,0.26,78923,0.329,,\\n</dataframe>\\n\\n<conversation>\\nUser: Create different categories for existing marketing campaigns. Show me the distribution of the marketing costs and choose a differrnt color for each category.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-17:11:24:24,967 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:24:24,973 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=46097 request_id=b52034efdc91886ee439a3e5df835464 response_code=200
2023-11-17:11:24:25,058 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    # Prepare: Preprocessing and cleaning data if necessary
    df = dfs[0]
    df['Marketing Campaigns'] = df['Marketing Campaigns'].astype('category')

    # Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    grouped_df = df.groupby('Marketing Campaigns')['Marketing Cost'].sum().reset_index()

    # Analyze: Conducting the actual analysis
    plt.figure(figsize=(10,6))
    plt.bar(grouped_df['Marketing Campaigns'], grouped_df['Marketing Cost'], color=plt.cm.Paired(range(len(grouped_df))))
    plt.xlabel('Marketing Campaigns')
    plt.ylabel('Marketing Cost')
    plt.title('Distribution of Marketing Costs by Campaign')
    plt.xticks(rotation=90)
    plt.savefig('temp_chart.png', bbox_inches='tight')
    plt.close()

    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-17:11:24:25,066 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0]
    df['Marketing Campaigns'] = df['Marketing Campaigns'].astype('category')
    grouped_df = df.groupby('Marketing Campaigns')['Marketing Cost'].sum().reset_index()
    plt.figure(figsize=(10, 6))
    plt.bar(grouped_df['Marketing Campaigns'], grouped_df['Marketing Cost'], color=plt.cm.Paired(range(len(grouped_df))))
    plt.xlabel('Marketing Campaigns')
    plt.ylabel('Marketing Cost')
    plt.title('Distribution of Marketing Costs by Campaign')
    plt.xticks(rotation=90)
    plt.savefig('temp_chart.png', bbox_inches='tight')
    plt.close()
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-17:11:24:25,220 DEBUG    [__init__.py:337] matplotlib data path: /home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data
2023-11-17:11:24:25,230 DEBUG    [__init__.py:337] CONFIGDIR=/home/stella/.config/matplotlib
2023-11-17:11:24:25,232 DEBUG    [__init__.py:1498] interactive is False
2023-11-17:11:24:25,232 DEBUG    [__init__.py:1499] platform is linux
2023-11-17:11:24:25,310 DEBUG    [__init__.py:337] CACHEDIR=/home/stella/.cache/matplotlib
2023-11-17:11:24:25,312 DEBUG    [font_manager.py:1574] Using fontManager instance from /home/stella/.cache/matplotlib/fontlist-v330.json
2023-11-17:11:24:25,576 DEBUG    [pyplot.py:414] Loaded backend tkagg version 8.6.
2023-11-17:11:24:25,883 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:25,883 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:25,883 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:25,883 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:25,883 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:24:25,888 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:25,888 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:25,888 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:25,888 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:25,888 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:24:25,979 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:25,979 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:25,980 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:25,980 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:25,980 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:24:25,992 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:25,993 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:25,993 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:25,993 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:25,993 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:24:25,997 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:25,997 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:25,997 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:25,998 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:25,998 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:24:26,003 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,003 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,003 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,003 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,004 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:24:26,006 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,007 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,007 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,007 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,007 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:24:26,009 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,009 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,010 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,010 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,010 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:24:26,013 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,013 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,013 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,013 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,013 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:24:26,022 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-11-17:11:24:26,023 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,023 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,023 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,023 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,023 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,023 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,023 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:24:26,023 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:24:26,024 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,025 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,026 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,027 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,028 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,029 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,030 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,031 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,032 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,033 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,034 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,035 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,036 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,037 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:24:26,103 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,104 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,105 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:24:26,106 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,107 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,108 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,109 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,110 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,111 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,112 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:24:26,113 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,114 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,115 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,116 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:24:26,117 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,117 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,117 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:24:26,117 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:24:26,117 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:24:26,117 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,117 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,117 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:24:26,117 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:24:26,289 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,289 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,289 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,289 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,289 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:24:26,292 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,292 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,292 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,292 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,292 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:24:26,301 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,301 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,301 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,301 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,301 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:24:26,302 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,302 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,302 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,302 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,302 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:24:26,304 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,304 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,304 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,304 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,304 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:24:26,305 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,305 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,305 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,305 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,305 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:24:26,306 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,306 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,306 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,306 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,306 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:24:26,307 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,307 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,307 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,307 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,307 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:24:26,308 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,308 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,308 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,308 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,308 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:24:26,567 INFO     [logger.py:73] Answer: {'type': 'plot', 'value': 'temp_chart.png'}
2023-11-17:11:24:26,568 INFO     [logger.py:73] Executed in: 48.04529070854187s
2023-11-17:11:24:26,568 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,568 DEBUG    [PngImagePlugin.py:190] STREAM b'tEXt' 41 57
2023-11-17:11:24:26,569 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 110 9
2023-11-17:11:24:26,569 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 131 65536
2023-11-17:11:24:26,609 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,609 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,609 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,609 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,609 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:24:26,613 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,613 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,614 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,614 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,614 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:24:26,625 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,625 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,625 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,625 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,625 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:24:26,626 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,626 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,626 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,626 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,626 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:24:26,627 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,627 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,627 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,627 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,627 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:24:26,629 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,629 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,629 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,629 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,629 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:24:26,630 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,630 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,630 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,630 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,630 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:24:26,631 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,631 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,631 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,631 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,631 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:24:26,632 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:24:26,632 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:24:26,632 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:24:26,632 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:24:26,632 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:46:46,554 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-17:11:46:46,647 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:46:46,648 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Show me the development of some conversion rates over time. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:11:46:46,648 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:11:46:46,650 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:11:46:47,954 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:46:47,966 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=609 request_id=5c0b06eb94ab6e2ddbfe5ab7601a7ae8 response_code=200
2023-11-17:11:46:47,984 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:11:46:50,706 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:11:46:50,743 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:11:46:51,260 DEBUG    [config.py:244] Starting component System
2023-11-17:11:46:51,260 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:11:46:51,260 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:11:46:51,260 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:11:46:51,260 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:11:46:51,271 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:11:46:51,271 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:11:46:51,787 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:11:46:52,066 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:11:46:52,187 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:46:52,891 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:46:52,891 INFO     [vector_search.py:103] Element: (170009239686281, 'Conversion Rate') - Score: 0.9078682065010071
2023-11-17:11:46:52,891 INFO     [vector_search.py:103] Element: (170009239686281, 'Organic Reach Rate') - Score: 0.4162387251853943
2023-11-17:11:46:52,891 INFO     [vector_search.py:103] Element: (170009236950698, 'Avg_Utilization_Ratio') - Score: 0.3984318971633911
2023-11-17:11:46:52,891 INFO     [vector_search.py:103] Element: (170009239686281, 'Churn Rate') - Score: 0.39623764157295227
2023-11-17:11:46:52,891 INFO     [vector_search.py:103] Element: (1700092401406344, 'Sales ($)') - Score: 0.3543359041213989
2023-11-17:11:46:52,919 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:46:52,919 INFO     [vector_search.py:103] Element: (170009239686281, 'Date') - Score: 0.4681260287761688
2023-11-17:11:46:52,920 INFO     [vector_search.py:103] Element: (170009239686281, 'Months') - Score: 0.45418328046798706
2023-11-17:11:46:52,920 INFO     [vector_search.py:103] Element: (1700092408519074, 'Product') - Score: 0.4368729591369629
2023-11-17:11:46:52,920 INFO     [vector_search.py:103] Element: (1700092377314948, 'Month') - Score: 0.43619754910469055
2023-11-17:11:46:52,920 INFO     [vector_search.py:103] Element: (1700092385555876, 'Season') - Score: 0.42417237162590027
2023-11-17:11:46:52,920 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-17:11:46:52,971 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:46:53,691 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:46:53,703 INFO     [prebuilt.py:537] 
        Date Months    Revenue  Target Revenue     Leads  \
0 2018-01-01    Jan  8304345.0         8492400  8304.345   
1 2018-02-01    Feb  7856000.0         8492400  7856.000   
2 2018-03-01    Mar  7933500.0         8492400  7933.500   

                                 Marketing Campaigns  Marketing Cost  \
0                      Massive discounts and Hampers       2200000.0   
1        Arranging Giveaways,Investing on Google ads       2015840.0   
2  Designing optimized and attractive landing pag...       2008800.0   

   Gross Profit  Gross Margin  Conversion Rate  Churn Rate         CAC  \
0     6104345.0      0.735078             0.07        0.07  264.921556   
1     5840160.0      0.743401             0.04        0.07  256.598778   
2     5924700.0      0.746795             0.08        0.02  253.204765   

   Marketing Influence  Customer Lifetime Value  Organic Reach Rate  \
0                 0.46                    59494               0.357   
1                 0.50                    68664               0.454   
2                 0.26                    78923               0.329   

   Unnamed: 15 Unnamed: 16  
0          NaN         NaN  
1          NaN         NaN  
2          NaN         NaN  
2023-11-17:11:46:53,897 INFO     [logger.py:73] Question: Show me the development of some conversion rates over time.
2023-11-17:11:46:53,934 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:11:46:53,935 INFO     [logger.py:73] Prompt ID: 0db75711-94c2-42a7-b834-e9d74841795e
2023-11-17:11:46:53,999 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 36 rows and 17 columns.
This is the metadata of the dataframe dfs[0]:
Date,Months,Revenue,Target Revenue,Leads,Marketing Campaigns,Marketing Cost,Gross Profit,Gross Margin,Conversion Rate,Churn Rate,CAC,Marketing Influence,Customer Lifetime Value,Organic Reach Rate,Unnamed: 15,Unnamed: 16
2018-02-01,Feb,7856000.0,8492400,7856.0,"Arranging Giveaways,In...",2015840.0,5840160.0,0.743401221995927,0.04,0.07,7708018316,0.5,68664,0.454,,
2018-01-01,Jan,8304345.0,8492400,8304.345,Massive discounts and ...,2200000.0,6104345.0,0.735078443874863,0.07,0.07,2525780292,0.46,59494,0.357,,
2018-05-01,May,8856000.0,8492400,8856.0,Using influencer marke...,1173600.0,7682400.0,0.867479674796748,0.01,0.05,5075235021,0.72,72000,0.52,,
2018-03-01,Mar,7933500.0,8492400,7933.5,Designing optimized an...,2008800.0,5924700.0,0.746795235394214,0.08,0.02,1738949866,0.26,78923,0.329,,
2018-04-01,Apr,9409500.0,8492400,9409.5,Designing engagement c...,2003520.0,7405980.0,0.787074764865296,0.05,0.03,2459851799,0.35,82310,0.471,,
</dataframe>

<conversation>
User: Show me the development of some conversion rates over time.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-17:11:46:54,000 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:46:54,000 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 36 rows and 17 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nDate,Months,Revenue,Target Revenue,Leads,Marketing Campaigns,Marketing Cost,Gross Profit,Gross Margin,Conversion Rate,Churn Rate,CAC,Marketing Influence,Customer Lifetime Value,Organic Reach Rate,Unnamed: 15,Unnamed: 16\\n2018-02-01,Feb,7856000.0,8492400,7856.0,\\"Arranging Giveaways,In...\\",2015840.0,5840160.0,0.743401221995927,0.04,0.07,7708018316,0.5,68664,0.454,,\\n2018-01-01,Jan,8304345.0,8492400,8304.345,Massive discounts and ...,2200000.0,6104345.0,0.735078443874863,0.07,0.07,2525780292,0.46,59494,0.357,,\\n2018-05-01,May,8856000.0,8492400,8856.0,Using influencer marke...,1173600.0,7682400.0,0.867479674796748,0.01,0.05,5075235021,0.72,72000,0.52,,\\n2018-03-01,Mar,7933500.0,8492400,7933.5,Designing optimized an...,2008800.0,5924700.0,0.746795235394214,0.08,0.02,1738949866,0.26,78923,0.329,,\\n2018-04-01,Apr,9409500.0,8492400,9409.5,Designing engagement c...,2003520.0,7405980.0,0.787074764865296,0.05,0.03,2459851799,0.35,82310,0.471,,\\n</dataframe>\\n\\n<conversation>\\nUser: Show me the development of some conversion rates over time.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-17:11:47:39,475 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:47:39,477 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=45162 request_id=a19fb0cc97495bcc8d0d30511e4a3d4f response_code=200
2023-11-17:11:47:39,493 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    
    # Prepare: Preprocessing and cleaning data if necessary
    df = dfs[0]
    df['Date'] = pd.to_datetime(df['Date'])
    df = df.sort_values('Date')
    
    # Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    # In this case, no additional processing is required
    
    # Analyze: Conducting the actual analysis
    plt.figure(figsize=(10,6))
    plt.plot(df['Date'], df['Conversion Rate'], marker='o', linestyle='-')
    plt.xlabel('Date')
    plt.ylabel('Conversion Rate')
    plt.title('Development of Conversion Rates Over Time')
    plt.grid(True)
    plt.savefig('temp_chart.png')
    
    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-17:11:47:39,503 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0]
    df['Date'] = pd.to_datetime(df['Date'])
    df = df.sort_values('Date')
    plt.figure(figsize=(10, 6))
    plt.plot(df['Date'], df['Conversion Rate'], marker='o', linestyle='-')
    plt.xlabel('Date')
    plt.ylabel('Conversion Rate')
    plt.title('Development of Conversion Rates Over Time')
    plt.grid(True)
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-17:11:47:39,594 DEBUG    [__init__.py:337] matplotlib data path: /home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data
2023-11-17:11:47:39,599 DEBUG    [__init__.py:337] CONFIGDIR=/home/stella/.config/matplotlib
2023-11-17:11:47:39,601 DEBUG    [__init__.py:1498] interactive is False
2023-11-17:11:47:39,601 DEBUG    [__init__.py:1499] platform is linux
2023-11-17:11:47:39,664 DEBUG    [__init__.py:337] CACHEDIR=/home/stella/.cache/matplotlib
2023-11-17:11:47:39,679 DEBUG    [font_manager.py:1574] Using fontManager instance from /home/stella/.cache/matplotlib/fontlist-v330.json
2023-11-17:11:47:39,911 DEBUG    [pyplot.py:414] Loaded backend tkagg version 8.6.
2023-11-17:11:47:40,169 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,169 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,169 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,169 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,169 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:47:40,204 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,204 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,204 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,204 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,204 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:47:40,380 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,381 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,381 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,381 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,381 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:47:40,389 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,389 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,389 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,389 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,389 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:47:40,391 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,391 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,391 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,391 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,391 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:47:40,393 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,393 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,393 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,393 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,393 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:47:40,395 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,395 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,395 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,395 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,395 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:47:40,397 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,397 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,397 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,397 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,397 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:47:40,399 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,399 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,399 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,399 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,399 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:47:40,406 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,407 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,408 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,409 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,410 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,411 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,412 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,413 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,414 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,415 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,416 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,417 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,418 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,419 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,420 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,421 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,422 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:47:40,512 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-11-17:11:47:40,512 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,512 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,512 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,512 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,512 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,512 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,512 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,513 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,514 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,515 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,516 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,517 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,518 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,519 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:47:40,520 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,521 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,522 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,523 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,524 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:47:40,525 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:47:40,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:47:40,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:47:40,526 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,527 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,528 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,529 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,530 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:47:40,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:47:40,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:47:40,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,531 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:47:40,531 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:47:40,644 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,644 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,644 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,644 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,644 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:47:40,646 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,646 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,646 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,646 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,646 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:47:40,651 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,651 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,651 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,651 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,651 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:47:40,653 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,653 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,653 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,653 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,653 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:47:40,655 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,655 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,655 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,655 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,655 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:47:40,656 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,656 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,656 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,656 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,656 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:47:40,657 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,657 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,657 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,657 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,657 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:47:40,658 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,658 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,658 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,658 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,658 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:47:40,659 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,659 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:47:40,659 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:47:40,659 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:47:40,659 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:47:40,812 INFO     [logger.py:73] Answer: {'type': 'plot', 'value': 'temp_chart.png'}
2023-11-17:11:47:40,813 INFO     [logger.py:73] Executed in: 46.915273904800415s
2023-11-17:11:47:40,813 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:47:40,813 DEBUG    [PngImagePlugin.py:190] STREAM b'tEXt' 41 57
2023-11-17:11:47:40,813 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 110 9
2023-11-17:11:47:40,813 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 131 65536
2023-11-17:11:49:31,969 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-17:11:49:32,064 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:49:32,064 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Show me the development of sales of clothing over time. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:11:49:32,065 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:11:49:32,066 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:11:49:33,127 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:49:33,131 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=499 request_id=4f0b55160473b293f84434a53d2bc9ce response_code=200
2023-11-17:11:49:33,141 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:11:49:34,332 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:11:49:34,346 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:11:49:34,668 DEBUG    [config.py:244] Starting component System
2023-11-17:11:49:34,668 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:11:49:34,668 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:11:49:34,668 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:11:49:34,668 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:11:49:34,679 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:11:49:34,679 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:11:49:35,100 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:11:49:35,183 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:11:49:35,433 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:49:35,868 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:49:35,868 INFO     [vector_search.py:103] Element: (1700092401406344, 'Sales ($)') - Score: 0.8653542399406433
2023-11-17:11:49:35,868 INFO     [vector_search.py:103] Element: (1700092408519074, 'Total Sales') - Score: 0.7782794237136841
2023-11-17:11:49:35,869 INFO     [vector_search.py:103] Element: (1700092408519074, 'Sales Method') - Score: 0.7738610506057739
2023-11-17:11:49:35,869 INFO     [vector_search.py:103] Element: (1700092408519074, 'Retailer') - Score: 0.654481053352356
2023-11-17:11:49:35,869 INFO     [vector_search.py:103] Element: (1700092377314948, 'Revenue') - Score: 0.6518972516059875
2023-11-17:11:49:35,880 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:49:35,881 INFO     [vector_search.py:103] Element: (1700092385555876, 'Color') - Score: 0.5329426527023315
2023-11-17:11:49:35,881 INFO     [vector_search.py:103] Element: (1700092385555876, 'Size') - Score: 0.44013187289237976
2023-11-17:11:49:35,881 INFO     [vector_search.py:103] Element: (1700092408519074, 'Product') - Score: 0.4397718906402588
2023-11-17:11:49:35,881 INFO     [vector_search.py:103] Element: (1700092408519074, 'Retailer') - Score: 0.4087628722190857
2023-11-17:11:49:35,881 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 0.4017546772956848
2023-11-17:11:49:35,893 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:49:35,893 INFO     [vector_search.py:103] Element: (170009239686281, 'Date') - Score: 0.4681260287761688
2023-11-17:11:49:35,893 INFO     [vector_search.py:103] Element: (170009239686281, 'Months') - Score: 0.45418328046798706
2023-11-17:11:49:35,893 INFO     [vector_search.py:103] Element: (1700092408519074, 'Product') - Score: 0.4368729591369629
2023-11-17:11:49:35,893 INFO     [vector_search.py:103] Element: (1700092377314948, 'Month') - Score: 0.43619754910469055
2023-11-17:11:49:35,893 INFO     [vector_search.py:103] Element: (1700092385555876, 'Season') - Score: 0.42417237162590027
2023-11-17:11:49:35,893 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-17:11:49:36,198 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:49:39,524 INFO     [prebuilt.py:537] 
      Retailer  Retailer ID Invoice Date     Region     State      City  \
0  Foot Locker      1185732   2020-01-01  Northeast  New York  New York   
1  Foot Locker      1185732   2020-01-02  Northeast  New York  New York   
2  Foot Locker      1185732   2020-01-03  Northeast  New York  New York   

                   Product  Price per Unit  Units Sold  Total Sales  \
0    Men's Street Footwear              50        1200     600000.0   
1  Men's Athletic Footwear              50        1000     500000.0   
2  Women's Street Footwear              40        1000     400000.0   

   Operating Profit  Operating Margin Sales Method  
0          300000.0              0.50     In-store  
1          150000.0              0.30     In-store  
2          140000.0              0.35     In-store  
2023-11-17:11:49:39,607 INFO     [logger.py:73] Question: Show me the development of sales of clothing over time.
2023-11-17:11:49:39,610 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:11:49:39,610 INFO     [logger.py:73] Prompt ID: a7028ed2-ee4b-4ddd-a776-9e59a5158b76
2023-11-17:11:49:39,652 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 9648 rows and 13 columns.
This is the metadata of the dataframe dfs[0]:
Retailer,Retailer ID,Invoice Date,Region,State,City,Product,Price per Unit,Units Sold,Total Sales,Operating Profit,Operating Margin,Sales Method
Foot Locker,1185732,2020-01-02,Northeast,New York,New York,Men's Athletic Footwear,50,1000,500000.0,150000.0,0.3,In-store
Foot Locker,1185732,2020-01-04,Northeast,New York,New York,Women's Athletic Footwear,45,850,382500.0,133875.0,0.35,In-store
Foot Locker,1185732,2020-01-01,Northeast,New York,New York,Men's Street Footwear,50,1200,600000.0,300000.0,0.5,In-store
Foot Locker,1185732,2020-01-05,Northeast,New York,New York,Men's Apparel,60,900,540000.0,162000.0,0.3,In-store
Foot Locker,1185732,2020-01-03,Northeast,New York,New York,Women's Street Footwear,40,1000,400000.0,140000.0,0.35,In-store
</dataframe>

<conversation>
User: Show me the development of sales of clothing over time.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-17:11:49:39,655 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:49:39,655 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 9648 rows and 13 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nRetailer,Retailer ID,Invoice Date,Region,State,City,Product,Price per Unit,Units Sold,Total Sales,Operating Profit,Operating Margin,Sales Method\\nFoot Locker,1185732,2020-01-02,Northeast,New York,New York,Men\'s Athletic Footwear,50,1000,500000.0,150000.0,0.3,In-store\\nFoot Locker,1185732,2020-01-04,Northeast,New York,New York,Women\'s Athletic Footwear,45,850,382500.0,133875.0,0.35,In-store\\nFoot Locker,1185732,2020-01-01,Northeast,New York,New York,Men\'s Street Footwear,50,1200,600000.0,300000.0,0.5,In-store\\nFoot Locker,1185732,2020-01-05,Northeast,New York,New York,Men\'s Apparel,60,900,540000.0,162000.0,0.3,In-store\\nFoot Locker,1185732,2020-01-03,Northeast,New York,New York,Women\'s Street Footwear,40,1000,400000.0,140000.0,0.35,In-store\\n</dataframe>\\n\\n<conversation>\\nUser: Show me the development of sales of clothing over time.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-17:11:50:01,697 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:50:01,699 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=21625 request_id=1d669cc0b422bedcdfa1cd08f4dc24af response_code=200
2023-11-17:11:50:01,723 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    # Prepare: Preprocessing and cleaning data if necessary
    df = dfs[0]
    df['Invoice Date'] = pd.to_datetime(df['Invoice Date'])
    
    # Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    # Filter the dataframe to include only clothing sales
    clothing_df = df[df['Product'].str.contains('Apparel')]
    
    # Group by date and sum the total sales
    sales_over_time = clothing_df.groupby('Invoice Date')['Total Sales'].sum().reset_index()
    
    # Analyze: Conducting the actual analysis
    # Plot the development of sales over time
    plt.figure(figsize=(10,6))
    plt.plot(sales_over_time['Invoice Date'], sales_over_time['Total Sales'])
    plt.title('Development of Clothing Sales Over Time')
    plt.xlabel('Date')
    plt.ylabel('Total Sales')
    plt.savefig('temp_chart.png')
    
    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-17:11:50:01,731 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    df = dfs[0]
    df['Invoice Date'] = pd.to_datetime(df['Invoice Date'])
    clothing_df = df[df['Product'].str.contains('Apparel')]
    sales_over_time = clothing_df.groupby('Invoice Date')['Total Sales'].sum().reset_index()
    plt.figure(figsize=(10, 6))
    plt.plot(sales_over_time['Invoice Date'], sales_over_time['Total Sales'])
    plt.title('Development of Clothing Sales Over Time')
    plt.xlabel('Date')
    plt.ylabel('Total Sales')
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-17:11:50:01,844 DEBUG    [__init__.py:337] matplotlib data path: /home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data
2023-11-17:11:50:01,849 DEBUG    [__init__.py:337] CONFIGDIR=/home/stella/.config/matplotlib
2023-11-17:11:50:01,850 DEBUG    [__init__.py:1498] interactive is False
2023-11-17:11:50:01,850 DEBUG    [__init__.py:1499] platform is linux
2023-11-17:11:50:01,900 DEBUG    [__init__.py:337] CACHEDIR=/home/stella/.cache/matplotlib
2023-11-17:11:50:01,902 DEBUG    [font_manager.py:1574] Using fontManager instance from /home/stella/.cache/matplotlib/fontlist-v330.json
2023-11-17:11:50:02,157 DEBUG    [pyplot.py:414] Loaded backend tkagg version 8.6.
2023-11-17:11:50:02,419 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,420 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,420 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,420 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,420 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:50:02,424 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,424 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,424 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,424 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,425 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:50:02,516 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,516 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,516 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,516 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,516 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:50:02,528 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,529 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,529 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,529 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,529 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:50:02,533 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,533 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,533 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,534 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,534 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:50:02,539 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,539 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,539 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,540 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,540 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:50:02,543 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,543 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,544 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,544 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,544 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:50:02,548 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,548 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,548 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,548 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,548 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:50:02,553 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,553 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,553 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,553 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,553 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:50:02,568 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-11-17:11:50:02,569 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,569 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,569 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,569 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,569 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,569 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,570 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,571 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,572 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,572 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,572 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,572 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,572 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,572 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,572 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,572 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,572 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,573 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,574 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,575 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,576 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,577 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,578 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,579 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,580 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,581 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,582 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,583 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,584 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,585 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,586 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,587 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,587 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,587 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,587 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:50:02,678 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-11-17:11:50:02,678 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,678 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,678 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,678 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,679 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,680 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,681 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,682 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,683 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,684 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,685 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,686 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,687 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:50:02,688 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,689 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,690 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,691 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,692 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,693 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,694 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:50:02,695 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:50:02,696 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,697 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,697 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:50:02,697 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:50:02,812 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,812 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,813 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,813 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,813 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:50:02,815 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,815 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,815 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,815 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,815 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:50:02,819 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,819 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,819 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,819 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,819 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:50:02,821 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,821 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,821 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,821 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,821 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:50:02,823 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,823 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,823 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,823 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,823 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:50:02,824 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,824 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,824 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,824 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,824 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:50:02,825 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,825 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,825 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,825 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,825 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:50:02,826 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,826 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,826 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,826 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,826 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:50:02,827 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,827 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:50:02,827 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:50:02,828 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:50:02,828 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:50:02,978 INFO     [logger.py:73] Answer: {'type': 'plot', 'value': 'temp_chart.png'}
2023-11-17:11:50:02,978 INFO     [logger.py:73] Executed in: 23.37146306037903s
2023-11-17:11:50:02,979 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:50:02,979 DEBUG    [PngImagePlugin.py:190] STREAM b'tEXt' 41 57
2023-11-17:11:50:02,979 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 110 9
2023-11-17:11:50:02,979 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 131 65536
2023-11-17:11:51:03,266 INFO     [quality_test.py:33] TESTING Quality of Software:
2023-11-17:11:51:03,395 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:51:03,395 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: Show me the development of sales of clothing in 2021. \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:11:51:03,395 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:11:51:03,397 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:11:51:04,879 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:51:04,883 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=703 request_id=623481f4416329a3a48310ddc70fc19b response_code=200
2023-11-17:11:51:04,893 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:11:51:05,776 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:11:51:05,786 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:11:51:06,115 DEBUG    [config.py:244] Starting component System
2023-11-17:11:51:06,116 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:11:51:06,116 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:11:51:06,116 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:11:51:06,116 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:11:51:06,127 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:11:51:06,127 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:11:51:06,463 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:11:51:06,632 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:11:51:06,950 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:51:07,159 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:51:07,159 INFO     [vector_search.py:103] Element: (1700092401406344, 'Sales ($)') - Score: 0.8653542399406433
2023-11-17:11:51:07,159 INFO     [vector_search.py:103] Element: (1700092408519074, 'Total Sales') - Score: 0.7782794237136841
2023-11-17:11:51:07,159 INFO     [vector_search.py:103] Element: (1700092408519074, 'Sales Method') - Score: 0.7738610506057739
2023-11-17:11:51:07,160 INFO     [vector_search.py:103] Element: (1700092408519074, 'Retailer') - Score: 0.654481053352356
2023-11-17:11:51:07,160 INFO     [vector_search.py:103] Element: (1700092377314948, 'Revenue') - Score: 0.6518972516059875
2023-11-17:11:51:07,176 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:51:07,176 INFO     [vector_search.py:103] Element: (1700092385555876, 'Color') - Score: 0.5329426527023315
2023-11-17:11:51:07,176 INFO     [vector_search.py:103] Element: (1700092385555876, 'Size') - Score: 0.44013187289237976
2023-11-17:11:51:07,176 INFO     [vector_search.py:103] Element: (1700092408519074, 'Product') - Score: 0.4397718906402588
2023-11-17:11:51:07,176 INFO     [vector_search.py:103] Element: (1700092408519074, 'Retailer') - Score: 0.4087628722190857
2023-11-17:11:51:07,176 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 0.4017546772956848
2023-11-17:11:51:07,189 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:11:51:07,189 INFO     [vector_search.py:103] Element: (170009239686281, 'Months') - Score: 0.661691427230835
2023-11-17:11:51:07,189 INFO     [vector_search.py:103] Element: (1700092385555876, 'Season') - Score: 0.6543660163879395
2023-11-17:11:51:07,189 INFO     [vector_search.py:103] Element: (1700092377314948, 'Month') - Score: 0.6542112231254578
2023-11-17:11:51:07,189 INFO     [vector_search.py:103] Element: (170009239686281, 'Date') - Score: 0.5928447842597961
2023-11-17:11:51:07,189 INFO     [vector_search.py:103] Element: (1700092390869348, 'Years of Experience') - Score: 0.5433921813964844
2023-11-17:11:51:07,189 INFO     [prebuilt.py:527] SELECTED TABLES
2023-11-17:11:51:07,643 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:11:51:09,970 INFO     [prebuilt.py:537] 
      Retailer  Retailer ID Invoice Date     Region     State      City  \
0  Foot Locker      1185732   2020-01-01  Northeast  New York  New York   
1  Foot Locker      1185732   2020-01-02  Northeast  New York  New York   
2  Foot Locker      1185732   2020-01-03  Northeast  New York  New York   

                   Product  Price per Unit  Units Sold  Total Sales  \
0    Men's Street Footwear              50        1200     600000.0   
1  Men's Athletic Footwear              50        1000     500000.0   
2  Women's Street Footwear              40        1000     400000.0   

   Operating Profit  Operating Margin Sales Method  
0          300000.0              0.50     In-store  
1          150000.0              0.30     In-store  
2          140000.0              0.35     In-store  
2023-11-17:11:51:10,074 INFO     [logger.py:73] Question: Show me the development of sales of clothing in 2021.
2023-11-17:11:51:10,077 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:11:51:10,078 INFO     [logger.py:73] Prompt ID: fab98e8e-6f2f-43dc-895a-38363b815d2c
2023-11-17:11:51:10,114 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 9648 rows and 13 columns.
This is the metadata of the dataframe dfs[0]:
Retailer,Retailer ID,Invoice Date,Region,State,City,Product,Price per Unit,Units Sold,Total Sales,Operating Profit,Operating Margin,Sales Method
Foot Locker,1185732,2020-01-03,Northeast,New York,New York,Women's Street Footwear,40,1000,400000.0,140000.0,0.35,In-store
Foot Locker,1185732,2020-01-04,Northeast,New York,New York,Women's Athletic Footwear,45,850,382500.0,133875.0,0.35,In-store
Foot Locker,1185732,2020-01-01,Northeast,New York,New York,Men's Street Footwear,50,1200,600000.0,300000.0,0.5,In-store
Foot Locker,1185732,2020-01-02,Northeast,New York,New York,Men's Athletic Footwear,50,1000,500000.0,150000.0,0.3,In-store
Foot Locker,1185732,2020-01-05,Northeast,New York,New York,Men's Apparel,60,900,540000.0,162000.0,0.3,In-store
</dataframe>

<conversation>
User: Show me the development of sales of clothing in 2021.
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-17:11:51:10,116 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:11:51:10,116 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 9648 rows and 13 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nRetailer,Retailer ID,Invoice Date,Region,State,City,Product,Price per Unit,Units Sold,Total Sales,Operating Profit,Operating Margin,Sales Method\\nFoot Locker,1185732,2020-01-03,Northeast,New York,New York,Women\'s Street Footwear,40,1000,400000.0,140000.0,0.35,In-store\\nFoot Locker,1185732,2020-01-04,Northeast,New York,New York,Women\'s Athletic Footwear,45,850,382500.0,133875.0,0.35,In-store\\nFoot Locker,1185732,2020-01-01,Northeast,New York,New York,Men\'s Street Footwear,50,1200,600000.0,300000.0,0.5,In-store\\nFoot Locker,1185732,2020-01-02,Northeast,New York,New York,Men\'s Athletic Footwear,50,1000,500000.0,150000.0,0.3,In-store\\nFoot Locker,1185732,2020-01-05,Northeast,New York,New York,Men\'s Apparel,60,900,540000.0,162000.0,0.3,In-store\\n</dataframe>\\n\\n<conversation>\\nUser: Show me the development of sales of clothing in 2021.\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-17:11:51:54,953 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:11:51:54,956 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=44406 request_id=5c6a5106c7a19fbdf2d57937a108db32 response_code=200
2023-11-17:11:51:54,977 INFO     [logger.py:73] Code generated:
```
import pandas as pd
import matplotlib.pyplot as plt

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    # Prepare: Convert 'Invoice Date' to datetime format
    dfs[0]['Invoice Date'] = pd.to_datetime(dfs[0]['Invoice Date'])
    
    # Process: Filter data for 2021 and clothing sales
    df_2021 = dfs[0][(dfs[0]['Invoice Date'].dt.year == 2021) & (dfs[0]['Product'].str.contains('Apparel'))]
    
    # Group by month and sum the total sales
    monthly_sales = df_2021.groupby(df_2021['Invoice Date'].dt.month)['Total Sales'].sum()
    
    # Analyze: Plot the development of sales
    plt.figure(figsize=(10,6))
    plt.plot(monthly_sales.index, monthly_sales.values, marker='o')
    plt.title('Development of Clothing Sales in 2021')
    plt.xlabel('Month')
    plt.ylabel('Total Sales')
    plt.grid(True)
    plt.savefig('temp_chart.png')
    
    return { "type": "plot", "value": "temp_chart.png" }
```

2023-11-17:11:51:54,989 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    dfs[0]['Invoice Date'] = pd.to_datetime(dfs[0]['Invoice Date'])
    df_2021 = dfs[0][(dfs[0]['Invoice Date'].dt.year == 2021) & dfs[0]['Product'].str.contains('Apparel')]
    monthly_sales = df_2021.groupby(df_2021['Invoice Date'].dt.month)['Total Sales'].sum()
    plt.figure(figsize=(10, 6))
    plt.plot(monthly_sales.index, monthly_sales.values, marker='o')
    plt.title('Development of Clothing Sales in 2021')
    plt.xlabel('Month')
    plt.ylabel('Total Sales')
    plt.grid(True)
    plt.savefig('temp_chart.png')
    return {'type': 'plot', 'value': 'temp_chart.png'}
        ```
2023-11-17:11:51:55,121 DEBUG    [__init__.py:337] matplotlib data path: /home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data
2023-11-17:11:51:55,140 DEBUG    [__init__.py:337] CONFIGDIR=/home/stella/.config/matplotlib
2023-11-17:11:51:55,147 DEBUG    [__init__.py:1498] interactive is False
2023-11-17:11:51:55,147 DEBUG    [__init__.py:1499] platform is linux
2023-11-17:11:51:55,200 DEBUG    [__init__.py:337] CACHEDIR=/home/stella/.cache/matplotlib
2023-11-17:11:51:55,202 DEBUG    [font_manager.py:1574] Using fontManager instance from /home/stella/.cache/matplotlib/fontlist-v330.json
2023-11-17:11:51:55,460 DEBUG    [pyplot.py:414] Loaded backend tkagg version 8.6.
2023-11-17:11:51:55,730 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:55,730 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:55,730 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:55,730 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:55,730 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:51:55,734 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:55,735 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:55,735 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:55,735 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:55,735 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:51:55,880 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:55,880 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:55,880 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:55,880 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:55,880 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:51:55,888 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:55,888 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:55,888 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:55,888 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:55,888 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:51:55,889 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:55,890 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:55,890 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:55,890 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:55,890 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:51:55,891 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:55,891 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:55,891 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:55,891 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:55,891 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:51:55,892 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:55,892 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:55,893 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:55,893 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:55,893 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:51:55,894 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:55,894 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:55,894 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:55,894 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:55,894 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:51:55,895 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:55,895 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:55,896 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:55,896 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:55,896 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:51:55,902 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,903 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,904 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,905 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,906 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,907 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,908 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,909 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,910 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:51:55,911 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,912 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,913 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,914 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:55,915 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:55,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,916 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:55,916 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:51:56,002 DEBUG    [font_manager.py:1411] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,003 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,004 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,005 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,006 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,007 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,008 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,009 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,010 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-11-17:11:51:56,011 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,012 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,013 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,014 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,015 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:51:56,016 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,017 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,018 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,019 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,020 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,021 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-11-17:11:51:56,021 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,021 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,021 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-11-17:11:51:56,021 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-11-17:11:51:56,021 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-11-17:11:51:56,021 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,021 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,021 DEBUG    [font_manager.py:1423] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-11-17:11:51:56,021 DEBUG    [font_manager.py:1454] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/stella/Programming/anaLLM/venv/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-11-17:11:51:56,124 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:56,124 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:56,124 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:56,124 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:56,124 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 1189
2023-11-17:11:51:56,126 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:56,126 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:56,126 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:56,126 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:56,126 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 2994
2023-11-17:11:51:56,131 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:56,131 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:56,131 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:56,131 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:56,131 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 374
2023-11-17:11:51:56,133 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:56,133 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:56,133 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:56,133 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:56,133 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 286
2023-11-17:11:51:56,134 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:56,134 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:56,134 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:56,134 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:56,135 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 263
2023-11-17:11:51:56,135 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:56,135 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:56,135 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:56,135 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:56,135 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 387
2023-11-17:11:51:56,136 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:56,136 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:56,136 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:56,136 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:56,136 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 436
2023-11-17:11:51:56,137 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:56,137 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:56,137 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:56,137 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:56,138 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 351
2023-11-17:11:51:56,138 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:56,138 DEBUG    [PngImagePlugin.py:190] STREAM b'sBIT' 41 4
2023-11-17:11:51:56,138 DEBUG    [PngImagePlugin.py:726] b'sBIT' 41 4 (unknown)
2023-11-17:11:51:56,139 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 57 9
2023-11-17:11:51:56,139 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 78 364
2023-11-17:11:51:56,274 INFO     [logger.py:73] Answer: {'type': 'plot', 'value': 'temp_chart.png'}
2023-11-17:11:51:56,275 INFO     [logger.py:73] Executed in: 46.20150899887085s
2023-11-17:11:51:56,276 DEBUG    [PngImagePlugin.py:190] STREAM b'IHDR' 16 13
2023-11-17:11:51:56,276 DEBUG    [PngImagePlugin.py:190] STREAM b'tEXt' 41 57
2023-11-17:11:51:56,276 DEBUG    [PngImagePlugin.py:190] STREAM b'pHYs' 110 9
2023-11-17:11:51:56,276 DEBUG    [PngImagePlugin.py:190] STREAM b'IDAT' 131 40713
2023-11-17:13:37:27,269 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:13:37:27,295 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: [\'Are\', \'women\', \'clothing\', \'more\', \'expensive?\'] \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:13:37:27,295 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:13:37:27,331 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:13:37:28,900 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:13:37:28,903 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=895 request_id=8fb8822478cbc5bf6afe4076ec970c16 response_code=200
2023-11-17:13:37:28,916 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:13:37:29,725 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:13:37:29,734 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:13:37:30,055 DEBUG    [config.py:244] Starting component System
2023-11-17:13:37:30,055 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:13:37:30,056 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:13:37:30,056 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:13:37:30,056 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:13:37:30,064 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:13:37:30,064 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:13:37:30,424 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:13:37:30,572 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:13:37:31,155 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:13:37:31,316 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:13:37:31,317 INFO     [vector_search.py:103] Element: (1700092353790055, 'Current Price') - Score: 0.6897369027137756
2023-11-17:13:37:31,317 INFO     [vector_search.py:103] Element: (1700092353790055, 'Previous Price') - Score: 0.6620612740516663
2023-11-17:13:37:31,317 INFO     [vector_search.py:103] Element: (1700092353790055, 'Price Per Each') - Score: 0.6417405605316162
2023-11-17:13:37:31,317 INFO     [vector_search.py:103] Element: (1700092353790055, 'Amount') - Score: 0.6214432716369629
2023-11-17:13:37:31,317 INFO     [vector_search.py:103] Element: (1700092408519074, 'Price per Unit') - Score: 0.6212952136993408
2023-11-17:13:37:31,336 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:13:37:31,336 INFO     [vector_search.py:103] Element: (1700092353790055, 'Category') - Score: 1.0
2023-11-17:13:37:31,337 INFO     [vector_search.py:103] Element: (1700092385555876, 'Category') - Score: 1.0
2023-11-17:13:37:31,337 INFO     [vector_search.py:103] Element: (170009236950698, 'Card_Category') - Score: 0.621566891670227
2023-11-17:13:37:31,337 INFO     [vector_search.py:103] Element: (170009236950698, 'Income_Category') - Score: 0.5497117042541504
2023-11-17:13:37:31,337 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 0.41595616936683655
2023-11-17:13:37:31,337 INFO     [prebuilt.py:526] SELECTED TABLES
2023-11-17:13:37:31,411 INFO     [prebuilt.py:536] 
                              Name Current Price Previous Price  \
0                 English Cucumber          1.99           1.99   
1                      Green Onion          1.29           1.29   
2  Bi-Colour Corn, Corn on the Cob          0.99           0.99   

  Price Per Each          Category      Product ID  \
0      $1.99/1ea  Fresh Vegetables  20070132001_EA   
1      $1.29/1ea  Fresh Vegetables  20107500001_EA   
2      $0.99/1ea  Fresh Vegetables  20131170001_EA   

                                         Product URL Amount  Units  
0  https://www.realcanadiansuperstore.ca/english-...      1     ea  
1  https://www.realcanadiansuperstore.ca/green-on...      1  bunch  
2  https://www.realcanadiansuperstore.ca/bi-colou...      1     ea  
2023-11-17:13:37:31,430 INFO     [logger.py:73] Question: ['Are', 'women', 'clothing', 'more', 'expensive?']
2023-11-17:13:37:31,431 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:13:37:31,432 INFO     [logger.py:73] Prompt ID: 7ba719ec-a9a8-4f34-bbb2-663063c0cc2d
2023-11-17:13:37:31,474 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 17259 rows and 9 columns.
This is the metadata of the dataframe dfs[0]:
Name,Current Price,Previous Price,Price Per Each,Category,Product ID,Product URL,Amount,Units
"Bi-Colour Corn, Corn o...", 0.99, 0.99,$0.99/1ea,Fresh Vegetables,20131170001_EA,https://www.realcanadi...,1,ea
Red Peppers    ..., 2.38, 2.38,$9.90/1kg,Fresh Vegetables,20007535001_KG,https://www.realcanadi...,1,ea
"Romaine Heart, 3 Pack...", 6.00, 6.00,$2.00/1ea,Fresh Vegetables,20067389001_EA,https://www.realcanadi...,3,pack
English Cucumber..., 1.99, 1.99,$1.99/1ea,Fresh Vegetables,20070132001_EA,https://www.realcanadi...,1,ea
Green Onion..., 1.29, 1.29,$1.29/1ea,Fresh Vegetables,20107500001_EA,https://www.realcanadi...,1,bunch
</dataframe>

<conversation>
User: ['Are', 'women', 'clothing', 'more', 'expensive?']
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-17:13:37:31,477 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:13:37:31,477 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 17259 rows and 9 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nName,Current Price,Previous Price,Price Per Each,Category,Product ID,Product URL,Amount,Units\\n\\"Bi-Colour Corn, Corn o...\\", 0.99, 0.99,$0.99/1ea,Fresh Vegetables,20131170001_EA,https://www.realcanadi...,1,ea\\nRed Peppers    ..., 2.38, 2.38,$9.90/1kg,Fresh Vegetables,20007535001_KG,https://www.realcanadi...,1,ea\\n\\"Romaine Heart, 3 Pack...\\", 6.00, 6.00,$2.00/1ea,Fresh Vegetables,20067389001_EA,https://www.realcanadi...,3,pack\\nEnglish Cucumber..., 1.99, 1.99,$1.99/1ea,Fresh Vegetables,20070132001_EA,https://www.realcanadi...,1,ea\\nGreen Onion..., 1.29, 1.29,$1.29/1ea,Fresh Vegetables,20107500001_EA,https://www.realcanadi...,1,bunch\\n</dataframe>\\n\\n<conversation>\\nUser: [\'Are\', \'women\', \'clothing\', \'more\', \'expensive?\']\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-17:13:37:31,868 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:13:37:59,932 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:13:37:59,934 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=27628 request_id=4851b858254aac343813a048bd0b6cb4 response_code=200
2023-11-17:13:37:59,952 INFO     [logger.py:73] Code generated:
```
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    # The user's question is about women's clothing prices, but the provided dataframe does not contain any information about clothing.
    # Therefore, we cannot answer the user's question with the given data.
    return {"type": "string", "value": "The provided data does not contain information about clothing prices."}
```

2023-11-17:13:37:59,954 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    return {'type': 'string', 'value': 'The provided data does not contain information about clothing prices.'}
        ```
2023-11-17:13:37:59,956 INFO     [logger.py:73] Answer: {'type': 'string', 'value': 'The provided data does not contain information about clothing prices.'}
2023-11-17:13:37:59,957 INFO     [logger.py:73] Executed in: 28.527352571487427s
2023-11-17:13:39:19,047 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:13:39:19,048 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: [\'Are\', \'women\', \'clothing\', \'more\', \'profitable?\'] \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:13:39:19,048 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:13:39:19,050 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:13:39:20,009 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:13:39:20,012 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=570 request_id=33b7ef3d4155f992417a557d4209bec6 response_code=200
2023-11-17:13:39:20,027 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:13:39:20,898 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:13:39:20,906 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:13:39:21,232 DEBUG    [config.py:244] Starting component System
2023-11-17:13:39:21,232 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:13:39:21,232 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:13:39:21,232 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:13:39:21,232 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:13:39:21,241 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:13:39:21,241 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:13:39:21,598 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:13:39:21,749 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:13:39:22,025 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:13:39:22,458 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:13:39:22,458 INFO     [vector_search.py:103] Element: (1700092377314948, 'Revenue') - Score: 1.0
2023-11-17:13:39:22,458 INFO     [vector_search.py:103] Element: (170009239686281, 'Revenue') - Score: 1.0
2023-11-17:13:39:22,458 INFO     [vector_search.py:103] Element: (1700092381859424, 'Monthly Revenue') - Score: 0.7277557253837585
2023-11-17:13:39:22,458 INFO     [vector_search.py:103] Element: (170009239686281, 'Target Revenue') - Score: 0.6923664808273315
2023-11-17:13:39:22,458 INFO     [vector_search.py:103] Element: (1700092408519074, 'Operating Profit') - Score: 0.641228199005127
2023-11-17:13:39:22,474 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:13:39:22,474 INFO     [vector_search.py:103] Element: (1700092401406344, 'gender') - Score: 1.0000001192092896
2023-11-17:13:39:22,474 INFO     [vector_search.py:103] Element: (1700092385555876, 'Gender') - Score: 1.0000001192092896
2023-11-17:13:39:22,475 INFO     [vector_search.py:103] Element: (1700092381859424, 'Gender') - Score: 1.0000001192092896
2023-11-17:13:39:22,475 INFO     [vector_search.py:103] Element: (1700092390869348, 'Gender') - Score: 1.0000001192092896
2023-11-17:13:39:22,475 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 1.0
2023-11-17:13:39:22,492 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:13:39:22,492 INFO     [vector_search.py:103] Element: (1700092353790055, 'Category') - Score: 1.0
2023-11-17:13:39:22,492 INFO     [vector_search.py:103] Element: (1700092385555876, 'Category') - Score: 1.0
2023-11-17:13:39:22,492 INFO     [vector_search.py:103] Element: (170009236950698, 'Card_Category') - Score: 0.621566891670227
2023-11-17:13:39:22,492 INFO     [vector_search.py:103] Element: (170009236950698, 'Income_Category') - Score: 0.5497117042541504
2023-11-17:13:39:22,492 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 0.41595616936683655
2023-11-17:13:39:22,492 INFO     [prebuilt.py:523] SELECTED TABLES
2023-11-17:13:39:22,507 INFO     [prebuilt.py:533] 
   User ID Subscription Type  Monthly Revenue Join Date Last Payment Date  \
0        1             Basic               10  15-01-22          10-06-23   
1        2           Premium               15  05-09-21          22-06-23   
2        3          Standard               12  28-02-23          27-06-23   

          Country  Age  Gender      Device Plan Duration  
0   United States   28    Male  Smartphone       1 Month  
1          Canada   35  Female      Tablet       1 Month  
2  United Kingdom   42    Male    Smart TV       1 Month  
2023-11-17:13:39:22,535 INFO     [logger.py:73] Question: ['Are', 'women', 'clothing', 'more', 'profitable?']
2023-11-17:13:39:22,536 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:13:39:22,537 INFO     [logger.py:73] Prompt ID: f895a17a-a4b9-4dbf-a190-1afde126de4d
2023-11-17:13:39:22,553 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 2500 rows and 10 columns.
This is the metadata of the dataframe dfs[0]:
User ID,Subscription Type,Monthly Revenue,Join Date,Last Payment Date,Country,Age,Gender,Device,Plan Duration
5,Basic,10,01-05-23,28-06-23,Germany,33,Male,Smartphone,1 Month
4,Standard,12,10-07-22,26-06-23,Australia,51,Female,Laptop,1 Month
2,Premium,15,05-09-21,22-06-23,Canada,35,Female,Tablet,1 Month
3,Standard,12,28-02-23,27-06-23,United Kingdom,42,Male,Smart TV,1 Month
1,Basic,10,15-01-22,10-06-23,United States,28,Male,Smartphone,1 Month
</dataframe>

<conversation>
User: ['Are', 'women', 'clothing', 'more', 'profitable?']
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-17:13:39:22,554 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:13:39:22,554 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 2500 rows and 10 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nUser ID,Subscription Type,Monthly Revenue,Join Date,Last Payment Date,Country,Age,Gender,Device,Plan Duration\\n5,Basic,10,01-05-23,28-06-23,Germany,33,Male,Smartphone,1 Month\\n4,Standard,12,10-07-22,26-06-23,Australia,51,Female,Laptop,1 Month\\n2,Premium,15,05-09-21,22-06-23,Canada,35,Female,Tablet,1 Month\\n3,Standard,12,28-02-23,27-06-23,United Kingdom,42,Male,Smart TV,1 Month\\n1,Basic,10,15-01-22,10-06-23,United States,28,Male,Smartphone,1 Month\\n</dataframe>\\n\\n<conversation>\\nUser: [\'Are\', \'women\', \'clothing\', \'more\', \'profitable?\']\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-17:13:39:22,659 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:13:39:54,718 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:13:39:54,719 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=31516 request_id=3e5962a6c3d94c7a1ada44b9b040009f response_code=200
2023-11-17:13:39:54,729 INFO     [logger.py:73] Code generated:
```
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    # The user's question is about profitability of women clothing but there is no relevant data in the provided dataframe.
    # Therefore, we cannot answer the user's question with the given data.
    return {"type": "string", "value": "The provided data does not contain information about clothing profitability."}
```

2023-11-17:13:39:54,731 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    return {'type': 'string', 'value': 'The provided data does not contain information about clothing profitability.'}
        ```
2023-11-17:13:39:54,733 INFO     [logger.py:73] Answer: {'type': 'string', 'value': 'The provided data does not contain information about clothing profitability.'}
2023-11-17:13:39:54,733 INFO     [logger.py:73] Executed in: 32.197890758514404s
2023-11-17:13:41:48,050 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:13:41:48,051 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: [\'Does\', \'women\', \'clothing\', \'generate\', \'more\', \'sales\', \'volume?\'] \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:13:41:48,051 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:13:41:48,053 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:13:41:49,512 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:13:41:49,516 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=754 request_id=7d23e5b2b482cca399f460af7c622750 response_code=200
2023-11-17:13:41:49,528 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:13:41:50,589 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:13:41:50,599 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:13:41:50,913 DEBUG    [config.py:244] Starting component System
2023-11-17:13:41:50,913 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:13:41:50,913 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:13:41:50,913 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:13:41:50,913 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:13:41:50,924 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:13:41:50,924 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:13:41:51,315 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:13:41:51,429 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:13:41:51,730 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:13:41:52,181 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:13:41:52,181 INFO     [vector_search.py:103] Element: (1700092408519074, 'Total Sales') - Score: 0.7162902355194092
2023-11-17:13:41:52,181 INFO     [vector_search.py:103] Element: (1700092401406344, 'Sales ($)') - Score: 0.6869168281555176
2023-11-17:13:41:52,181 INFO     [vector_search.py:103] Element: (1700092408519074, 'Sales Method') - Score: 0.6070613861083984
2023-11-17:13:41:52,181 INFO     [vector_search.py:103] Element: (170009239686281, 'Revenue') - Score: 0.5000911951065063
2023-11-17:13:41:52,181 INFO     [vector_search.py:103] Element: (1700092377314948, 'Revenue') - Score: 0.5000911951065063
2023-11-17:13:41:52,200 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:13:41:52,200 INFO     [vector_search.py:103] Element: (1700092385555876, 'Color') - Score: 0.5329426527023315
2023-11-17:13:41:52,200 INFO     [vector_search.py:103] Element: (1700092385555876, 'Size') - Score: 0.44013187289237976
2023-11-17:13:41:52,200 INFO     [vector_search.py:103] Element: (1700092408519074, 'Product') - Score: 0.4397718906402588
2023-11-17:13:41:52,200 INFO     [vector_search.py:103] Element: (1700092408519074, 'Retailer') - Score: 0.4087628722190857
2023-11-17:13:41:52,200 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 0.4017546772956848
2023-11-17:13:41:52,219 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:13:41:52,220 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 0.6253940463066101
2023-11-17:13:41:52,220 INFO     [vector_search.py:103] Element: (1700092381859424, 'Gender') - Score: 0.6253939867019653
2023-11-17:13:41:52,220 INFO     [vector_search.py:103] Element: (1700092385555876, 'Gender') - Score: 0.6253939867019653
2023-11-17:13:41:52,220 INFO     [vector_search.py:103] Element: (1700092401406344, 'gender') - Score: 0.6253939867019653
2023-11-17:13:41:52,220 INFO     [vector_search.py:103] Element: (1700092390869348, 'Gender') - Score: 0.6253939867019653
2023-11-17:13:41:52,220 INFO     [prebuilt.py:523] SELECTED TABLES
2023-11-17:13:41:52,475 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:13:41:54,953 INFO     [prebuilt.py:533] 
      Retailer  Retailer ID Invoice Date     Region     State      City  \
0  Foot Locker      1185732   2020-01-01  Northeast  New York  New York   
1  Foot Locker      1185732   2020-01-02  Northeast  New York  New York   
2  Foot Locker      1185732   2020-01-03  Northeast  New York  New York   

                   Product  Price per Unit  Units Sold  Total Sales  \
0    Men's Street Footwear              50        1200     600000.0   
1  Men's Athletic Footwear              50        1000     500000.0   
2  Women's Street Footwear              40        1000     400000.0   

   Operating Profit  Operating Margin Sales Method  
0          300000.0              0.50     In-store  
1          150000.0              0.30     In-store  
2          140000.0              0.35     In-store  
2023-11-17:13:41:55,056 INFO     [logger.py:73] Question: ['Does', 'women', 'clothing', 'generate', 'more', 'sales', 'volume?']
2023-11-17:13:41:55,059 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:13:41:55,060 INFO     [logger.py:73] Prompt ID: 9e9d1c8e-1ad6-4448-b253-a9f180e89caa
2023-11-17:13:41:55,099 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 9648 rows and 13 columns.
This is the metadata of the dataframe dfs[0]:
Retailer,Retailer ID,Invoice Date,Region,State,City,Product,Price per Unit,Units Sold,Total Sales,Operating Profit,Operating Margin,Sales Method
Foot Locker,1185732,2020-01-05,Northeast,New York,New York,Men's Apparel,60,900,540000.0,162000.0,0.3,In-store
Foot Locker,1185732,2020-01-03,Northeast,New York,New York,Women's Street Footwear,40,1000,400000.0,140000.0,0.35,In-store
Foot Locker,1185732,2020-01-04,Northeast,New York,New York,Women's Athletic Footwear,45,850,382500.0,133875.0,0.35,In-store
Foot Locker,1185732,2020-01-01,Northeast,New York,New York,Men's Street Footwear,50,1200,600000.0,300000.0,0.5,In-store
Foot Locker,1185732,2020-01-02,Northeast,New York,New York,Men's Athletic Footwear,50,1000,500000.0,150000.0,0.3,In-store
</dataframe>

<conversation>
User: ['Does', 'women', 'clothing', 'generate', 'more', 'sales', 'volume?']
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-17:13:41:55,101 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:13:41:55,101 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 9648 rows and 13 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nRetailer,Retailer ID,Invoice Date,Region,State,City,Product,Price per Unit,Units Sold,Total Sales,Operating Profit,Operating Margin,Sales Method\\nFoot Locker,1185732,2020-01-05,Northeast,New York,New York,Men\'s Apparel,60,900,540000.0,162000.0,0.3,In-store\\nFoot Locker,1185732,2020-01-03,Northeast,New York,New York,Women\'s Street Footwear,40,1000,400000.0,140000.0,0.35,In-store\\nFoot Locker,1185732,2020-01-04,Northeast,New York,New York,Women\'s Athletic Footwear,45,850,382500.0,133875.0,0.35,In-store\\nFoot Locker,1185732,2020-01-01,Northeast,New York,New York,Men\'s Street Footwear,50,1200,600000.0,300000.0,0.5,In-store\\nFoot Locker,1185732,2020-01-02,Northeast,New York,New York,Men\'s Athletic Footwear,50,1000,500000.0,150000.0,0.3,In-store\\n</dataframe>\\n\\n<conversation>\\nUser: [\'Does\', \'women\', \'clothing\', \'generate\', \'more\', \'sales\', \'volume?\']\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-17:13:42:24,326 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:13:42:24,327 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=28832 request_id=b213b2034e7a66fd41612f77cc077b38 response_code=200
2023-11-17:13:42:24,335 INFO     [logger.py:73] Code generated:
```
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    # Preprocessing and cleaning data if necessary
    df = dfs[0]
    
    # Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    # Filter the dataframe to only include rows where the product is either men's or women's clothing
    df_clothing = df[df['Product'].str.contains("Men's Apparel|Women's Street Footwear|Women's Athletic Footwear")]
    
    # Group by product and sum the units sold
    df_grouped = df_clothing.groupby('Product')['Units Sold'].sum().reset_index()
    
    # Check if women's clothing generates more sales volume than men's
    womens_clothing_sales = df_grouped[df_grouped['Product'].str.contains("Women's")]['Units Sold'].sum()
    mens_clothing_sales = df_grouped[df_grouped['Product'].str.contains("Men's")]['Units Sold'].sum()
    
    if womens_clothing_sales > mens_clothing_sales:
        return { "type": "string", "value": "Yes, women's clothing generates more sales volume." }
    else:
        return { "type": "string", "value": "No, men's clothing generates more sales volume." }
```

2023-11-17:13:42:24,338 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    df = dfs[0]
    df_clothing = df[df['Product'].str.contains("Men's Apparel|Women's Street Footwear|Women's Athletic Footwear")]
    df_grouped = df_clothing.groupby('Product')['Units Sold'].sum().reset_index()
    womens_clothing_sales = df_grouped[df_grouped['Product'].str.contains("Women's")]['Units Sold'].sum()
    mens_clothing_sales = df_grouped[df_grouped['Product'].str.contains("Men's")]['Units Sold'].sum()
    if womens_clothing_sales > mens_clothing_sales:
        return {'type': 'string', 'value': "Yes, women's clothing generates more sales volume."}
    else:
        return {'type': 'string', 'value': "No, men's clothing generates more sales volume."}
        ```
2023-11-17:13:42:24,364 INFO     [logger.py:73] Answer: {'type': 'string', 'value': "Yes, women's clothing generates more sales volume."}
2023-11-17:13:42:24,364 INFO     [logger.py:73] Executed in: 29.307987451553345s
2023-11-17:14:35:36,447 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:14:35:36,448 DEBUG    [util.py:60] api_version=None data='{"messages": [{"role": "user", "content": "Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation.\\n\\nEXAMPLE: \\n Background Info: \'Request Item List\' is the request. We have several dataframes that help us to answer \'Request Item List\'. Return useful column names to answer \'Request Item List\'. We will query our dataframes via those column names. \\n Rules: 1. Return a list with your results. 2. Do NOT add any explanation. \\n Request Item List: How much profit were made in each country in our company? \\n Answer: [\'revenue\', \'country\']\\n\\nRequest Item List: [\'Do\', \'women\', \'clothing\', \'generate\', \'more\', \'sales\', \'volume?\'] \\n Answer:"}], "model": "gpt-3.5-turbo", "max_tokens": null, "stream": false, "n": 1, "temperature": 0.0}' message='Post details'
2023-11-17:14:35:36,449 DEBUG    [retry.py:351] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-11-17:14:35:36,454 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): api.openai.com:443
2023-11-17:14:35:37,374 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:14:35:37,377 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=371 request_id=3a80e63ef5f8f7ec5e4d758ccc228f13 response_code=200
2023-11-17:14:35:37,382 INFO     [SentenceTransformer.py:66] Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2023-11-17:14:35:38,569 INFO     [SentenceTransformer.py:105] Use pytorch device: cpu
2023-11-17:14:35:38,581 INFO     [posthog.py:20] Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.
2023-11-17:14:35:38,988 DEBUG    [config.py:244] Starting component System
2023-11-17:14:35:38,988 DEBUG    [config.py:244] Starting component Posthog
2023-11-17:14:35:38,988 DEBUG    [config.py:244] Starting component OpenTelemetryClient
2023-11-17:14:35:38,988 DEBUG    [config.py:244] Starting component SimpleAssignmentPolicy
2023-11-17:14:35:38,988 DEBUG    [config.py:244] Starting component SqliteDB
2023-11-17:14:35:39,000 DEBUG    [config.py:244] Starting component LocalSegmentManager
2023-11-17:14:35:39,000 DEBUG    [config.py:244] Starting component SegmentAPI
2023-11-17:14:35:39,486 DEBUG    [config.py:244] Starting component LocalHnswSegment
2023-11-17:14:35:39,506 DEBUG    [connectionpool.py:1019] Starting new HTTPS connection (1): app.posthog.com:443
2023-11-17:14:35:39,846 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:14:35:40,474 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:14:35:40,852 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:14:35:40,852 INFO     [vector_search.py:103] Element: (1700092408519074, 'Total Sales') - Score: 0.7162902355194092
2023-11-17:14:35:40,853 INFO     [vector_search.py:103] Element: (1700092401406344, 'Sales ($)') - Score: 0.6869168281555176
2023-11-17:14:35:40,853 INFO     [vector_search.py:103] Element: (1700092408519074, 'Sales Method') - Score: 0.6070613861083984
2023-11-17:14:35:40,853 INFO     [vector_search.py:103] Element: (170009239686281, 'Revenue') - Score: 0.5000911951065063
2023-11-17:14:35:40,853 INFO     [vector_search.py:103] Element: (1700092377314948, 'Revenue') - Score: 0.5000911951065063
2023-11-17:14:35:40,892 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:14:35:40,892 INFO     [vector_search.py:103] Element: (1700092401406344, 'gender') - Score: 1.0000001192092896
2023-11-17:14:35:40,892 INFO     [vector_search.py:103] Element: (1700092385555876, 'Gender') - Score: 1.0000001192092896
2023-11-17:14:35:40,893 INFO     [vector_search.py:103] Element: (1700092381859424, 'Gender') - Score: 1.0000001192092896
2023-11-17:14:35:40,893 INFO     [vector_search.py:103] Element: (1700092390869348, 'Gender') - Score: 1.0000001192092896
2023-11-17:14:35:40,899 INFO     [vector_search.py:103] Element: (170009236950698, 'Gender') - Score: 1.0
2023-11-17:14:35:40,942 INFO     [vector_search.py:99] Similarity Result:
2023-11-17:14:35:40,942 INFO     [vector_search.py:103] Element: (1700092385555876, 'Category') - Score: 0.7153558731079102
2023-11-17:14:35:40,942 INFO     [vector_search.py:103] Element: (1700092353790055, 'Category') - Score: 0.7153558731079102
2023-11-17:14:35:40,942 INFO     [vector_search.py:103] Element: (1700092353790055, 'Product URL') - Score: 0.518877387046814
2023-11-17:14:35:40,942 INFO     [vector_search.py:103] Element: (1700092408519074, 'Product') - Score: 0.515606701374054
2023-11-17:14:35:40,942 INFO     [vector_search.py:103] Element: (1700092377314948, 'ProductRelated') - Score: 0.4992496073246002
2023-11-17:14:35:40,942 INFO     [prebuilt.py:523] SELECTED TABLES
2023-11-17:14:35:40,962 INFO     [prebuilt.py:533] 
   Unnamed: 0  TV Ad Budget ($)  Radio Ad Budget ($)  Newspaper Ad Budget ($)  \
0           1             230.1                 37.8                     69.2   
1           2              44.5                 39.3                     45.1   
2           3              17.2                 45.9                     69.3   

   Sales ($)  gender  
0       22.1  female  
1       10.4    male  
2        9.3    male  
2023-11-17:14:35:41,206 INFO     [logger.py:73] Question: ['Do', 'women', 'clothing', 'generate', 'more', 'sales', 'volume?']
2023-11-17:14:35:41,211 INFO     [logger.py:73] Running PandasAI with openai LLM...
2023-11-17:14:35:41,214 INFO     [logger.py:73] Prompt ID: 884d9a59-d13f-4055-9018-84a60a72f6f5
2023-11-17:14:35:41,267 INFO     [logger.py:73] Using prompt: You are provided with the following pandas DataFrames:

<dataframe>
Dataframe dfs[0], with 200 rows and 6 columns.
This is the metadata of the dataframe dfs[0]:
Unnamed: 0,TV Ad Budget ($),Radio Ad Budget ($),Newspaper Ad Budget ($),Sales ($),gender
2,44.5,39.3,45.1,10.4,male
4,151.5,41.3,58.5,18.5,male
5,180.8,10.8,58.4,12.9,female
1,230.1,37.8,69.2,22.1,female
3,17.2,45.9,69.3,9.3,male
</dataframe>

<conversation>
User: ['Do', 'women', 'clothing', 'generate', 'more', 'sales', 'volume?']
</conversation>

This is the initial python function. Do not change the params. Given the context, use the right dataframes.
```python
# TODO import all the dependencies required
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
```

Take a deep breath and reason step-by-step. Act as a senior data analyst.
In the answer, you must never write the "technical" names of the tables.
Based on the last message in the conversation:
- return the updated analyze_data function wrapped within ```python ```
2023-11-17:14:35:41,272 DEBUG    [util.py:60] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-11-17:14:35:41,273 DEBUG    [util.py:60] api_version=None data='{"temperature": 0, "max_tokens": 1000, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0.6, "model": "gpt-4", "messages": [{"role": "system", "content": "You are provided with the following pandas DataFrames:\\n\\n<dataframe>\\nDataframe dfs[0], with 200 rows and 6 columns.\\nThis is the metadata of the dataframe dfs[0]:\\nUnnamed: 0,TV Ad Budget ($),Radio Ad Budget ($),Newspaper Ad Budget ($),Sales ($),gender\\n2,44.5,39.3,45.1,10.4,male\\n4,151.5,41.3,58.5,18.5,male\\n5,180.8,10.8,58.4,12.9,female\\n1,230.1,37.8,69.2,22.1,female\\n3,17.2,45.9,69.3,9.3,male\\n</dataframe>\\n\\n<conversation>\\nUser: [\'Do\', \'women\', \'clothing\', \'generate\', \'more\', \'sales\', \'volume?\']\\n</conversation>\\n\\nThis is the initial python function. Do not change the params. Given the context, use the right dataframes.\\n```python\\n# TODO import all the dependencies required\\nimport pandas as pd\\n\\ndef analyze_data(dfs: list[pd.DataFrame]) -> dict:\\n    \\"\\"\\"\\n    Analyze the data, using the provided dataframes (`dfs`).\\n    1. Prepare: Preprocessing and cleaning data if necessary\\n    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)\\n    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)\\n    At the end, return a dictionary of:\\n    - type (possible values \\"string\\", \\"number\\", \\"dataframe\\", \\"plot\\")\\n    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)\\n    Examples: \\n        { \\"type\\": \\"string\\", \\"value\\": f\\"The highest salary is {highest_salary}.\\" }\\n        or\\n        { \\"type\\": \\"number\\", \\"value\\": 125 }\\n        or\\n        { \\"type\\": \\"dataframe\\", \\"value\\": pd.DataFrame({...}) }\\n        or\\n        { \\"type\\": \\"plot\\", \\"value\\": \\"temp_chart.png\\" }\\n    \\"\\"\\"\\n```\\n\\nTake a deep breath and reason step-by-step. Act as a senior data analyst.\\nIn the answer, you must never write the \\"technical\\" names of the tables.\\nBased on the last message in the conversation:\\n- return the updated analyze_data function wrapped within ```python ```"}]}' message='Post details'
2023-11-17:14:35:41,597 DEBUG    [connectionpool.py:474] https://app.posthog.com:443 "POST /batch/ HTTP/1.1" 200 None
2023-11-17:14:36:23,422 DEBUG    [connectionpool.py:474] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-11-17:14:36:23,428 DEBUG    [util.py:60] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=41708 request_id=126aac4b468779a75146c1675848fe75 response_code=200
2023-11-17:14:36:23,439 INFO     [logger.py:73] Code generated:
```
import pandas as pd

def analyze_data(dfs: list[pd.DataFrame]) -> dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    
    # Extract the relevant dataframe
    df = dfs[0]
    
    # Group by gender and calculate the total sales volume
    sales_by_gender = df.groupby('gender')['Sales ($)'].sum()
    
    # Check if women's clothing generates more sales volume
    if sales_by_gender['female'] > sales_by_gender['male']:
        result = "Yes, women's clothing generates more sales volume."
    else:
        result = "No, women's clothing does not generate more sales volume."
    
    return { "type": "string", "value": result }
```

2023-11-17:14:36:23,448 INFO     [logger.py:73] 
Code running:
```
def analyze_data(dfs: list[pd.DataFrame]) ->dict:
    """
    Analyze the data, using the provided dataframes (`dfs`).
    1. Prepare: Preprocessing and cleaning data if necessary
    2. Process: Manipulating data for analysis (grouping, filtering, aggregating, etc.)
    3. Analyze: Conducting the actual analysis (if the user asks to plot a chart you must save it as an image in temp_chart.png and not show the chart.)
    At the end, return a dictionary of:
    - type (possible values "string", "number", "dataframe", "plot")
    - value (can be a string, a dataframe or the path of the plot, NOT a dictionary)
    Examples: 
        { "type": "string", "value": f"The highest salary is {highest_salary}." }
        or
        { "type": "number", "value": 125 }
        or
        { "type": "dataframe", "value": pd.DataFrame({...}) }
        or
        { "type": "plot", "value": "temp_chart.png" }
    """
    df = dfs[0]
    sales_by_gender = df.groupby('gender')['Sales ($)'].sum()
    if sales_by_gender['female'] > sales_by_gender['male']:
        result = "Yes, women's clothing generates more sales volume."
    else:
        result = "No, women's clothing does not generate more sales volume."
    return {'type': 'string', 'value': result}
        ```
2023-11-17:14:36:23,468 INFO     [logger.py:73] Answer: {'type': 'string', 'value': "Yes, women's clothing generates more sales volume."}
2023-11-17:14:36:23,469 INFO     [logger.py:73] Executed in: 42.26345157623291s
